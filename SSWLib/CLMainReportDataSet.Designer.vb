'------------------------------------------------------------------------------
' <auto-generated>
'     Il codice è stato generato da uno strumento.
'     Versione runtime:4.0.30319.42000
'
'     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
'     il codice viene rigenerato.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("CLMainReportDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class CLMainReportDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableHeaderDataTable As HeaderDataTableDataTable
    
    Private tablePerformanceAccordanceDataTable As PerformanceAccordanceDataTableDataTable
    
    Private tableWorkingPointDataTable As WorkingPointDataTableDataTable
    
    Private tableTemperatureConditionsAndHumidityDataTable As TemperatureConditionsAndHumidityDataTableDataTable
    
    Private tableHeatExchangerPerformancesDataTable As HeatExchangerPerformancesDataTableDataTable
    
    Private tableSoundPowerDataTableOld As SoundPowerDataTableOldDataTable
    
    Private tableDiagramDataTable As DiagramDataTableDataTable
    
    Private tableSAPDataTable As SAPDataTableDataTable
    
    Private tableSAPItemsDataTable As SAPItemsDataTableDataTable
    
    Private tableSoundPowerDataTable As SoundPowerDataTableDataTable
    
    Private tableSoundPowerHeaderDataTable As SoundPowerHeaderDataTableDataTable
    
    Private tableCO2LevelRoom As CO2LevelRoomDataTable
    
    Private tableCO2LevelUse As CO2LevelUseDataTable
    
    Private tableCO2LevelParameters As CO2LevelParametersDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("HeaderDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New HeaderDataTableDataTable(ds.Tables("HeaderDataTable")))
            End If
            If (Not (ds.Tables("PerformanceAccordanceDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New PerformanceAccordanceDataTableDataTable(ds.Tables("PerformanceAccordanceDataTable")))
            End If
            If (Not (ds.Tables("WorkingPointDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New WorkingPointDataTableDataTable(ds.Tables("WorkingPointDataTable")))
            End If
            If (Not (ds.Tables("TemperatureConditionsAndHumidityDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New TemperatureConditionsAndHumidityDataTableDataTable(ds.Tables("TemperatureConditionsAndHumidityDataTable")))
            End If
            If (Not (ds.Tables("HeatExchangerPerformancesDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New HeatExchangerPerformancesDataTableDataTable(ds.Tables("HeatExchangerPerformancesDataTable")))
            End If
            If (Not (ds.Tables("SoundPowerDataTableOld")) Is Nothing) Then
                MyBase.Tables.Add(New SoundPowerDataTableOldDataTable(ds.Tables("SoundPowerDataTableOld")))
            End If
            If (Not (ds.Tables("DiagramDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New DiagramDataTableDataTable(ds.Tables("DiagramDataTable")))
            End If
            If (Not (ds.Tables("SAPDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New SAPDataTableDataTable(ds.Tables("SAPDataTable")))
            End If
            If (Not (ds.Tables("SAPItemsDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New SAPItemsDataTableDataTable(ds.Tables("SAPItemsDataTable")))
            End If
            If (Not (ds.Tables("SoundPowerDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New SoundPowerDataTableDataTable(ds.Tables("SoundPowerDataTable")))
            End If
            If (Not (ds.Tables("SoundPowerHeaderDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New SoundPowerHeaderDataTableDataTable(ds.Tables("SoundPowerHeaderDataTable")))
            End If
            If (Not (ds.Tables("CO2LevelRoom")) Is Nothing) Then
                MyBase.Tables.Add(New CO2LevelRoomDataTable(ds.Tables("CO2LevelRoom")))
            End If
            If (Not (ds.Tables("CO2LevelUse")) Is Nothing) Then
                MyBase.Tables.Add(New CO2LevelUseDataTable(ds.Tables("CO2LevelUse")))
            End If
            If (Not (ds.Tables("CO2LevelParameters")) Is Nothing) Then
                MyBase.Tables.Add(New CO2LevelParametersDataTable(ds.Tables("CO2LevelParameters")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HeaderDataTable() As HeaderDataTableDataTable
        Get
            Return Me.tableHeaderDataTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PerformanceAccordanceDataTable() As PerformanceAccordanceDataTableDataTable
        Get
            Return Me.tablePerformanceAccordanceDataTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property WorkingPointDataTable() As WorkingPointDataTableDataTable
        Get
            Return Me.tableWorkingPointDataTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TemperatureConditionsAndHumidityDataTable() As TemperatureConditionsAndHumidityDataTableDataTable
        Get
            Return Me.tableTemperatureConditionsAndHumidityDataTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HeatExchangerPerformancesDataTable() As HeatExchangerPerformancesDataTableDataTable
        Get
            Return Me.tableHeatExchangerPerformancesDataTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SoundPowerDataTableOld() As SoundPowerDataTableOldDataTable
        Get
            Return Me.tableSoundPowerDataTableOld
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DiagramDataTable() As DiagramDataTableDataTable
        Get
            Return Me.tableDiagramDataTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SAPDataTable() As SAPDataTableDataTable
        Get
            Return Me.tableSAPDataTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SAPItemsDataTable() As SAPItemsDataTableDataTable
        Get
            Return Me.tableSAPItemsDataTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SoundPowerDataTable() As SoundPowerDataTableDataTable
        Get
            Return Me.tableSoundPowerDataTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SoundPowerHeaderDataTable() As SoundPowerHeaderDataTableDataTable
        Get
            Return Me.tableSoundPowerHeaderDataTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CO2LevelRoom() As CO2LevelRoomDataTable
        Get
            Return Me.tableCO2LevelRoom
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CO2LevelUse() As CO2LevelUseDataTable
        Get
            Return Me.tableCO2LevelUse
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CO2LevelParameters() As CO2LevelParametersDataTable
        Get
            Return Me.tableCO2LevelParameters
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As CLMainReportDataSet = CType(MyBase.Clone,CLMainReportDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("HeaderDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New HeaderDataTableDataTable(ds.Tables("HeaderDataTable")))
            End If
            If (Not (ds.Tables("PerformanceAccordanceDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New PerformanceAccordanceDataTableDataTable(ds.Tables("PerformanceAccordanceDataTable")))
            End If
            If (Not (ds.Tables("WorkingPointDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New WorkingPointDataTableDataTable(ds.Tables("WorkingPointDataTable")))
            End If
            If (Not (ds.Tables("TemperatureConditionsAndHumidityDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New TemperatureConditionsAndHumidityDataTableDataTable(ds.Tables("TemperatureConditionsAndHumidityDataTable")))
            End If
            If (Not (ds.Tables("HeatExchangerPerformancesDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New HeatExchangerPerformancesDataTableDataTable(ds.Tables("HeatExchangerPerformancesDataTable")))
            End If
            If (Not (ds.Tables("SoundPowerDataTableOld")) Is Nothing) Then
                MyBase.Tables.Add(New SoundPowerDataTableOldDataTable(ds.Tables("SoundPowerDataTableOld")))
            End If
            If (Not (ds.Tables("DiagramDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New DiagramDataTableDataTable(ds.Tables("DiagramDataTable")))
            End If
            If (Not (ds.Tables("SAPDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New SAPDataTableDataTable(ds.Tables("SAPDataTable")))
            End If
            If (Not (ds.Tables("SAPItemsDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New SAPItemsDataTableDataTable(ds.Tables("SAPItemsDataTable")))
            End If
            If (Not (ds.Tables("SoundPowerDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New SoundPowerDataTableDataTable(ds.Tables("SoundPowerDataTable")))
            End If
            If (Not (ds.Tables("SoundPowerHeaderDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New SoundPowerHeaderDataTableDataTable(ds.Tables("SoundPowerHeaderDataTable")))
            End If
            If (Not (ds.Tables("CO2LevelRoom")) Is Nothing) Then
                MyBase.Tables.Add(New CO2LevelRoomDataTable(ds.Tables("CO2LevelRoom")))
            End If
            If (Not (ds.Tables("CO2LevelUse")) Is Nothing) Then
                MyBase.Tables.Add(New CO2LevelUseDataTable(ds.Tables("CO2LevelUse")))
            End If
            If (Not (ds.Tables("CO2LevelParameters")) Is Nothing) Then
                MyBase.Tables.Add(New CO2LevelParametersDataTable(ds.Tables("CO2LevelParameters")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableHeaderDataTable = CType(MyBase.Tables("HeaderDataTable"),HeaderDataTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHeaderDataTable) Is Nothing) Then
                Me.tableHeaderDataTable.InitVars
            End If
        End If
        Me.tablePerformanceAccordanceDataTable = CType(MyBase.Tables("PerformanceAccordanceDataTable"),PerformanceAccordanceDataTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePerformanceAccordanceDataTable) Is Nothing) Then
                Me.tablePerformanceAccordanceDataTable.InitVars
            End If
        End If
        Me.tableWorkingPointDataTable = CType(MyBase.Tables("WorkingPointDataTable"),WorkingPointDataTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableWorkingPointDataTable) Is Nothing) Then
                Me.tableWorkingPointDataTable.InitVars
            End If
        End If
        Me.tableTemperatureConditionsAndHumidityDataTable = CType(MyBase.Tables("TemperatureConditionsAndHumidityDataTable"),TemperatureConditionsAndHumidityDataTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTemperatureConditionsAndHumidityDataTable) Is Nothing) Then
                Me.tableTemperatureConditionsAndHumidityDataTable.InitVars
            End If
        End If
        Me.tableHeatExchangerPerformancesDataTable = CType(MyBase.Tables("HeatExchangerPerformancesDataTable"),HeatExchangerPerformancesDataTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHeatExchangerPerformancesDataTable) Is Nothing) Then
                Me.tableHeatExchangerPerformancesDataTable.InitVars
            End If
        End If
        Me.tableSoundPowerDataTableOld = CType(MyBase.Tables("SoundPowerDataTableOld"),SoundPowerDataTableOldDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSoundPowerDataTableOld) Is Nothing) Then
                Me.tableSoundPowerDataTableOld.InitVars
            End If
        End If
        Me.tableDiagramDataTable = CType(MyBase.Tables("DiagramDataTable"),DiagramDataTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDiagramDataTable) Is Nothing) Then
                Me.tableDiagramDataTable.InitVars
            End If
        End If
        Me.tableSAPDataTable = CType(MyBase.Tables("SAPDataTable"),SAPDataTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSAPDataTable) Is Nothing) Then
                Me.tableSAPDataTable.InitVars
            End If
        End If
        Me.tableSAPItemsDataTable = CType(MyBase.Tables("SAPItemsDataTable"),SAPItemsDataTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSAPItemsDataTable) Is Nothing) Then
                Me.tableSAPItemsDataTable.InitVars
            End If
        End If
        Me.tableSoundPowerDataTable = CType(MyBase.Tables("SoundPowerDataTable"),SoundPowerDataTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSoundPowerDataTable) Is Nothing) Then
                Me.tableSoundPowerDataTable.InitVars
            End If
        End If
        Me.tableSoundPowerHeaderDataTable = CType(MyBase.Tables("SoundPowerHeaderDataTable"),SoundPowerHeaderDataTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSoundPowerHeaderDataTable) Is Nothing) Then
                Me.tableSoundPowerHeaderDataTable.InitVars
            End If
        End If
        Me.tableCO2LevelRoom = CType(MyBase.Tables("CO2LevelRoom"),CO2LevelRoomDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCO2LevelRoom) Is Nothing) Then
                Me.tableCO2LevelRoom.InitVars
            End If
        End If
        Me.tableCO2LevelUse = CType(MyBase.Tables("CO2LevelUse"),CO2LevelUseDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCO2LevelUse) Is Nothing) Then
                Me.tableCO2LevelUse.InitVars
            End If
        End If
        Me.tableCO2LevelParameters = CType(MyBase.Tables("CO2LevelParameters"),CO2LevelParametersDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCO2LevelParameters) Is Nothing) Then
                Me.tableCO2LevelParameters.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "CLMainReportDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/CLReportDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableHeaderDataTable = New HeaderDataTableDataTable()
        MyBase.Tables.Add(Me.tableHeaderDataTable)
        Me.tablePerformanceAccordanceDataTable = New PerformanceAccordanceDataTableDataTable()
        MyBase.Tables.Add(Me.tablePerformanceAccordanceDataTable)
        Me.tableWorkingPointDataTable = New WorkingPointDataTableDataTable()
        MyBase.Tables.Add(Me.tableWorkingPointDataTable)
        Me.tableTemperatureConditionsAndHumidityDataTable = New TemperatureConditionsAndHumidityDataTableDataTable()
        MyBase.Tables.Add(Me.tableTemperatureConditionsAndHumidityDataTable)
        Me.tableHeatExchangerPerformancesDataTable = New HeatExchangerPerformancesDataTableDataTable()
        MyBase.Tables.Add(Me.tableHeatExchangerPerformancesDataTable)
        Me.tableSoundPowerDataTableOld = New SoundPowerDataTableOldDataTable()
        MyBase.Tables.Add(Me.tableSoundPowerDataTableOld)
        Me.tableDiagramDataTable = New DiagramDataTableDataTable()
        MyBase.Tables.Add(Me.tableDiagramDataTable)
        Me.tableSAPDataTable = New SAPDataTableDataTable()
        MyBase.Tables.Add(Me.tableSAPDataTable)
        Me.tableSAPItemsDataTable = New SAPItemsDataTableDataTable()
        MyBase.Tables.Add(Me.tableSAPItemsDataTable)
        Me.tableSoundPowerDataTable = New SoundPowerDataTableDataTable()
        MyBase.Tables.Add(Me.tableSoundPowerDataTable)
        Me.tableSoundPowerHeaderDataTable = New SoundPowerHeaderDataTableDataTable()
        MyBase.Tables.Add(Me.tableSoundPowerHeaderDataTable)
        Me.tableCO2LevelRoom = New CO2LevelRoomDataTable()
        MyBase.Tables.Add(Me.tableCO2LevelRoom)
        Me.tableCO2LevelUse = New CO2LevelUseDataTable()
        MyBase.Tables.Add(Me.tableCO2LevelUse)
        Me.tableCO2LevelParameters = New CO2LevelParametersDataTable()
        MyBase.Tables.Add(Me.tableCO2LevelParameters)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeHeaderDataTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializePerformanceAccordanceDataTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeWorkingPointDataTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeTemperatureConditionsAndHumidityDataTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeHeatExchangerPerformancesDataTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeSoundPowerDataTableOld() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeDiagramDataTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeSAPDataTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeSAPItemsDataTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeSoundPowerDataTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeSoundPowerHeaderDataTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeCO2LevelRoom() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeCO2LevelUse() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeCO2LevelParameters() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As CLMainReportDataSet = New CLMainReportDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub HeaderDataTableRowChangeEventHandler(ByVal sender As Object, ByVal e As HeaderDataTableRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub PerformanceAccordanceDataTableRowChangeEventHandler(ByVal sender As Object, ByVal e As PerformanceAccordanceDataTableRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub WorkingPointDataTableRowChangeEventHandler(ByVal sender As Object, ByVal e As WorkingPointDataTableRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub TemperatureConditionsAndHumidityDataTableRowChangeEventHandler(ByVal sender As Object, ByVal e As TemperatureConditionsAndHumidityDataTableRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub HeatExchangerPerformancesDataTableRowChangeEventHandler(ByVal sender As Object, ByVal e As HeatExchangerPerformancesDataTableRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub SoundPowerDataTableOldRowChangeEventHandler(ByVal sender As Object, ByVal e As SoundPowerDataTableOldRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub DiagramDataTableRowChangeEventHandler(ByVal sender As Object, ByVal e As DiagramDataTableRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub SAPDataTableRowChangeEventHandler(ByVal sender As Object, ByVal e As SAPDataTableRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub SAPItemsDataTableRowChangeEventHandler(ByVal sender As Object, ByVal e As SAPItemsDataTableRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub SoundPowerDataTableRowChangeEventHandler(ByVal sender As Object, ByVal e As SoundPowerDataTableRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub SoundPowerHeaderDataTableRowChangeEventHandler(ByVal sender As Object, ByVal e As SoundPowerHeaderDataTableRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub CO2LevelRoomRowChangeEventHandler(ByVal sender As Object, ByVal e As CO2LevelRoomRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub CO2LevelUseRowChangeEventHandler(ByVal sender As Object, ByVal e As CO2LevelUseRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub CO2LevelParametersRowChangeEventHandler(ByVal sender As Object, ByVal e As CO2LevelParametersRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HeaderDataTableDataTable
        Inherits Global.System.Data.TypedTableBase(Of HeaderDataTableRow)
        
        Private columnUnitSelected_Caption As Global.System.Data.DataColumn
        
        Private columnUnitSelected_Value As Global.System.Data.DataColumn
        
        Private columnDate_Caption As Global.System.Data.DataColumn
        
        Private columnDate_Value As Global.System.Data.DataColumn
        
        Private columnSoftwareRelease_Caption As Global.System.Data.DataColumn
        
        Private columnSoftwareRelease_Value As Global.System.Data.DataColumn
        
        Private columnPage_Caption As Global.System.Data.DataColumn
        
        Private columnLogoBmp As Global.System.Data.DataColumn
        
        Private columnCustomerInfo As Global.System.Data.DataColumn
        
        Private columnNote As Global.System.Data.DataColumn
        
        Private columnItem_Code As Global.System.Data.DataColumn
        
        Private columnItem_Description As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HeaderDataTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property UnitSelected_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnitSelected_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property UnitSelected_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnitSelected_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Date_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Date_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SoftwareRelease_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSoftwareRelease_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SoftwareRelease_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSoftwareRelease_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Page_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPage_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LogoBmpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogoBmp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CustomerInfoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomerInfo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Item_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Item_DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItem_Description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HeaderDataTableRow
            Get
                Return CType(Me.Rows(index),HeaderDataTableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event HeaderDataTableRowChanging As HeaderDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event HeaderDataTableRowChanged As HeaderDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event HeaderDataTableRowDeleting As HeaderDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event HeaderDataTableRowDeleted As HeaderDataTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddHeaderDataTableRow(ByVal row As HeaderDataTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddHeaderDataTableRow(ByVal UnitSelected_Caption As Object, ByVal UnitSelected_Value As String, ByVal Date_Caption As String, ByVal Date_Value As Date, ByVal SoftwareRelease_Caption As String, ByVal SoftwareRelease_Value As String, ByVal Page_Caption As String, ByVal LogoBmp() As Byte, ByVal CustomerInfo As String, ByVal Note As String, ByVal Item_Code As String, ByVal Item_Description As String) As HeaderDataTableRow
            Dim rowHeaderDataTableRow As HeaderDataTableRow = CType(Me.NewRow,HeaderDataTableRow)
            Dim columnValuesArray() As Object = New Object() {UnitSelected_Caption, UnitSelected_Value, Date_Caption, Date_Value, SoftwareRelease_Caption, SoftwareRelease_Value, Page_Caption, LogoBmp, CustomerInfo, Note, Item_Code, Item_Description}
            rowHeaderDataTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHeaderDataTableRow)
            Return rowHeaderDataTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HeaderDataTableDataTable = CType(MyBase.Clone,HeaderDataTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HeaderDataTableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnUnitSelected_Caption = MyBase.Columns("UnitSelected_Caption")
            Me.columnUnitSelected_Value = MyBase.Columns("UnitSelected_Value")
            Me.columnDate_Caption = MyBase.Columns("Date_Caption")
            Me.columnDate_Value = MyBase.Columns("Date_Value")
            Me.columnSoftwareRelease_Caption = MyBase.Columns("SoftwareRelease_Caption")
            Me.columnSoftwareRelease_Value = MyBase.Columns("SoftwareRelease_Value")
            Me.columnPage_Caption = MyBase.Columns("Page_Caption")
            Me.columnLogoBmp = MyBase.Columns("LogoBmp")
            Me.columnCustomerInfo = MyBase.Columns("CustomerInfo")
            Me.columnNote = MyBase.Columns("Note")
            Me.columnItem_Code = MyBase.Columns("Item_Code")
            Me.columnItem_Description = MyBase.Columns("Item_Description")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnUnitSelected_Caption = New Global.System.Data.DataColumn("UnitSelected_Caption", GetType(Object), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnitSelected_Caption)
            Me.columnUnitSelected_Value = New Global.System.Data.DataColumn("UnitSelected_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnitSelected_Value)
            Me.columnDate_Caption = New Global.System.Data.DataColumn("Date_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDate_Caption)
            Me.columnDate_Value = New Global.System.Data.DataColumn("Date_Value", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDate_Value)
            Me.columnSoftwareRelease_Caption = New Global.System.Data.DataColumn("SoftwareRelease_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSoftwareRelease_Caption)
            Me.columnSoftwareRelease_Value = New Global.System.Data.DataColumn("SoftwareRelease_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSoftwareRelease_Value)
            Me.columnPage_Caption = New Global.System.Data.DataColumn("Page_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPage_Caption)
            Me.columnLogoBmp = New Global.System.Data.DataColumn("LogoBmp", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogoBmp)
            Me.columnCustomerInfo = New Global.System.Data.DataColumn("CustomerInfo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomerInfo)
            Me.columnNote = New Global.System.Data.DataColumn("Note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNote)
            Me.columnItem_Code = New Global.System.Data.DataColumn("Item_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_Code)
            Me.columnItem_Description = New Global.System.Data.DataColumn("Item_Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItem_Description)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewHeaderDataTableRow() As HeaderDataTableRow
            Return CType(Me.NewRow,HeaderDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HeaderDataTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HeaderDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HeaderDataTableRowChangedEvent) Is Nothing) Then
                RaiseEvent HeaderDataTableRowChanged(Me, New HeaderDataTableRowChangeEvent(CType(e.Row,HeaderDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HeaderDataTableRowChangingEvent) Is Nothing) Then
                RaiseEvent HeaderDataTableRowChanging(Me, New HeaderDataTableRowChangeEvent(CType(e.Row,HeaderDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HeaderDataTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent HeaderDataTableRowDeleted(Me, New HeaderDataTableRowChangeEvent(CType(e.Row,HeaderDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HeaderDataTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent HeaderDataTableRowDeleting(Me, New HeaderDataTableRowChangeEvent(CType(e.Row,HeaderDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveHeaderDataTableRow(ByVal row As HeaderDataTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As CLMainReportDataSet = New CLMainReportDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HeaderDataTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PerformanceAccordanceDataTableDataTable
        Inherits Global.System.Data.TypedTableBase(Of PerformanceAccordanceDataTableRow)
        
        Private columnTitle As Global.System.Data.DataColumn
        
        Private columnExternalLeakage_Caption As Global.System.Data.DataColumn
        
        Private columnExternalLeakage_Value As Global.System.Data.DataColumn
        
        Private columnInternalLeakage_Caption As Global.System.Data.DataColumn
        
        Private columnInternalLeakage_Value As Global.System.Data.DataColumn
        
        Private columnAirflowPressure_Caption As Global.System.Data.DataColumn
        
        Private columnAirflowPressure_Value As Global.System.Data.DataColumn
        
        Private columnElectricPowerInput_Caption As Global.System.Data.DataColumn
        
        Private columnElectricPowerInput_Value As Global.System.Data.DataColumn
        
        Private columnNoiseLevel_Caption As Global.System.Data.DataColumn
        
        Private columnNoiseLevel_Value As Global.System.Data.DataColumn
        
        Private columnLegal_Notice As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PerformanceAccordanceDataTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TitleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ExternalLeakage_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExternalLeakage_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ExternalLeakage_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExternalLeakage_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property InternalLeakage_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInternalLeakage_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property InternalLeakage_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInternalLeakage_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AirflowPressure_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAirflowPressure_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AirflowPressure_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAirflowPressure_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ElectricPowerInput_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnElectricPowerInput_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ElectricPowerInput_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnElectricPowerInput_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NoiseLevel_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoiseLevel_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NoiseLevel_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoiseLevel_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Legal_NoticeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLegal_Notice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PerformanceAccordanceDataTableRow
            Get
                Return CType(Me.Rows(index),PerformanceAccordanceDataTableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event PerformanceAccordanceDataTableRowChanging As PerformanceAccordanceDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event PerformanceAccordanceDataTableRowChanged As PerformanceAccordanceDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event PerformanceAccordanceDataTableRowDeleting As PerformanceAccordanceDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event PerformanceAccordanceDataTableRowDeleted As PerformanceAccordanceDataTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddPerformanceAccordanceDataTableRow(ByVal row As PerformanceAccordanceDataTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddPerformanceAccordanceDataTableRow(ByVal Title As String, ByVal ExternalLeakage_Caption As String, ByVal ExternalLeakage_Value As String, ByVal InternalLeakage_Caption As String, ByVal InternalLeakage_Value As String, ByVal AirflowPressure_Caption As String, ByVal AirflowPressure_Value As String, ByVal ElectricPowerInput_Caption As String, ByVal ElectricPowerInput_Value As String, ByVal NoiseLevel_Caption As String, ByVal NoiseLevel_Value As String, ByVal Legal_Notice As String) As PerformanceAccordanceDataTableRow
            Dim rowPerformanceAccordanceDataTableRow As PerformanceAccordanceDataTableRow = CType(Me.NewRow,PerformanceAccordanceDataTableRow)
            Dim columnValuesArray() As Object = New Object() {Title, ExternalLeakage_Caption, ExternalLeakage_Value, InternalLeakage_Caption, InternalLeakage_Value, AirflowPressure_Caption, AirflowPressure_Value, ElectricPowerInput_Caption, ElectricPowerInput_Value, NoiseLevel_Caption, NoiseLevel_Value, Legal_Notice}
            rowPerformanceAccordanceDataTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPerformanceAccordanceDataTableRow)
            Return rowPerformanceAccordanceDataTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PerformanceAccordanceDataTableDataTable = CType(MyBase.Clone,PerformanceAccordanceDataTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PerformanceAccordanceDataTableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTitle = MyBase.Columns("Title")
            Me.columnExternalLeakage_Caption = MyBase.Columns("ExternalLeakage_Caption")
            Me.columnExternalLeakage_Value = MyBase.Columns("ExternalLeakage_Value")
            Me.columnInternalLeakage_Caption = MyBase.Columns("InternalLeakage_Caption")
            Me.columnInternalLeakage_Value = MyBase.Columns("InternalLeakage_Value")
            Me.columnAirflowPressure_Caption = MyBase.Columns("AirflowPressure_Caption")
            Me.columnAirflowPressure_Value = MyBase.Columns("AirflowPressure_Value")
            Me.columnElectricPowerInput_Caption = MyBase.Columns("ElectricPowerInput_Caption")
            Me.columnElectricPowerInput_Value = MyBase.Columns("ElectricPowerInput_Value")
            Me.columnNoiseLevel_Caption = MyBase.Columns("NoiseLevel_Caption")
            Me.columnNoiseLevel_Value = MyBase.Columns("NoiseLevel_Value")
            Me.columnLegal_Notice = MyBase.Columns("Legal_Notice")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTitle = New Global.System.Data.DataColumn("Title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTitle)
            Me.columnExternalLeakage_Caption = New Global.System.Data.DataColumn("ExternalLeakage_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExternalLeakage_Caption)
            Me.columnExternalLeakage_Value = New Global.System.Data.DataColumn("ExternalLeakage_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExternalLeakage_Value)
            Me.columnInternalLeakage_Caption = New Global.System.Data.DataColumn("InternalLeakage_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInternalLeakage_Caption)
            Me.columnInternalLeakage_Value = New Global.System.Data.DataColumn("InternalLeakage_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInternalLeakage_Value)
            Me.columnAirflowPressure_Caption = New Global.System.Data.DataColumn("AirflowPressure_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAirflowPressure_Caption)
            Me.columnAirflowPressure_Value = New Global.System.Data.DataColumn("AirflowPressure_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAirflowPressure_Value)
            Me.columnElectricPowerInput_Caption = New Global.System.Data.DataColumn("ElectricPowerInput_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnElectricPowerInput_Caption)
            Me.columnElectricPowerInput_Value = New Global.System.Data.DataColumn("ElectricPowerInput_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnElectricPowerInput_Value)
            Me.columnNoiseLevel_Caption = New Global.System.Data.DataColumn("NoiseLevel_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoiseLevel_Caption)
            Me.columnNoiseLevel_Value = New Global.System.Data.DataColumn("NoiseLevel_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoiseLevel_Value)
            Me.columnLegal_Notice = New Global.System.Data.DataColumn("Legal_Notice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLegal_Notice)
            Me.columnTitle.Caption = "PerformanceAccordance_Caption"
            Me.columnExternalLeakage_Caption.Caption = "PerformanceAccordance_ExternalLeakage_Caption"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewPerformanceAccordanceDataTableRow() As PerformanceAccordanceDataTableRow
            Return CType(Me.NewRow,PerformanceAccordanceDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PerformanceAccordanceDataTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PerformanceAccordanceDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PerformanceAccordanceDataTableRowChangedEvent) Is Nothing) Then
                RaiseEvent PerformanceAccordanceDataTableRowChanged(Me, New PerformanceAccordanceDataTableRowChangeEvent(CType(e.Row,PerformanceAccordanceDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PerformanceAccordanceDataTableRowChangingEvent) Is Nothing) Then
                RaiseEvent PerformanceAccordanceDataTableRowChanging(Me, New PerformanceAccordanceDataTableRowChangeEvent(CType(e.Row,PerformanceAccordanceDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PerformanceAccordanceDataTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent PerformanceAccordanceDataTableRowDeleted(Me, New PerformanceAccordanceDataTableRowChangeEvent(CType(e.Row,PerformanceAccordanceDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PerformanceAccordanceDataTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent PerformanceAccordanceDataTableRowDeleting(Me, New PerformanceAccordanceDataTableRowChangeEvent(CType(e.Row,PerformanceAccordanceDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovePerformanceAccordanceDataTableRow(ByVal row As PerformanceAccordanceDataTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As CLMainReportDataSet = New CLMainReportDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PerformanceAccordanceDataTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class WorkingPointDataTableDataTable
        Inherits Global.System.Data.TypedTableBase(Of WorkingPointDataTableRow)
        
        Private columnTitle As Global.System.Data.DataColumn
        
        Private columnAirFlow_Caption As Global.System.Data.DataColumn
        
        Private columnAirFlow_Value As Global.System.Data.DataColumn
        
        Private columnMaxPressure_Caption As Global.System.Data.DataColumn
        
        Private columnMaxPressure_Value As Global.System.Data.DataColumn
        
        Private columnPowerInput_Caption As Global.System.Data.DataColumn
        
        Private columnPowerInput_Value As Global.System.Data.DataColumn
        
        Private columnSFP_Caption As Global.System.Data.DataColumn
        
        Private columnSFP_Value As Global.System.Data.DataColumn
        
        Private columnSEL_Caption As Global.System.Data.DataColumn
        
        Private columnSEL_Value As Global.System.Data.DataColumn
        
        Private columnRegLev_Caption As Global.System.Data.DataColumn
        
        Private columnRegLev_Value As Global.System.Data.DataColumn
        
        Private columnRegLev_Note As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "WorkingPointDataTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TitleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AirFlow_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAirFlow_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AirFlow_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAirFlow_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MaxPressure_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxPressure_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MaxPressure_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxPressure_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PowerInput_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPowerInput_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PowerInput_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPowerInput_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SFP_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSFP_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SFP_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSFP_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SEL_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEL_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SEL_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEL_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RegLev_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegLev_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RegLev_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegLev_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RegLev_NoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegLev_Note
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As WorkingPointDataTableRow
            Get
                Return CType(Me.Rows(index),WorkingPointDataTableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event WorkingPointDataTableRowChanging As WorkingPointDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event WorkingPointDataTableRowChanged As WorkingPointDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event WorkingPointDataTableRowDeleting As WorkingPointDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event WorkingPointDataTableRowDeleted As WorkingPointDataTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddWorkingPointDataTableRow(ByVal row As WorkingPointDataTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddWorkingPointDataTableRow(ByVal Title As String, ByVal AirFlow_Caption As String, ByVal AirFlow_Value As String, ByVal MaxPressure_Caption As String, ByVal MaxPressure_Value As String, ByVal PowerInput_Caption As String, ByVal PowerInput_Value As String, ByVal SFP_Caption As String, ByVal SFP_Value As String, ByVal SEL_Caption As String, ByVal SEL_Value As String, ByVal RegLev_Caption As String, ByVal RegLev_Value As String, ByVal RegLev_Note As String) As WorkingPointDataTableRow
            Dim rowWorkingPointDataTableRow As WorkingPointDataTableRow = CType(Me.NewRow,WorkingPointDataTableRow)
            Dim columnValuesArray() As Object = New Object() {Title, AirFlow_Caption, AirFlow_Value, MaxPressure_Caption, MaxPressure_Value, PowerInput_Caption, PowerInput_Value, SFP_Caption, SFP_Value, SEL_Caption, SEL_Value, RegLev_Caption, RegLev_Value, RegLev_Note}
            rowWorkingPointDataTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowWorkingPointDataTableRow)
            Return rowWorkingPointDataTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As WorkingPointDataTableDataTable = CType(MyBase.Clone,WorkingPointDataTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New WorkingPointDataTableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTitle = MyBase.Columns("Title")
            Me.columnAirFlow_Caption = MyBase.Columns("AirFlow_Caption")
            Me.columnAirFlow_Value = MyBase.Columns("AirFlow_Value")
            Me.columnMaxPressure_Caption = MyBase.Columns("MaxPressure_Caption")
            Me.columnMaxPressure_Value = MyBase.Columns("MaxPressure_Value")
            Me.columnPowerInput_Caption = MyBase.Columns("PowerInput_Caption")
            Me.columnPowerInput_Value = MyBase.Columns("PowerInput_Value")
            Me.columnSFP_Caption = MyBase.Columns("SFP_Caption")
            Me.columnSFP_Value = MyBase.Columns("SFP_Value")
            Me.columnSEL_Caption = MyBase.Columns("SEL_Caption")
            Me.columnSEL_Value = MyBase.Columns("SEL_Value")
            Me.columnRegLev_Caption = MyBase.Columns("RegLev_Caption")
            Me.columnRegLev_Value = MyBase.Columns("RegLev_Value")
            Me.columnRegLev_Note = MyBase.Columns("RegLev_Note")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTitle = New Global.System.Data.DataColumn("Title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTitle)
            Me.columnAirFlow_Caption = New Global.System.Data.DataColumn("AirFlow_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAirFlow_Caption)
            Me.columnAirFlow_Value = New Global.System.Data.DataColumn("AirFlow_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAirFlow_Value)
            Me.columnMaxPressure_Caption = New Global.System.Data.DataColumn("MaxPressure_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxPressure_Caption)
            Me.columnMaxPressure_Value = New Global.System.Data.DataColumn("MaxPressure_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxPressure_Value)
            Me.columnPowerInput_Caption = New Global.System.Data.DataColumn("PowerInput_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPowerInput_Caption)
            Me.columnPowerInput_Value = New Global.System.Data.DataColumn("PowerInput_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPowerInput_Value)
            Me.columnSFP_Caption = New Global.System.Data.DataColumn("SFP_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSFP_Caption)
            Me.columnSFP_Value = New Global.System.Data.DataColumn("SFP_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSFP_Value)
            Me.columnSEL_Caption = New Global.System.Data.DataColumn("SEL_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEL_Caption)
            Me.columnSEL_Value = New Global.System.Data.DataColumn("SEL_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEL_Value)
            Me.columnRegLev_Caption = New Global.System.Data.DataColumn("RegLev_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegLev_Caption)
            Me.columnRegLev_Value = New Global.System.Data.DataColumn("RegLev_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegLev_Value)
            Me.columnRegLev_Note = New Global.System.Data.DataColumn("RegLev_Note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegLev_Note)
            Me.columnSEL_Caption.Caption = "SFP_Caption"
            Me.columnSEL_Value.Caption = "SFP_Value"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewWorkingPointDataTableRow() As WorkingPointDataTableRow
            Return CType(Me.NewRow,WorkingPointDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New WorkingPointDataTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(WorkingPointDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.WorkingPointDataTableRowChangedEvent) Is Nothing) Then
                RaiseEvent WorkingPointDataTableRowChanged(Me, New WorkingPointDataTableRowChangeEvent(CType(e.Row,WorkingPointDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.WorkingPointDataTableRowChangingEvent) Is Nothing) Then
                RaiseEvent WorkingPointDataTableRowChanging(Me, New WorkingPointDataTableRowChangeEvent(CType(e.Row,WorkingPointDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.WorkingPointDataTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent WorkingPointDataTableRowDeleted(Me, New WorkingPointDataTableRowChangeEvent(CType(e.Row,WorkingPointDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.WorkingPointDataTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent WorkingPointDataTableRowDeleting(Me, New WorkingPointDataTableRowChangeEvent(CType(e.Row,WorkingPointDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveWorkingPointDataTableRow(ByVal row As WorkingPointDataTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As CLMainReportDataSet = New CLMainReportDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "WorkingPointDataTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TemperatureConditionsAndHumidityDataTableDataTable
        Inherits Global.System.Data.TypedTableBase(Of TemperatureConditionsAndHumidityDataTableRow)
        
        Private columnTitle As Global.System.Data.DataColumn
        
        Private columnFreshInletTemp_Caption As Global.System.Data.DataColumn
        
        Private columnFreshInletTemp_Value As Global.System.Data.DataColumn
        
        Private columnFreshInletTemp_RH_Caption As Global.System.Data.DataColumn
        
        Private columnFreshInletTemp_RH_Value As Global.System.Data.DataColumn
        
        Private columnReturnInletTemp_Caption As Global.System.Data.DataColumn
        
        Private columnReturnInletTemp_Value As Global.System.Data.DataColumn
        
        Private columnReturnInletTemp_RH_Caption As Global.System.Data.DataColumn
        
        Private columnReturnInletTemp_RH_Value As Global.System.Data.DataColumn
        
        Private columnSupplyOutletTemp_Caption As Global.System.Data.DataColumn
        
        Private columnSupplyOutletTemp_Value As Global.System.Data.DataColumn
        
        Private columnSupplyOutletTemp_RH_Caption As Global.System.Data.DataColumn
        
        Private columnSupplyOutletTemp_RH_Value As Global.System.Data.DataColumn
        
        Private columnExhaustOutletTemp_Caption As Global.System.Data.DataColumn
        
        Private columnExhaustOutletTemp_Value As Global.System.Data.DataColumn
        
        Private columnExhaustOutletTemp_RH_Caption As Global.System.Data.DataColumn
        
        Private columnExhaustOutletTemp_RH_Value As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TemperatureConditionsAndHumidityDataTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TitleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FreshInletTemp_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFreshInletTemp_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FreshInletTemp_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFreshInletTemp_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FreshInletTemp_RH_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFreshInletTemp_RH_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FreshInletTemp_RH_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFreshInletTemp_RH_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReturnInletTemp_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReturnInletTemp_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReturnInletTemp_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReturnInletTemp_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReturnInletTemp_RH_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReturnInletTemp_RH_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReturnInletTemp_RH_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReturnInletTemp_RH_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SupplyOutletTemp_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplyOutletTemp_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SupplyOutletTemp_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplyOutletTemp_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SupplyOutletTemp_RH_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplyOutletTemp_RH_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SupplyOutletTemp_RH_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplyOutletTemp_RH_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ExhaustOutletTemp_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExhaustOutletTemp_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ExhaustOutletTemp_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExhaustOutletTemp_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ExhaustOutletTemp_RH_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExhaustOutletTemp_RH_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ExhaustOutletTemp_RH_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExhaustOutletTemp_RH_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TemperatureConditionsAndHumidityDataTableRow
            Get
                Return CType(Me.Rows(index),TemperatureConditionsAndHumidityDataTableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event TemperatureConditionsAndHumidityDataTableRowChanging As TemperatureConditionsAndHumidityDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event TemperatureConditionsAndHumidityDataTableRowChanged As TemperatureConditionsAndHumidityDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event TemperatureConditionsAndHumidityDataTableRowDeleting As TemperatureConditionsAndHumidityDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event TemperatureConditionsAndHumidityDataTableRowDeleted As TemperatureConditionsAndHumidityDataTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddTemperatureConditionsAndHumidityDataTableRow(ByVal row As TemperatureConditionsAndHumidityDataTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddTemperatureConditionsAndHumidityDataTableRow( _
                    ByVal Title As String,  _
                    ByVal FreshInletTemp_Caption As String,  _
                    ByVal FreshInletTemp_Value As String,  _
                    ByVal FreshInletTemp_RH_Caption As String,  _
                    ByVal FreshInletTemp_RH_Value As String,  _
                    ByVal ReturnInletTemp_Caption As String,  _
                    ByVal ReturnInletTemp_Value As String,  _
                    ByVal ReturnInletTemp_RH_Caption As String,  _
                    ByVal ReturnInletTemp_RH_Value As String,  _
                    ByVal SupplyOutletTemp_Caption As String,  _
                    ByVal SupplyOutletTemp_Value As String,  _
                    ByVal SupplyOutletTemp_RH_Caption As String,  _
                    ByVal SupplyOutletTemp_RH_Value As String,  _
                    ByVal ExhaustOutletTemp_Caption As String,  _
                    ByVal ExhaustOutletTemp_Value As String,  _
                    ByVal ExhaustOutletTemp_RH_Caption As String,  _
                    ByVal ExhaustOutletTemp_RH_Value As String) As TemperatureConditionsAndHumidityDataTableRow
            Dim rowTemperatureConditionsAndHumidityDataTableRow As TemperatureConditionsAndHumidityDataTableRow = CType(Me.NewRow,TemperatureConditionsAndHumidityDataTableRow)
            Dim columnValuesArray() As Object = New Object() {Title, FreshInletTemp_Caption, FreshInletTemp_Value, FreshInletTemp_RH_Caption, FreshInletTemp_RH_Value, ReturnInletTemp_Caption, ReturnInletTemp_Value, ReturnInletTemp_RH_Caption, ReturnInletTemp_RH_Value, SupplyOutletTemp_Caption, SupplyOutletTemp_Value, SupplyOutletTemp_RH_Caption, SupplyOutletTemp_RH_Value, ExhaustOutletTemp_Caption, ExhaustOutletTemp_Value, ExhaustOutletTemp_RH_Caption, ExhaustOutletTemp_RH_Value}
            rowTemperatureConditionsAndHumidityDataTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTemperatureConditionsAndHumidityDataTableRow)
            Return rowTemperatureConditionsAndHumidityDataTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TemperatureConditionsAndHumidityDataTableDataTable = CType(MyBase.Clone,TemperatureConditionsAndHumidityDataTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TemperatureConditionsAndHumidityDataTableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTitle = MyBase.Columns("Title")
            Me.columnFreshInletTemp_Caption = MyBase.Columns("FreshInletTemp_Caption")
            Me.columnFreshInletTemp_Value = MyBase.Columns("FreshInletTemp_Value")
            Me.columnFreshInletTemp_RH_Caption = MyBase.Columns("FreshInletTemp_RH_Caption")
            Me.columnFreshInletTemp_RH_Value = MyBase.Columns("FreshInletTemp_RH_Value")
            Me.columnReturnInletTemp_Caption = MyBase.Columns("ReturnInletTemp_Caption")
            Me.columnReturnInletTemp_Value = MyBase.Columns("ReturnInletTemp_Value")
            Me.columnReturnInletTemp_RH_Caption = MyBase.Columns("ReturnInletTemp_RH_Caption")
            Me.columnReturnInletTemp_RH_Value = MyBase.Columns("ReturnInletTemp_RH_Value")
            Me.columnSupplyOutletTemp_Caption = MyBase.Columns("SupplyOutletTemp_Caption")
            Me.columnSupplyOutletTemp_Value = MyBase.Columns("SupplyOutletTemp_Value")
            Me.columnSupplyOutletTemp_RH_Caption = MyBase.Columns("SupplyOutletTemp_RH_Caption")
            Me.columnSupplyOutletTemp_RH_Value = MyBase.Columns("SupplyOutletTemp_RH_Value")
            Me.columnExhaustOutletTemp_Caption = MyBase.Columns("ExhaustOutletTemp_Caption")
            Me.columnExhaustOutletTemp_Value = MyBase.Columns("ExhaustOutletTemp_Value")
            Me.columnExhaustOutletTemp_RH_Caption = MyBase.Columns("ExhaustOutletTemp_RH_Caption")
            Me.columnExhaustOutletTemp_RH_Value = MyBase.Columns("ExhaustOutletTemp_RH_Value")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTitle = New Global.System.Data.DataColumn("Title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTitle)
            Me.columnFreshInletTemp_Caption = New Global.System.Data.DataColumn("FreshInletTemp_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFreshInletTemp_Caption)
            Me.columnFreshInletTemp_Value = New Global.System.Data.DataColumn("FreshInletTemp_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFreshInletTemp_Value)
            Me.columnFreshInletTemp_RH_Caption = New Global.System.Data.DataColumn("FreshInletTemp_RH_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFreshInletTemp_RH_Caption)
            Me.columnFreshInletTemp_RH_Value = New Global.System.Data.DataColumn("FreshInletTemp_RH_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFreshInletTemp_RH_Value)
            Me.columnReturnInletTemp_Caption = New Global.System.Data.DataColumn("ReturnInletTemp_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReturnInletTemp_Caption)
            Me.columnReturnInletTemp_Value = New Global.System.Data.DataColumn("ReturnInletTemp_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReturnInletTemp_Value)
            Me.columnReturnInletTemp_RH_Caption = New Global.System.Data.DataColumn("ReturnInletTemp_RH_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReturnInletTemp_RH_Caption)
            Me.columnReturnInletTemp_RH_Value = New Global.System.Data.DataColumn("ReturnInletTemp_RH_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReturnInletTemp_RH_Value)
            Me.columnSupplyOutletTemp_Caption = New Global.System.Data.DataColumn("SupplyOutletTemp_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplyOutletTemp_Caption)
            Me.columnSupplyOutletTemp_Value = New Global.System.Data.DataColumn("SupplyOutletTemp_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplyOutletTemp_Value)
            Me.columnSupplyOutletTemp_RH_Caption = New Global.System.Data.DataColumn("SupplyOutletTemp_RH_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplyOutletTemp_RH_Caption)
            Me.columnSupplyOutletTemp_RH_Value = New Global.System.Data.DataColumn("SupplyOutletTemp_RH_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplyOutletTemp_RH_Value)
            Me.columnExhaustOutletTemp_Caption = New Global.System.Data.DataColumn("ExhaustOutletTemp_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExhaustOutletTemp_Caption)
            Me.columnExhaustOutletTemp_Value = New Global.System.Data.DataColumn("ExhaustOutletTemp_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExhaustOutletTemp_Value)
            Me.columnExhaustOutletTemp_RH_Caption = New Global.System.Data.DataColumn("ExhaustOutletTemp_RH_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExhaustOutletTemp_RH_Caption)
            Me.columnExhaustOutletTemp_RH_Value = New Global.System.Data.DataColumn("ExhaustOutletTemp_RH_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExhaustOutletTemp_RH_Value)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewTemperatureConditionsAndHumidityDataTableRow() As TemperatureConditionsAndHumidityDataTableRow
            Return CType(Me.NewRow,TemperatureConditionsAndHumidityDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TemperatureConditionsAndHumidityDataTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TemperatureConditionsAndHumidityDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TemperatureConditionsAndHumidityDataTableRowChangedEvent) Is Nothing) Then
                RaiseEvent TemperatureConditionsAndHumidityDataTableRowChanged(Me, New TemperatureConditionsAndHumidityDataTableRowChangeEvent(CType(e.Row,TemperatureConditionsAndHumidityDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TemperatureConditionsAndHumidityDataTableRowChangingEvent) Is Nothing) Then
                RaiseEvent TemperatureConditionsAndHumidityDataTableRowChanging(Me, New TemperatureConditionsAndHumidityDataTableRowChangeEvent(CType(e.Row,TemperatureConditionsAndHumidityDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TemperatureConditionsAndHumidityDataTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent TemperatureConditionsAndHumidityDataTableRowDeleted(Me, New TemperatureConditionsAndHumidityDataTableRowChangeEvent(CType(e.Row,TemperatureConditionsAndHumidityDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TemperatureConditionsAndHumidityDataTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent TemperatureConditionsAndHumidityDataTableRowDeleting(Me, New TemperatureConditionsAndHumidityDataTableRowChangeEvent(CType(e.Row,TemperatureConditionsAndHumidityDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveTemperatureConditionsAndHumidityDataTableRow(ByVal row As TemperatureConditionsAndHumidityDataTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As CLMainReportDataSet = New CLMainReportDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TemperatureConditionsAndHumidityDataTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HeatExchangerPerformancesDataTableDataTable
        Inherits Global.System.Data.TypedTableBase(Of HeatExchangerPerformancesDataTableRow)
        
        Private columnTitle As Global.System.Data.DataColumn
        
        Private columnHeatTransferred_Caption As Global.System.Data.DataColumn
        
        Private columnHeatTransferred_Value As Global.System.Data.DataColumn
        
        Private columnSensibleHeat_Caption As Global.System.Data.DataColumn
        
        Private columnSensibleHeat_Value As Global.System.Data.DataColumn
        
        Private columnLatentHeat_Caption As Global.System.Data.DataColumn
        
        Private columnLatentHeat_Value As Global.System.Data.DataColumn
        
        Private columnEfficiency_Caption As Global.System.Data.DataColumn
        
        Private columnEfficiency_Value As Global.System.Data.DataColumn
        
        Private columnWaterProduced_Caption As Global.System.Data.DataColumn
        
        Private columnWaterProduced_Value As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HeatExchangerPerformancesDataTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TitleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property HeatTransferred_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHeatTransferred_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property HeatTransferred_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHeatTransferred_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SensibleHeat_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSensibleHeat_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SensibleHeat_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSensibleHeat_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LatentHeat_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLatentHeat_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LatentHeat_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLatentHeat_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Efficiency_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEfficiency_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Efficiency_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEfficiency_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property WaterProduced_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWaterProduced_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property WaterProduced_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWaterProduced_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HeatExchangerPerformancesDataTableRow
            Get
                Return CType(Me.Rows(index),HeatExchangerPerformancesDataTableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event HeatExchangerPerformancesDataTableRowChanging As HeatExchangerPerformancesDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event HeatExchangerPerformancesDataTableRowChanged As HeatExchangerPerformancesDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event HeatExchangerPerformancesDataTableRowDeleting As HeatExchangerPerformancesDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event HeatExchangerPerformancesDataTableRowDeleted As HeatExchangerPerformancesDataTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddHeatExchangerPerformancesDataTableRow(ByVal row As HeatExchangerPerformancesDataTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddHeatExchangerPerformancesDataTableRow(ByVal Title As String, ByVal HeatTransferred_Caption As String, ByVal HeatTransferred_Value As String, ByVal SensibleHeat_Caption As String, ByVal SensibleHeat_Value As String, ByVal LatentHeat_Caption As String, ByVal LatentHeat_Value As String, ByVal Efficiency_Caption As String, ByVal Efficiency_Value As String, ByVal WaterProduced_Caption As String, ByVal WaterProduced_Value As String) As HeatExchangerPerformancesDataTableRow
            Dim rowHeatExchangerPerformancesDataTableRow As HeatExchangerPerformancesDataTableRow = CType(Me.NewRow,HeatExchangerPerformancesDataTableRow)
            Dim columnValuesArray() As Object = New Object() {Title, HeatTransferred_Caption, HeatTransferred_Value, SensibleHeat_Caption, SensibleHeat_Value, LatentHeat_Caption, LatentHeat_Value, Efficiency_Caption, Efficiency_Value, WaterProduced_Caption, WaterProduced_Value}
            rowHeatExchangerPerformancesDataTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHeatExchangerPerformancesDataTableRow)
            Return rowHeatExchangerPerformancesDataTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HeatExchangerPerformancesDataTableDataTable = CType(MyBase.Clone,HeatExchangerPerformancesDataTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HeatExchangerPerformancesDataTableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTitle = MyBase.Columns("Title")
            Me.columnHeatTransferred_Caption = MyBase.Columns("HeatTransferred_Caption")
            Me.columnHeatTransferred_Value = MyBase.Columns("HeatTransferred_Value")
            Me.columnSensibleHeat_Caption = MyBase.Columns("SensibleHeat_Caption")
            Me.columnSensibleHeat_Value = MyBase.Columns("SensibleHeat_Value")
            Me.columnLatentHeat_Caption = MyBase.Columns("LatentHeat_Caption")
            Me.columnLatentHeat_Value = MyBase.Columns("LatentHeat_Value")
            Me.columnEfficiency_Caption = MyBase.Columns("Efficiency_Caption")
            Me.columnEfficiency_Value = MyBase.Columns("Efficiency_Value")
            Me.columnWaterProduced_Caption = MyBase.Columns("WaterProduced_Caption")
            Me.columnWaterProduced_Value = MyBase.Columns("WaterProduced_Value")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTitle = New Global.System.Data.DataColumn("Title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTitle)
            Me.columnHeatTransferred_Caption = New Global.System.Data.DataColumn("HeatTransferred_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHeatTransferred_Caption)
            Me.columnHeatTransferred_Value = New Global.System.Data.DataColumn("HeatTransferred_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHeatTransferred_Value)
            Me.columnSensibleHeat_Caption = New Global.System.Data.DataColumn("SensibleHeat_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSensibleHeat_Caption)
            Me.columnSensibleHeat_Value = New Global.System.Data.DataColumn("SensibleHeat_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSensibleHeat_Value)
            Me.columnLatentHeat_Caption = New Global.System.Data.DataColumn("LatentHeat_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLatentHeat_Caption)
            Me.columnLatentHeat_Value = New Global.System.Data.DataColumn("LatentHeat_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLatentHeat_Value)
            Me.columnEfficiency_Caption = New Global.System.Data.DataColumn("Efficiency_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEfficiency_Caption)
            Me.columnEfficiency_Value = New Global.System.Data.DataColumn("Efficiency_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEfficiency_Value)
            Me.columnWaterProduced_Caption = New Global.System.Data.DataColumn("WaterProduced_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWaterProduced_Caption)
            Me.columnWaterProduced_Value = New Global.System.Data.DataColumn("WaterProduced_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWaterProduced_Value)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewHeatExchangerPerformancesDataTableRow() As HeatExchangerPerformancesDataTableRow
            Return CType(Me.NewRow,HeatExchangerPerformancesDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HeatExchangerPerformancesDataTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HeatExchangerPerformancesDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HeatExchangerPerformancesDataTableRowChangedEvent) Is Nothing) Then
                RaiseEvent HeatExchangerPerformancesDataTableRowChanged(Me, New HeatExchangerPerformancesDataTableRowChangeEvent(CType(e.Row,HeatExchangerPerformancesDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HeatExchangerPerformancesDataTableRowChangingEvent) Is Nothing) Then
                RaiseEvent HeatExchangerPerformancesDataTableRowChanging(Me, New HeatExchangerPerformancesDataTableRowChangeEvent(CType(e.Row,HeatExchangerPerformancesDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HeatExchangerPerformancesDataTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent HeatExchangerPerformancesDataTableRowDeleted(Me, New HeatExchangerPerformancesDataTableRowChangeEvent(CType(e.Row,HeatExchangerPerformancesDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HeatExchangerPerformancesDataTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent HeatExchangerPerformancesDataTableRowDeleting(Me, New HeatExchangerPerformancesDataTableRowChangeEvent(CType(e.Row,HeatExchangerPerformancesDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveHeatExchangerPerformancesDataTableRow(ByVal row As HeatExchangerPerformancesDataTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As CLMainReportDataSet = New CLMainReportDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HeatExchangerPerformancesDataTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SoundPowerDataTableOldDataTable
        Inherits Global.System.Data.TypedTableBase(Of SoundPowerDataTableOldRow)
        
        Private columnTitle As Global.System.Data.DataColumn
        
        Private columnLwA_Caption As Global.System.Data.DataColumn
        
        Private columnHz63_Caption As Global.System.Data.DataColumn
        
        Private columnHz125_Caption As Global.System.Data.DataColumn
        
        Private columnHz250_Caption As Global.System.Data.DataColumn
        
        Private columnHz500_Caption As Global.System.Data.DataColumn
        
        Private columnHz1000_Caption As Global.System.Data.DataColumn
        
        Private columnHz2000_Caption As Global.System.Data.DataColumn
        
        Private columnHz4000_Caption As Global.System.Data.DataColumn
        
        Private columnHz8000_Caption As Global.System.Data.DataColumn
        
        Private columnLp1Caption As Global.System.Data.DataColumn
        
        Private columnLp2Caption As Global.System.Data.DataColumn
        
        Private columnInlet_Caption As Global.System.Data.DataColumn
        
        Private columnInlet_LwA_Value As Global.System.Data.DataColumn
        
        Private columnInlet_Hz63_Value As Global.System.Data.DataColumn
        
        Private columnInlet_Hz125_Value As Global.System.Data.DataColumn
        
        Private columnInlet_Hz250_Value As Global.System.Data.DataColumn
        
        Private columnInlet_Hz500_Value As Global.System.Data.DataColumn
        
        Private columnInlet_Hz1000_Value As Global.System.Data.DataColumn
        
        Private columnInlet_Hz2000_Value As Global.System.Data.DataColumn
        
        Private columnInlet_Hz4000_Value As Global.System.Data.DataColumn
        
        Private columnInlet_Hz8000_Value As Global.System.Data.DataColumn
        
        Private columnInlet_Lp1 As Global.System.Data.DataColumn
        
        Private columnInlet_Lp2 As Global.System.Data.DataColumn
        
        Private columnOutlet_Caption As Global.System.Data.DataColumn
        
        Private columnOutlet_LwA_Value As Global.System.Data.DataColumn
        
        Private columnOutlet_Hz63_Value As Global.System.Data.DataColumn
        
        Private columnOutlet_Hz125_Value As Global.System.Data.DataColumn
        
        Private columnOutlet_Hz250_Value As Global.System.Data.DataColumn
        
        Private columnOutlet_Hz500_Value As Global.System.Data.DataColumn
        
        Private columnOutlet_Hz1000_Value As Global.System.Data.DataColumn
        
        Private columnOutlet_Hz2000_Value As Global.System.Data.DataColumn
        
        Private columnOutlet_Hz4000_Value As Global.System.Data.DataColumn
        
        Private columnOutlet_Hz8000_Value As Global.System.Data.DataColumn
        
        Private columnOutlet_Lp1 As Global.System.Data.DataColumn
        
        Private columnOutlet_Lp2 As Global.System.Data.DataColumn
        
        Private columnFresh_Caption As Global.System.Data.DataColumn
        
        Private columnFresh_LwA_Value As Global.System.Data.DataColumn
        
        Private columnFresh_Hz63_Value As Global.System.Data.DataColumn
        
        Private columnFresh_Hz125_Value As Global.System.Data.DataColumn
        
        Private columnFresh_Hz250_Value As Global.System.Data.DataColumn
        
        Private columnFresh_Hz500_Value As Global.System.Data.DataColumn
        
        Private columnFresh_Hz1000_Value As Global.System.Data.DataColumn
        
        Private columnFresh_Hz2000_Value As Global.System.Data.DataColumn
        
        Private columnFresh_Hz4000_Value As Global.System.Data.DataColumn
        
        Private columnFresh_Hz8000_Value As Global.System.Data.DataColumn
        
        Private columnFresh_Lp1 As Global.System.Data.DataColumn
        
        Private columnFresh_Lp2 As Global.System.Data.DataColumn
        
        Private columnExhaust_Caption As Global.System.Data.DataColumn
        
        Private columnExhaust_LwA_Value As Global.System.Data.DataColumn
        
        Private columnExhaust_Hz63_Value As Global.System.Data.DataColumn
        
        Private columnExhaust_Hz125_Value As Global.System.Data.DataColumn
        
        Private columnExhaust_Hz250_Value As Global.System.Data.DataColumn
        
        Private columnExhaust_Hz500_Value As Global.System.Data.DataColumn
        
        Private columnExhaust_Hz1000_Value As Global.System.Data.DataColumn
        
        Private columnExhaust_Hz2000_Value As Global.System.Data.DataColumn
        
        Private columnExhaust_Hz4000_Value As Global.System.Data.DataColumn
        
        Private columnExhaust_Hz8000_Value As Global.System.Data.DataColumn
        
        Private columnExhaust_Lp1 As Global.System.Data.DataColumn
        
        Private columnExhaust_Lp2 As Global.System.Data.DataColumn
        
        Private columnBreakout_Caption As Global.System.Data.DataColumn
        
        Private columnBreakout_LwA_Value As Global.System.Data.DataColumn
        
        Private columnBreakout_Hz63_Value As Global.System.Data.DataColumn
        
        Private columnBreakout_Hz125_Value As Global.System.Data.DataColumn
        
        Private columnBreakout_Hz250_Value As Global.System.Data.DataColumn
        
        Private columnBreakout_Hz500_Value As Global.System.Data.DataColumn
        
        Private columnBreakout_Hz1000_Value As Global.System.Data.DataColumn
        
        Private columnBreakout_Hz2000_Value As Global.System.Data.DataColumn
        
        Private columnBreakout_Hz4000_Value As Global.System.Data.DataColumn
        
        Private columnBreakout_Hz8000_Value As Global.System.Data.DataColumn
        
        Private columnBreakout_Lp1 As Global.System.Data.DataColumn
        
        Private columnBreakout_Lp2 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SoundPowerDataTableOld"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TitleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LwA_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLwA_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Hz63_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHz63_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Hz125_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHz125_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Hz250_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHz250_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Hz500_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHz500_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Hz1000_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHz1000_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Hz2000_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHz2000_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Hz4000_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHz4000_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Hz8000_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHz8000_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Lp1CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLp1Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Lp2CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLp2Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Inlet_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInlet_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Inlet_LwA_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInlet_LwA_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Inlet_Hz63_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInlet_Hz63_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Inlet_Hz125_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInlet_Hz125_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Inlet_Hz250_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInlet_Hz250_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Inlet_Hz500_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInlet_Hz500_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Inlet_Hz1000_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInlet_Hz1000_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Inlet_Hz2000_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInlet_Hz2000_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Inlet_Hz4000_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInlet_Hz4000_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Inlet_Hz8000_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInlet_Hz8000_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Inlet_Lp1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInlet_Lp1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Inlet_Lp2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInlet_Lp2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Outlet_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOutlet_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Outlet_LwA_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOutlet_LwA_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Outlet_Hz63_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOutlet_Hz63_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Outlet_Hz125_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOutlet_Hz125_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Outlet_Hz250_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOutlet_Hz250_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Outlet_Hz500_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOutlet_Hz500_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Outlet_Hz1000_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOutlet_Hz1000_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Outlet_Hz2000_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOutlet_Hz2000_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Outlet_Hz4000_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOutlet_Hz4000_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Outlet_Hz8000_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOutlet_Hz8000_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Outlet_Lp1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOutlet_Lp1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Outlet_Lp2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOutlet_Lp2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Fresh_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFresh_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Fresh_LwA_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFresh_LwA_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Fresh_Hz63_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFresh_Hz63_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Fresh_Hz125_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFresh_Hz125_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Fresh_Hz250_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFresh_Hz250_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Fresh_Hz500_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFresh_Hz500_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Fresh_Hz1000_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFresh_Hz1000_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Fresh_Hz2000_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFresh_Hz2000_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Fresh_Hz4000_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFresh_Hz4000_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Fresh_Hz8000_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFresh_Hz8000_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Fresh_Lp1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFresh_Lp1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Fresh_Lp2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnFresh_Lp2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Exhaust_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExhaust_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Exhaust_LwA_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExhaust_LwA_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Exhaust_Hz63_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExhaust_Hz63_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Exhaust_Hz125_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExhaust_Hz125_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Exhaust_Hz250_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExhaust_Hz250_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Exhaust_Hz500_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExhaust_Hz500_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Exhaust_Hz1000_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExhaust_Hz1000_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Exhaust_Hz2000_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExhaust_Hz2000_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Exhaust_Hz4000_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExhaust_Hz4000_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Exhaust_Hz8000_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExhaust_Hz8000_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Exhaust_Lp1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExhaust_Lp1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Exhaust_Lp2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExhaust_Lp2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Breakout_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBreakout_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Breakout_LwA_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBreakout_LwA_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Breakout_Hz63_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBreakout_Hz63_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Breakout_Hz125_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBreakout_Hz125_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Breakout_Hz250_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBreakout_Hz250_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Breakout_Hz500_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBreakout_Hz500_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Breakout_Hz1000_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBreakout_Hz1000_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Breakout_Hz2000_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBreakout_Hz2000_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Breakout_Hz4000_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBreakout_Hz4000_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Breakout_Hz8000_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBreakout_Hz8000_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Breakout_Lp1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBreakout_Lp1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Breakout_Lp2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBreakout_Lp2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SoundPowerDataTableOldRow
            Get
                Return CType(Me.Rows(index),SoundPowerDataTableOldRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event SoundPowerDataTableOldRowChanging As SoundPowerDataTableOldRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event SoundPowerDataTableOldRowChanged As SoundPowerDataTableOldRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event SoundPowerDataTableOldRowDeleting As SoundPowerDataTableOldRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event SoundPowerDataTableOldRowDeleted As SoundPowerDataTableOldRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddSoundPowerDataTableOldRow(ByVal row As SoundPowerDataTableOldRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddSoundPowerDataTableOldRow( _
                    ByVal Title As String,  _
                    ByVal LwA_Caption As String,  _
                    ByVal Hz63_Caption As String,  _
                    ByVal Hz125_Caption As String,  _
                    ByVal Hz250_Caption As String,  _
                    ByVal Hz500_Caption As String,  _
                    ByVal Hz1000_Caption As String,  _
                    ByVal Hz2000_Caption As String,  _
                    ByVal Hz4000_Caption As String,  _
                    ByVal Hz8000_Caption As String,  _
                    ByVal Lp1Caption As String,  _
                    ByVal Lp2Caption As String,  _
                    ByVal Inlet_Caption As String,  _
                    ByVal Inlet_LwA_Value As String,  _
                    ByVal Inlet_Hz63_Value As Double,  _
                    ByVal Inlet_Hz125_Value As Double,  _
                    ByVal Inlet_Hz250_Value As Double,  _
                    ByVal Inlet_Hz500_Value As Double,  _
                    ByVal Inlet_Hz1000_Value As Double,  _
                    ByVal Inlet_Hz2000_Value As Double,  _
                    ByVal Inlet_Hz4000_Value As Double,  _
                    ByVal Inlet_Hz8000_Value As Double,  _
                    ByVal Inlet_Lp1 As Double,  _
                    ByVal Inlet_Lp2 As Double,  _
                    ByVal Outlet_Caption As String,  _
                    ByVal Outlet_LwA_Value As Double,  _
                    ByVal Outlet_Hz63_Value As Double,  _
                    ByVal Outlet_Hz125_Value As Double,  _
                    ByVal Outlet_Hz250_Value As Double,  _
                    ByVal Outlet_Hz500_Value As Double,  _
                    ByVal Outlet_Hz1000_Value As Double,  _
                    ByVal Outlet_Hz2000_Value As Double,  _
                    ByVal Outlet_Hz4000_Value As Double,  _
                    ByVal Outlet_Hz8000_Value As Double,  _
                    ByVal Outlet_Lp1 As Double,  _
                    ByVal Outlet_Lp2 As Double,  _
                    ByVal Fresh_Caption As String,  _
                    ByVal Fresh_LwA_Value As Double,  _
                    ByVal Fresh_Hz63_Value As Double,  _
                    ByVal Fresh_Hz125_Value As Double,  _
                    ByVal Fresh_Hz250_Value As Double,  _
                    ByVal Fresh_Hz500_Value As Double,  _
                    ByVal Fresh_Hz1000_Value As Double,  _
                    ByVal Fresh_Hz2000_Value As Double,  _
                    ByVal Fresh_Hz4000_Value As Double,  _
                    ByVal Fresh_Hz8000_Value As Double,  _
                    ByVal Fresh_Lp1 As Double,  _
                    ByVal Fresh_Lp2 As Double,  _
                    ByVal Exhaust_Caption As String,  _
                    ByVal Exhaust_LwA_Value As Double,  _
                    ByVal Exhaust_Hz63_Value As Double,  _
                    ByVal Exhaust_Hz125_Value As Double,  _
                    ByVal Exhaust_Hz250_Value As Double,  _
                    ByVal Exhaust_Hz500_Value As Double,  _
                    ByVal Exhaust_Hz1000_Value As Double,  _
                    ByVal Exhaust_Hz2000_Value As Double,  _
                    ByVal Exhaust_Hz4000_Value As Double,  _
                    ByVal Exhaust_Hz8000_Value As Double,  _
                    ByVal Exhaust_Lp1 As Double,  _
                    ByVal Exhaust_Lp2 As Double,  _
                    ByVal Breakout_Caption As String,  _
                    ByVal Breakout_LwA_Value As Double,  _
                    ByVal Breakout_Hz63_Value As Double,  _
                    ByVal Breakout_Hz125_Value As Double,  _
                    ByVal Breakout_Hz250_Value As Double,  _
                    ByVal Breakout_Hz500_Value As Double,  _
                    ByVal Breakout_Hz1000_Value As Double,  _
                    ByVal Breakout_Hz2000_Value As Double,  _
                    ByVal Breakout_Hz4000_Value As Double,  _
                    ByVal Breakout_Hz8000_Value As Double,  _
                    ByVal Breakout_Lp1 As Double,  _
                    ByVal Breakout_Lp2 As Double) As SoundPowerDataTableOldRow
            Dim rowSoundPowerDataTableOldRow As SoundPowerDataTableOldRow = CType(Me.NewRow,SoundPowerDataTableOldRow)
            Dim columnValuesArray() As Object = New Object() {Title, LwA_Caption, Hz63_Caption, Hz125_Caption, Hz250_Caption, Hz500_Caption, Hz1000_Caption, Hz2000_Caption, Hz4000_Caption, Hz8000_Caption, Lp1Caption, Lp2Caption, Inlet_Caption, Inlet_LwA_Value, Inlet_Hz63_Value, Inlet_Hz125_Value, Inlet_Hz250_Value, Inlet_Hz500_Value, Inlet_Hz1000_Value, Inlet_Hz2000_Value, Inlet_Hz4000_Value, Inlet_Hz8000_Value, Inlet_Lp1, Inlet_Lp2, Outlet_Caption, Outlet_LwA_Value, Outlet_Hz63_Value, Outlet_Hz125_Value, Outlet_Hz250_Value, Outlet_Hz500_Value, Outlet_Hz1000_Value, Outlet_Hz2000_Value, Outlet_Hz4000_Value, Outlet_Hz8000_Value, Outlet_Lp1, Outlet_Lp2, Fresh_Caption, Fresh_LwA_Value, Fresh_Hz63_Value, Fresh_Hz125_Value, Fresh_Hz250_Value, Fresh_Hz500_Value, Fresh_Hz1000_Value, Fresh_Hz2000_Value, Fresh_Hz4000_Value, Fresh_Hz8000_Value, Fresh_Lp1, Fresh_Lp2, Exhaust_Caption, Exhaust_LwA_Value, Exhaust_Hz63_Value, Exhaust_Hz125_Value, Exhaust_Hz250_Value, Exhaust_Hz500_Value, Exhaust_Hz1000_Value, Exhaust_Hz2000_Value, Exhaust_Hz4000_Value, Exhaust_Hz8000_Value, Exhaust_Lp1, Exhaust_Lp2, Breakout_Caption, Breakout_LwA_Value, Breakout_Hz63_Value, Breakout_Hz125_Value, Breakout_Hz250_Value, Breakout_Hz500_Value, Breakout_Hz1000_Value, Breakout_Hz2000_Value, Breakout_Hz4000_Value, Breakout_Hz8000_Value, Breakout_Lp1, Breakout_Lp2}
            rowSoundPowerDataTableOldRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSoundPowerDataTableOldRow)
            Return rowSoundPowerDataTableOldRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SoundPowerDataTableOldDataTable = CType(MyBase.Clone,SoundPowerDataTableOldDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SoundPowerDataTableOldDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTitle = MyBase.Columns("Title")
            Me.columnLwA_Caption = MyBase.Columns("LwA_Caption")
            Me.columnHz63_Caption = MyBase.Columns("Hz63_Caption")
            Me.columnHz125_Caption = MyBase.Columns("Hz125_Caption")
            Me.columnHz250_Caption = MyBase.Columns("Hz250_Caption")
            Me.columnHz500_Caption = MyBase.Columns("Hz500_Caption")
            Me.columnHz1000_Caption = MyBase.Columns("Hz1000_Caption")
            Me.columnHz2000_Caption = MyBase.Columns("Hz2000_Caption")
            Me.columnHz4000_Caption = MyBase.Columns("Hz4000_Caption")
            Me.columnHz8000_Caption = MyBase.Columns("Hz8000_Caption")
            Me.columnLp1Caption = MyBase.Columns("Lp1Caption")
            Me.columnLp2Caption = MyBase.Columns("Lp2Caption")
            Me.columnInlet_Caption = MyBase.Columns("Inlet_Caption")
            Me.columnInlet_LwA_Value = MyBase.Columns("Inlet_LwA_Value")
            Me.columnInlet_Hz63_Value = MyBase.Columns("Inlet_Hz63_Value")
            Me.columnInlet_Hz125_Value = MyBase.Columns("Inlet_Hz125_Value")
            Me.columnInlet_Hz250_Value = MyBase.Columns("Inlet_Hz250_Value")
            Me.columnInlet_Hz500_Value = MyBase.Columns("Inlet_Hz500_Value")
            Me.columnInlet_Hz1000_Value = MyBase.Columns("Inlet_Hz1000_Value")
            Me.columnInlet_Hz2000_Value = MyBase.Columns("Inlet_Hz2000_Value")
            Me.columnInlet_Hz4000_Value = MyBase.Columns("Inlet_Hz4000_Value")
            Me.columnInlet_Hz8000_Value = MyBase.Columns("Inlet_Hz8000_Value")
            Me.columnInlet_Lp1 = MyBase.Columns("Inlet_Lp1")
            Me.columnInlet_Lp2 = MyBase.Columns("Inlet_Lp2")
            Me.columnOutlet_Caption = MyBase.Columns("Outlet_Caption")
            Me.columnOutlet_LwA_Value = MyBase.Columns("Outlet_LwA_Value")
            Me.columnOutlet_Hz63_Value = MyBase.Columns("Outlet_Hz63_Value")
            Me.columnOutlet_Hz125_Value = MyBase.Columns("Outlet_Hz125_Value")
            Me.columnOutlet_Hz250_Value = MyBase.Columns("Outlet_Hz250_Value")
            Me.columnOutlet_Hz500_Value = MyBase.Columns("Outlet_Hz500_Value")
            Me.columnOutlet_Hz1000_Value = MyBase.Columns("Outlet_Hz1000_Value")
            Me.columnOutlet_Hz2000_Value = MyBase.Columns("Outlet_Hz2000_Value")
            Me.columnOutlet_Hz4000_Value = MyBase.Columns("Outlet_Hz4000_Value")
            Me.columnOutlet_Hz8000_Value = MyBase.Columns("Outlet_Hz8000_Value")
            Me.columnOutlet_Lp1 = MyBase.Columns("Outlet_Lp1")
            Me.columnOutlet_Lp2 = MyBase.Columns("Outlet_Lp2")
            Me.columnFresh_Caption = MyBase.Columns("Fresh_Caption")
            Me.columnFresh_LwA_Value = MyBase.Columns("Fresh_LwA_Value")
            Me.columnFresh_Hz63_Value = MyBase.Columns("Fresh_Hz63_Value")
            Me.columnFresh_Hz125_Value = MyBase.Columns("Fresh_Hz125_Value")
            Me.columnFresh_Hz250_Value = MyBase.Columns("Fresh_Hz250_Value")
            Me.columnFresh_Hz500_Value = MyBase.Columns("Fresh_Hz500_Value")
            Me.columnFresh_Hz1000_Value = MyBase.Columns("Fresh_Hz1000_Value")
            Me.columnFresh_Hz2000_Value = MyBase.Columns("Fresh_Hz2000_Value")
            Me.columnFresh_Hz4000_Value = MyBase.Columns("Fresh_Hz4000_Value")
            Me.columnFresh_Hz8000_Value = MyBase.Columns("Fresh_Hz8000_Value")
            Me.columnFresh_Lp1 = MyBase.Columns("Fresh_Lp1")
            Me.columnFresh_Lp2 = MyBase.Columns("Fresh_Lp2")
            Me.columnExhaust_Caption = MyBase.Columns("Exhaust_Caption")
            Me.columnExhaust_LwA_Value = MyBase.Columns("Exhaust_LwA_Value")
            Me.columnExhaust_Hz63_Value = MyBase.Columns("Exhaust_Hz63_Value")
            Me.columnExhaust_Hz125_Value = MyBase.Columns("Exhaust_Hz125_Value")
            Me.columnExhaust_Hz250_Value = MyBase.Columns("Exhaust_Hz250_Value")
            Me.columnExhaust_Hz500_Value = MyBase.Columns("Exhaust_Hz500_Value")
            Me.columnExhaust_Hz1000_Value = MyBase.Columns("Exhaust_Hz1000_Value")
            Me.columnExhaust_Hz2000_Value = MyBase.Columns("Exhaust_Hz2000_Value")
            Me.columnExhaust_Hz4000_Value = MyBase.Columns("Exhaust_Hz4000_Value")
            Me.columnExhaust_Hz8000_Value = MyBase.Columns("Exhaust_Hz8000_Value")
            Me.columnExhaust_Lp1 = MyBase.Columns("Exhaust_Lp1")
            Me.columnExhaust_Lp2 = MyBase.Columns("Exhaust_Lp2")
            Me.columnBreakout_Caption = MyBase.Columns("Breakout_Caption")
            Me.columnBreakout_LwA_Value = MyBase.Columns("Breakout_LwA_Value")
            Me.columnBreakout_Hz63_Value = MyBase.Columns("Breakout_Hz63_Value")
            Me.columnBreakout_Hz125_Value = MyBase.Columns("Breakout_Hz125_Value")
            Me.columnBreakout_Hz250_Value = MyBase.Columns("Breakout_Hz250_Value")
            Me.columnBreakout_Hz500_Value = MyBase.Columns("Breakout_Hz500_Value")
            Me.columnBreakout_Hz1000_Value = MyBase.Columns("Breakout_Hz1000_Value")
            Me.columnBreakout_Hz2000_Value = MyBase.Columns("Breakout_Hz2000_Value")
            Me.columnBreakout_Hz4000_Value = MyBase.Columns("Breakout_Hz4000_Value")
            Me.columnBreakout_Hz8000_Value = MyBase.Columns("Breakout_Hz8000_Value")
            Me.columnBreakout_Lp1 = MyBase.Columns("Breakout_Lp1")
            Me.columnBreakout_Lp2 = MyBase.Columns("Breakout_Lp2")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTitle = New Global.System.Data.DataColumn("Title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTitle)
            Me.columnLwA_Caption = New Global.System.Data.DataColumn("LwA_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLwA_Caption)
            Me.columnHz63_Caption = New Global.System.Data.DataColumn("Hz63_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHz63_Caption)
            Me.columnHz125_Caption = New Global.System.Data.DataColumn("Hz125_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHz125_Caption)
            Me.columnHz250_Caption = New Global.System.Data.DataColumn("Hz250_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHz250_Caption)
            Me.columnHz500_Caption = New Global.System.Data.DataColumn("Hz500_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHz500_Caption)
            Me.columnHz1000_Caption = New Global.System.Data.DataColumn("Hz1000_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHz1000_Caption)
            Me.columnHz2000_Caption = New Global.System.Data.DataColumn("Hz2000_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHz2000_Caption)
            Me.columnHz4000_Caption = New Global.System.Data.DataColumn("Hz4000_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHz4000_Caption)
            Me.columnHz8000_Caption = New Global.System.Data.DataColumn("Hz8000_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHz8000_Caption)
            Me.columnLp1Caption = New Global.System.Data.DataColumn("Lp1Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLp1Caption)
            Me.columnLp2Caption = New Global.System.Data.DataColumn("Lp2Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLp2Caption)
            Me.columnInlet_Caption = New Global.System.Data.DataColumn("Inlet_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInlet_Caption)
            Me.columnInlet_LwA_Value = New Global.System.Data.DataColumn("Inlet_LwA_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInlet_LwA_Value)
            Me.columnInlet_Hz63_Value = New Global.System.Data.DataColumn("Inlet_Hz63_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInlet_Hz63_Value)
            Me.columnInlet_Hz125_Value = New Global.System.Data.DataColumn("Inlet_Hz125_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInlet_Hz125_Value)
            Me.columnInlet_Hz250_Value = New Global.System.Data.DataColumn("Inlet_Hz250_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInlet_Hz250_Value)
            Me.columnInlet_Hz500_Value = New Global.System.Data.DataColumn("Inlet_Hz500_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInlet_Hz500_Value)
            Me.columnInlet_Hz1000_Value = New Global.System.Data.DataColumn("Inlet_Hz1000_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInlet_Hz1000_Value)
            Me.columnInlet_Hz2000_Value = New Global.System.Data.DataColumn("Inlet_Hz2000_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInlet_Hz2000_Value)
            Me.columnInlet_Hz4000_Value = New Global.System.Data.DataColumn("Inlet_Hz4000_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInlet_Hz4000_Value)
            Me.columnInlet_Hz8000_Value = New Global.System.Data.DataColumn("Inlet_Hz8000_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInlet_Hz8000_Value)
            Me.columnInlet_Lp1 = New Global.System.Data.DataColumn("Inlet_Lp1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInlet_Lp1)
            Me.columnInlet_Lp2 = New Global.System.Data.DataColumn("Inlet_Lp2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInlet_Lp2)
            Me.columnOutlet_Caption = New Global.System.Data.DataColumn("Outlet_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOutlet_Caption)
            Me.columnOutlet_LwA_Value = New Global.System.Data.DataColumn("Outlet_LwA_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOutlet_LwA_Value)
            Me.columnOutlet_Hz63_Value = New Global.System.Data.DataColumn("Outlet_Hz63_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOutlet_Hz63_Value)
            Me.columnOutlet_Hz125_Value = New Global.System.Data.DataColumn("Outlet_Hz125_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOutlet_Hz125_Value)
            Me.columnOutlet_Hz250_Value = New Global.System.Data.DataColumn("Outlet_Hz250_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOutlet_Hz250_Value)
            Me.columnOutlet_Hz500_Value = New Global.System.Data.DataColumn("Outlet_Hz500_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOutlet_Hz500_Value)
            Me.columnOutlet_Hz1000_Value = New Global.System.Data.DataColumn("Outlet_Hz1000_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOutlet_Hz1000_Value)
            Me.columnOutlet_Hz2000_Value = New Global.System.Data.DataColumn("Outlet_Hz2000_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOutlet_Hz2000_Value)
            Me.columnOutlet_Hz4000_Value = New Global.System.Data.DataColumn("Outlet_Hz4000_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOutlet_Hz4000_Value)
            Me.columnOutlet_Hz8000_Value = New Global.System.Data.DataColumn("Outlet_Hz8000_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOutlet_Hz8000_Value)
            Me.columnOutlet_Lp1 = New Global.System.Data.DataColumn("Outlet_Lp1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOutlet_Lp1)
            Me.columnOutlet_Lp2 = New Global.System.Data.DataColumn("Outlet_Lp2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOutlet_Lp2)
            Me.columnFresh_Caption = New Global.System.Data.DataColumn("Fresh_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFresh_Caption)
            Me.columnFresh_LwA_Value = New Global.System.Data.DataColumn("Fresh_LwA_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFresh_LwA_Value)
            Me.columnFresh_Hz63_Value = New Global.System.Data.DataColumn("Fresh_Hz63_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFresh_Hz63_Value)
            Me.columnFresh_Hz125_Value = New Global.System.Data.DataColumn("Fresh_Hz125_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFresh_Hz125_Value)
            Me.columnFresh_Hz250_Value = New Global.System.Data.DataColumn("Fresh_Hz250_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFresh_Hz250_Value)
            Me.columnFresh_Hz500_Value = New Global.System.Data.DataColumn("Fresh_Hz500_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFresh_Hz500_Value)
            Me.columnFresh_Hz1000_Value = New Global.System.Data.DataColumn("Fresh_Hz1000_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFresh_Hz1000_Value)
            Me.columnFresh_Hz2000_Value = New Global.System.Data.DataColumn("Fresh_Hz2000_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFresh_Hz2000_Value)
            Me.columnFresh_Hz4000_Value = New Global.System.Data.DataColumn("Fresh_Hz4000_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFresh_Hz4000_Value)
            Me.columnFresh_Hz8000_Value = New Global.System.Data.DataColumn("Fresh_Hz8000_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFresh_Hz8000_Value)
            Me.columnFresh_Lp1 = New Global.System.Data.DataColumn("Fresh_Lp1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFresh_Lp1)
            Me.columnFresh_Lp2 = New Global.System.Data.DataColumn("Fresh_Lp2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFresh_Lp2)
            Me.columnExhaust_Caption = New Global.System.Data.DataColumn("Exhaust_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExhaust_Caption)
            Me.columnExhaust_LwA_Value = New Global.System.Data.DataColumn("Exhaust_LwA_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExhaust_LwA_Value)
            Me.columnExhaust_Hz63_Value = New Global.System.Data.DataColumn("Exhaust_Hz63_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExhaust_Hz63_Value)
            Me.columnExhaust_Hz125_Value = New Global.System.Data.DataColumn("Exhaust_Hz125_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExhaust_Hz125_Value)
            Me.columnExhaust_Hz250_Value = New Global.System.Data.DataColumn("Exhaust_Hz250_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExhaust_Hz250_Value)
            Me.columnExhaust_Hz500_Value = New Global.System.Data.DataColumn("Exhaust_Hz500_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExhaust_Hz500_Value)
            Me.columnExhaust_Hz1000_Value = New Global.System.Data.DataColumn("Exhaust_Hz1000_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExhaust_Hz1000_Value)
            Me.columnExhaust_Hz2000_Value = New Global.System.Data.DataColumn("Exhaust_Hz2000_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExhaust_Hz2000_Value)
            Me.columnExhaust_Hz4000_Value = New Global.System.Data.DataColumn("Exhaust_Hz4000_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExhaust_Hz4000_Value)
            Me.columnExhaust_Hz8000_Value = New Global.System.Data.DataColumn("Exhaust_Hz8000_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExhaust_Hz8000_Value)
            Me.columnExhaust_Lp1 = New Global.System.Data.DataColumn("Exhaust_Lp1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExhaust_Lp1)
            Me.columnExhaust_Lp2 = New Global.System.Data.DataColumn("Exhaust_Lp2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExhaust_Lp2)
            Me.columnBreakout_Caption = New Global.System.Data.DataColumn("Breakout_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBreakout_Caption)
            Me.columnBreakout_LwA_Value = New Global.System.Data.DataColumn("Breakout_LwA_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBreakout_LwA_Value)
            Me.columnBreakout_Hz63_Value = New Global.System.Data.DataColumn("Breakout_Hz63_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBreakout_Hz63_Value)
            Me.columnBreakout_Hz125_Value = New Global.System.Data.DataColumn("Breakout_Hz125_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBreakout_Hz125_Value)
            Me.columnBreakout_Hz250_Value = New Global.System.Data.DataColumn("Breakout_Hz250_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBreakout_Hz250_Value)
            Me.columnBreakout_Hz500_Value = New Global.System.Data.DataColumn("Breakout_Hz500_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBreakout_Hz500_Value)
            Me.columnBreakout_Hz1000_Value = New Global.System.Data.DataColumn("Breakout_Hz1000_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBreakout_Hz1000_Value)
            Me.columnBreakout_Hz2000_Value = New Global.System.Data.DataColumn("Breakout_Hz2000_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBreakout_Hz2000_Value)
            Me.columnBreakout_Hz4000_Value = New Global.System.Data.DataColumn("Breakout_Hz4000_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBreakout_Hz4000_Value)
            Me.columnBreakout_Hz8000_Value = New Global.System.Data.DataColumn("Breakout_Hz8000_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBreakout_Hz8000_Value)
            Me.columnBreakout_Lp1 = New Global.System.Data.DataColumn("Breakout_Lp1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBreakout_Lp1)
            Me.columnBreakout_Lp2 = New Global.System.Data.DataColumn("Breakout_Lp2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBreakout_Lp2)
            Me.columnLwA_Caption.Caption = "Inlet_LwA_Value"
            Me.columnHz63_Caption.Caption = "Hz63_Inlet_Value"
            Me.columnHz125_Caption.Caption = "Hz63_Inlet_Value"
            Me.columnHz250_Caption.Caption = "Hz63_Inlet_Value"
            Me.columnHz500_Caption.Caption = "Hz63_Inlet_Value"
            Me.columnHz1000_Caption.Caption = "Hz63_Inlet_Value"
            Me.columnHz2000_Caption.Caption = "Hz63_Inlet_Value"
            Me.columnHz4000_Caption.Caption = "Hz63_Inlet_Value"
            Me.columnHz8000_Caption.Caption = "Hz63_Inlet_Value"
            Me.columnInlet_Hz63_Value.Caption = "Hz63_Inlet_Value"
            Me.columnInlet_Hz125_Value.Caption = "Hz63_Inlet_Value"
            Me.columnInlet_Hz250_Value.Caption = "Hz63_Inlet_Value"
            Me.columnInlet_Hz500_Value.Caption = "Hz63_Inlet_Value"
            Me.columnInlet_Hz1000_Value.Caption = "Hz63_Inlet_Value"
            Me.columnInlet_Hz2000_Value.Caption = "Hz63_Inlet_Value"
            Me.columnInlet_Hz4000_Value.Caption = "Hz63_Inlet_Value"
            Me.columnInlet_Hz8000_Value.Caption = "Hz63_Inlet_Value"
            Me.columnInlet_Lp1.Caption = "Hz63_Inlet_Value"
            Me.columnInlet_Lp2.Caption = "Hz63_Inlet_Value"
            Me.columnOutlet_Caption.Caption = "Inlet_Caption"
            Me.columnOutlet_LwA_Value.Caption = "Inlet_LwA_Value"
            Me.columnOutlet_Hz63_Value.Caption = "Hz63_Inlet_Value"
            Me.columnOutlet_Hz125_Value.Caption = "Hz63_Inlet_Value"
            Me.columnOutlet_Hz250_Value.Caption = "Hz63_Inlet_Value"
            Me.columnOutlet_Hz500_Value.Caption = "Hz63_Inlet_Value"
            Me.columnOutlet_Hz1000_Value.Caption = "Hz63_Inlet_Value"
            Me.columnOutlet_Hz2000_Value.Caption = "Hz63_Inlet_Value"
            Me.columnOutlet_Hz4000_Value.Caption = "Hz63_Inlet_Value"
            Me.columnOutlet_Hz8000_Value.Caption = "Hz63_Inlet_Value"
            Me.columnOutlet_Lp1.Caption = "Hz63_Inlet_Value"
            Me.columnOutlet_Lp2.Caption = "Hz63_Inlet_Value"
            Me.columnFresh_Hz63_Value.Caption = "Hz63_Fresh_Value"
            Me.columnFresh_Hz125_Value.Caption = "Hz63_Fresh_Value"
            Me.columnFresh_Hz250_Value.Caption = "Hz63_Fresh_Value"
            Me.columnFresh_Hz500_Value.Caption = "Hz63_Fresh_Value"
            Me.columnFresh_Hz1000_Value.Caption = "Hz63_Fresh_Value"
            Me.columnFresh_Hz2000_Value.Caption = "Hz63_Fresh_Value"
            Me.columnFresh_Hz4000_Value.Caption = "Hz63_Fresh_Value"
            Me.columnFresh_Hz8000_Value.Caption = "Hz63_Fresh_Value"
            Me.columnFresh_Lp1.Caption = "Hz63_Inlet_Value"
            Me.columnFresh_Lp2.Caption = "Hz63_Inlet_Value"
            Me.columnExhaust_Hz63_Value.Caption = "Hz63_Exhaust_Value"
            Me.columnExhaust_Hz125_Value.Caption = "Hz63_Exhaust_Value"
            Me.columnExhaust_Hz250_Value.Caption = "Hz63_Exhaust_Value"
            Me.columnExhaust_Hz500_Value.Caption = "Hz63_Exhaust_Value"
            Me.columnExhaust_Hz1000_Value.Caption = "Hz63_Exhaust_Value"
            Me.columnExhaust_Hz2000_Value.Caption = "Hz63_Exhaust_Value"
            Me.columnExhaust_Hz4000_Value.Caption = "Hz63_Exhaust_Value"
            Me.columnExhaust_Hz8000_Value.Caption = "Hz63_Exhaust_Value"
            Me.columnExhaust_Lp1.Caption = "Hz63_Inlet_Value"
            Me.columnExhaust_Lp2.Caption = "Hz63_Inlet_Value"
            Me.columnBreakout_Caption.Caption = "Exhaust_Caption"
            Me.columnBreakout_LwA_Value.Caption = "Exhaust_LwA_Value"
            Me.columnBreakout_Hz63_Value.Caption = "Hz63_Exhaust_Value"
            Me.columnBreakout_Hz125_Value.Caption = "Hz63_Exhaust_Value"
            Me.columnBreakout_Hz250_Value.Caption = "Hz63_Exhaust_Value"
            Me.columnBreakout_Hz500_Value.Caption = "Hz63_Exhaust_Value"
            Me.columnBreakout_Hz1000_Value.Caption = "Hz63_Exhaust_Value"
            Me.columnBreakout_Hz2000_Value.Caption = "Hz63_Exhaust_Value"
            Me.columnBreakout_Hz4000_Value.Caption = "Hz63_Exhaust_Value"
            Me.columnBreakout_Hz8000_Value.Caption = "Hz63_Exhaust_Value"
            Me.columnBreakout_Lp1.Caption = "Hz63_Inlet_Value"
            Me.columnBreakout_Lp2.Caption = "Hz63_Inlet_Value"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewSoundPowerDataTableOldRow() As SoundPowerDataTableOldRow
            Return CType(Me.NewRow,SoundPowerDataTableOldRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SoundPowerDataTableOldRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SoundPowerDataTableOldRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SoundPowerDataTableOldRowChangedEvent) Is Nothing) Then
                RaiseEvent SoundPowerDataTableOldRowChanged(Me, New SoundPowerDataTableOldRowChangeEvent(CType(e.Row,SoundPowerDataTableOldRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SoundPowerDataTableOldRowChangingEvent) Is Nothing) Then
                RaiseEvent SoundPowerDataTableOldRowChanging(Me, New SoundPowerDataTableOldRowChangeEvent(CType(e.Row,SoundPowerDataTableOldRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SoundPowerDataTableOldRowDeletedEvent) Is Nothing) Then
                RaiseEvent SoundPowerDataTableOldRowDeleted(Me, New SoundPowerDataTableOldRowChangeEvent(CType(e.Row,SoundPowerDataTableOldRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SoundPowerDataTableOldRowDeletingEvent) Is Nothing) Then
                RaiseEvent SoundPowerDataTableOldRowDeleting(Me, New SoundPowerDataTableOldRowChangeEvent(CType(e.Row,SoundPowerDataTableOldRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveSoundPowerDataTableOldRow(ByVal row As SoundPowerDataTableOldRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As CLMainReportDataSet = New CLMainReportDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SoundPowerDataTableOldDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DiagramDataTableDataTable
        Inherits Global.System.Data.TypedTableBase(Of DiagramDataTableRow)
        
        Private columnPressureImage As Global.System.Data.DataColumn
        
        Private columnPowerImage As Global.System.Data.DataColumn
        
        Private columnAirFlowImage As Global.System.Data.DataColumn
        
        Private columnLegendImage As Global.System.Data.DataColumn
        
        Private columnCO2Image As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DiagramDataTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PressureImageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPressureImage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PowerImageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPowerImage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AirFlowImageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAirFlowImage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LegendImageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLegendImage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CO2ImageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCO2Image
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DiagramDataTableRow
            Get
                Return CType(Me.Rows(index),DiagramDataTableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event DiagramDataTableRowChanging As DiagramDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event DiagramDataTableRowChanged As DiagramDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event DiagramDataTableRowDeleting As DiagramDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event DiagramDataTableRowDeleted As DiagramDataTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddDiagramDataTableRow(ByVal row As DiagramDataTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddDiagramDataTableRow(ByVal PressureImage() As Byte, ByVal PowerImage() As Byte, ByVal AirFlowImage() As Byte, ByVal LegendImage() As Byte, ByVal CO2Image() As Byte) As DiagramDataTableRow
            Dim rowDiagramDataTableRow As DiagramDataTableRow = CType(Me.NewRow,DiagramDataTableRow)
            Dim columnValuesArray() As Object = New Object() {PressureImage, PowerImage, AirFlowImage, LegendImage, CO2Image}
            rowDiagramDataTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDiagramDataTableRow)
            Return rowDiagramDataTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DiagramDataTableDataTable = CType(MyBase.Clone,DiagramDataTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DiagramDataTableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPressureImage = MyBase.Columns("PressureImage")
            Me.columnPowerImage = MyBase.Columns("PowerImage")
            Me.columnAirFlowImage = MyBase.Columns("AirFlowImage")
            Me.columnLegendImage = MyBase.Columns("LegendImage")
            Me.columnCO2Image = MyBase.Columns("CO2Image")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPressureImage = New Global.System.Data.DataColumn("PressureImage", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPressureImage)
            Me.columnPowerImage = New Global.System.Data.DataColumn("PowerImage", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPowerImage)
            Me.columnAirFlowImage = New Global.System.Data.DataColumn("AirFlowImage", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAirFlowImage)
            Me.columnLegendImage = New Global.System.Data.DataColumn("LegendImage", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLegendImage)
            Me.columnCO2Image = New Global.System.Data.DataColumn("CO2Image", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCO2Image)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewDiagramDataTableRow() As DiagramDataTableRow
            Return CType(Me.NewRow,DiagramDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DiagramDataTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DiagramDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DiagramDataTableRowChangedEvent) Is Nothing) Then
                RaiseEvent DiagramDataTableRowChanged(Me, New DiagramDataTableRowChangeEvent(CType(e.Row,DiagramDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DiagramDataTableRowChangingEvent) Is Nothing) Then
                RaiseEvent DiagramDataTableRowChanging(Me, New DiagramDataTableRowChangeEvent(CType(e.Row,DiagramDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DiagramDataTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent DiagramDataTableRowDeleted(Me, New DiagramDataTableRowChangeEvent(CType(e.Row,DiagramDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DiagramDataTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent DiagramDataTableRowDeleting(Me, New DiagramDataTableRowChangeEvent(CType(e.Row,DiagramDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveDiagramDataTableRow(ByVal row As DiagramDataTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As CLMainReportDataSet = New CLMainReportDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DiagramDataTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SAPDataTableDataTable
        Inherits Global.System.Data.TypedTableBase(Of SAPDataTableRow)
        
        Private columnTitle As Global.System.Data.DataColumn
        
        Private columnExhaustTerminalConfiguration_Caption As Global.System.Data.DataColumn
        
        Private columnTotalExhaustFlowRate_Caption As Global.System.Data.DataColumn
        
        Private columnTotalSupplyFlowRate_Caption As Global.System.Data.DataColumn
        
        Private columnRegulationLevel_Caption As Global.System.Data.DataColumn
        
        Private columnSpecificFanPower_Caption As Global.System.Data.DataColumn
        
        Private columnHeatExchangeEfficiency_Caption As Global.System.Data.DataColumn
        
        Private columnEnergySavingTrustBestPracticePerformanceCompliant_Caption As Global.System.Data.DataColumn
        
        Private columnVisible As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SAPDataTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TitleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ExhaustTerminalConfiguration_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExhaustTerminalConfiguration_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TotalExhaustFlowRate_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalExhaustFlowRate_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TotalSupplyFlowRate_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalSupplyFlowRate_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RegulationLevel_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegulationLevel_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SpecificFanPower_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecificFanPower_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property HeatExchangeEfficiency_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHeatExchangeEfficiency_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EnergySavingTrustBestPracticePerformanceCompliant_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEnergySavingTrustBestPracticePerformanceCompliant_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VisibleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVisible
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SAPDataTableRow
            Get
                Return CType(Me.Rows(index),SAPDataTableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event SAPDataTableRowChanging As SAPDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event SAPDataTableRowChanged As SAPDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event SAPDataTableRowDeleting As SAPDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event SAPDataTableRowDeleted As SAPDataTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddSAPDataTableRow(ByVal row As SAPDataTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddSAPDataTableRow(ByVal Title As String, ByVal ExhaustTerminalConfiguration_Caption As String, ByVal TotalExhaustFlowRate_Caption As String, ByVal TotalSupplyFlowRate_Caption As String, ByVal RegulationLevel_Caption As String, ByVal SpecificFanPower_Caption As String, ByVal HeatExchangeEfficiency_Caption As String, ByVal EnergySavingTrustBestPracticePerformanceCompliant_Caption As String, ByVal Visible As Boolean) As SAPDataTableRow
            Dim rowSAPDataTableRow As SAPDataTableRow = CType(Me.NewRow,SAPDataTableRow)
            Dim columnValuesArray() As Object = New Object() {Title, ExhaustTerminalConfiguration_Caption, TotalExhaustFlowRate_Caption, TotalSupplyFlowRate_Caption, RegulationLevel_Caption, SpecificFanPower_Caption, HeatExchangeEfficiency_Caption, EnergySavingTrustBestPracticePerformanceCompliant_Caption, Visible}
            rowSAPDataTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSAPDataTableRow)
            Return rowSAPDataTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SAPDataTableDataTable = CType(MyBase.Clone,SAPDataTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SAPDataTableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTitle = MyBase.Columns("Title")
            Me.columnExhaustTerminalConfiguration_Caption = MyBase.Columns("ExhaustTerminalConfiguration_Caption")
            Me.columnTotalExhaustFlowRate_Caption = MyBase.Columns("TotalExhaustFlowRate_Caption")
            Me.columnTotalSupplyFlowRate_Caption = MyBase.Columns("TotalSupplyFlowRate_Caption")
            Me.columnRegulationLevel_Caption = MyBase.Columns("RegulationLevel_Caption")
            Me.columnSpecificFanPower_Caption = MyBase.Columns("SpecificFanPower_Caption")
            Me.columnHeatExchangeEfficiency_Caption = MyBase.Columns("HeatExchangeEfficiency_Caption")
            Me.columnEnergySavingTrustBestPracticePerformanceCompliant_Caption = MyBase.Columns("EnergySavingTrustBestPracticePerformanceCompliant_Caption")
            Me.columnVisible = MyBase.Columns("Visible")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTitle = New Global.System.Data.DataColumn("Title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTitle)
            Me.columnExhaustTerminalConfiguration_Caption = New Global.System.Data.DataColumn("ExhaustTerminalConfiguration_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExhaustTerminalConfiguration_Caption)
            Me.columnTotalExhaustFlowRate_Caption = New Global.System.Data.DataColumn("TotalExhaustFlowRate_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalExhaustFlowRate_Caption)
            Me.columnTotalSupplyFlowRate_Caption = New Global.System.Data.DataColumn("TotalSupplyFlowRate_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalSupplyFlowRate_Caption)
            Me.columnRegulationLevel_Caption = New Global.System.Data.DataColumn("RegulationLevel_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegulationLevel_Caption)
            Me.columnSpecificFanPower_Caption = New Global.System.Data.DataColumn("SpecificFanPower_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecificFanPower_Caption)
            Me.columnHeatExchangeEfficiency_Caption = New Global.System.Data.DataColumn("HeatExchangeEfficiency_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHeatExchangeEfficiency_Caption)
            Me.columnEnergySavingTrustBestPracticePerformanceCompliant_Caption = New Global.System.Data.DataColumn("EnergySavingTrustBestPracticePerformanceCompliant_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEnergySavingTrustBestPracticePerformanceCompliant_Caption)
            Me.columnVisible = New Global.System.Data.DataColumn("Visible", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVisible)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewSAPDataTableRow() As SAPDataTableRow
            Return CType(Me.NewRow,SAPDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SAPDataTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SAPDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SAPDataTableRowChangedEvent) Is Nothing) Then
                RaiseEvent SAPDataTableRowChanged(Me, New SAPDataTableRowChangeEvent(CType(e.Row,SAPDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SAPDataTableRowChangingEvent) Is Nothing) Then
                RaiseEvent SAPDataTableRowChanging(Me, New SAPDataTableRowChangeEvent(CType(e.Row,SAPDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SAPDataTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent SAPDataTableRowDeleted(Me, New SAPDataTableRowChangeEvent(CType(e.Row,SAPDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SAPDataTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent SAPDataTableRowDeleting(Me, New SAPDataTableRowChangeEvent(CType(e.Row,SAPDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveSAPDataTableRow(ByVal row As SAPDataTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As CLMainReportDataSet = New CLMainReportDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SAPDataTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SAPItemsDataTableDataTable
        Inherits Global.System.Data.TypedTableBase(Of SAPItemsDataTableRow)
        
        Private columnExhaustTerminalConfiguration_Value As Global.System.Data.DataColumn
        
        Private columnTotalExhaustFlowRate_Value As Global.System.Data.DataColumn
        
        Private columnTotalSupplyFlowRate_Value As Global.System.Data.DataColumn
        
        Private columnRegulationLevel_Value As Global.System.Data.DataColumn
        
        Private columnSpecificFanPower_Value As Global.System.Data.DataColumn
        
        Private columnHeatExchangeEfficiency_Value As Global.System.Data.DataColumn
        
        Private columnEnergySavingTrustBestPracticePerformanceCompliant_Value As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SAPItemsDataTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ExhaustTerminalConfiguration_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExhaustTerminalConfiguration_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TotalExhaustFlowRate_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalExhaustFlowRate_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TotalSupplyFlowRate_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalSupplyFlowRate_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RegulationLevel_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegulationLevel_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SpecificFanPower_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecificFanPower_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property HeatExchangeEfficiency_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHeatExchangeEfficiency_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EnergySavingTrustBestPracticePerformanceCompliant_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEnergySavingTrustBestPracticePerformanceCompliant_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SAPItemsDataTableRow
            Get
                Return CType(Me.Rows(index),SAPItemsDataTableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event SAPItemsDataTableRowChanging As SAPItemsDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event SAPItemsDataTableRowChanged As SAPItemsDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event SAPItemsDataTableRowDeleting As SAPItemsDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event SAPItemsDataTableRowDeleted As SAPItemsDataTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddSAPItemsDataTableRow(ByVal row As SAPItemsDataTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddSAPItemsDataTableRow(ByVal ExhaustTerminalConfiguration_Value As String, ByVal TotalExhaustFlowRate_Value As Double, ByVal TotalSupplyFlowRate_Value As Double, ByVal RegulationLevel_Value As Double, ByVal SpecificFanPower_Value As Double, ByVal HeatExchangeEfficiency_Value As Double, ByVal EnergySavingTrustBestPracticePerformanceCompliant_Value As String) As SAPItemsDataTableRow
            Dim rowSAPItemsDataTableRow As SAPItemsDataTableRow = CType(Me.NewRow,SAPItemsDataTableRow)
            Dim columnValuesArray() As Object = New Object() {ExhaustTerminalConfiguration_Value, TotalExhaustFlowRate_Value, TotalSupplyFlowRate_Value, RegulationLevel_Value, SpecificFanPower_Value, HeatExchangeEfficiency_Value, EnergySavingTrustBestPracticePerformanceCompliant_Value}
            rowSAPItemsDataTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSAPItemsDataTableRow)
            Return rowSAPItemsDataTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SAPItemsDataTableDataTable = CType(MyBase.Clone,SAPItemsDataTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SAPItemsDataTableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnExhaustTerminalConfiguration_Value = MyBase.Columns("ExhaustTerminalConfiguration_Value")
            Me.columnTotalExhaustFlowRate_Value = MyBase.Columns("TotalExhaustFlowRate_Value")
            Me.columnTotalSupplyFlowRate_Value = MyBase.Columns("TotalSupplyFlowRate_Value")
            Me.columnRegulationLevel_Value = MyBase.Columns("RegulationLevel_Value")
            Me.columnSpecificFanPower_Value = MyBase.Columns("SpecificFanPower_Value")
            Me.columnHeatExchangeEfficiency_Value = MyBase.Columns("HeatExchangeEfficiency_Value")
            Me.columnEnergySavingTrustBestPracticePerformanceCompliant_Value = MyBase.Columns("EnergySavingTrustBestPracticePerformanceCompliant_Value")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnExhaustTerminalConfiguration_Value = New Global.System.Data.DataColumn("ExhaustTerminalConfiguration_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExhaustTerminalConfiguration_Value)
            Me.columnTotalExhaustFlowRate_Value = New Global.System.Data.DataColumn("TotalExhaustFlowRate_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalExhaustFlowRate_Value)
            Me.columnTotalSupplyFlowRate_Value = New Global.System.Data.DataColumn("TotalSupplyFlowRate_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalSupplyFlowRate_Value)
            Me.columnRegulationLevel_Value = New Global.System.Data.DataColumn("RegulationLevel_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegulationLevel_Value)
            Me.columnSpecificFanPower_Value = New Global.System.Data.DataColumn("SpecificFanPower_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecificFanPower_Value)
            Me.columnHeatExchangeEfficiency_Value = New Global.System.Data.DataColumn("HeatExchangeEfficiency_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHeatExchangeEfficiency_Value)
            Me.columnEnergySavingTrustBestPracticePerformanceCompliant_Value = New Global.System.Data.DataColumn("EnergySavingTrustBestPracticePerformanceCompliant_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEnergySavingTrustBestPracticePerformanceCompliant_Value)
            Me.columnExhaustTerminalConfiguration_Value.Caption = "ExhaustTerminalConfiguration_Caption"
            Me.columnTotalExhaustFlowRate_Value.Caption = "TotalExhaustFlowRate_Caption"
            Me.columnTotalSupplyFlowRate_Value.Caption = "TotalSupplyFlowRate_Caption"
            Me.columnRegulationLevel_Value.Caption = "RegulationLevel_Caption"
            Me.columnSpecificFanPower_Value.Caption = "SpecificFanPower_Caption"
            Me.columnHeatExchangeEfficiency_Value.Caption = "HeatExchangeEfficiency_Caption"
            Me.columnEnergySavingTrustBestPracticePerformanceCompliant_Value.Caption = "EnergySavingTrustBestPracticePerformanceCompliant_Caption"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewSAPItemsDataTableRow() As SAPItemsDataTableRow
            Return CType(Me.NewRow,SAPItemsDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SAPItemsDataTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SAPItemsDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SAPItemsDataTableRowChangedEvent) Is Nothing) Then
                RaiseEvent SAPItemsDataTableRowChanged(Me, New SAPItemsDataTableRowChangeEvent(CType(e.Row,SAPItemsDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SAPItemsDataTableRowChangingEvent) Is Nothing) Then
                RaiseEvent SAPItemsDataTableRowChanging(Me, New SAPItemsDataTableRowChangeEvent(CType(e.Row,SAPItemsDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SAPItemsDataTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent SAPItemsDataTableRowDeleted(Me, New SAPItemsDataTableRowChangeEvent(CType(e.Row,SAPItemsDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SAPItemsDataTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent SAPItemsDataTableRowDeleting(Me, New SAPItemsDataTableRowChangeEvent(CType(e.Row,SAPItemsDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveSAPItemsDataTableRow(ByVal row As SAPItemsDataTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As CLMainReportDataSet = New CLMainReportDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SAPItemsDataTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SoundPowerDataTableDataTable
        Inherits Global.System.Data.TypedTableBase(Of SoundPowerDataTableRow)
        
        Private columnType As Global.System.Data.DataColumn
        
        Private columnCaption As Global.System.Data.DataColumn
        
        Private columnLwA_Value As Global.System.Data.DataColumn
        
        Private columnHz63_Value As Global.System.Data.DataColumn
        
        Private columnHz125_Value As Global.System.Data.DataColumn
        
        Private columnHz250_Value As Global.System.Data.DataColumn
        
        Private columnHz500_Value As Global.System.Data.DataColumn
        
        Private columnHz1000_Value As Global.System.Data.DataColumn
        
        Private columnHz2000_Value As Global.System.Data.DataColumn
        
        Private columnHz4000_Value As Global.System.Data.DataColumn
        
        Private columnHz8000_Value As Global.System.Data.DataColumn
        
        Private columnLp1_Value As Global.System.Data.DataColumn
        
        Private columnLp2_Value As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SoundPowerDataTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LwA_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLwA_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Hz63_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHz63_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Hz125_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHz125_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Hz250_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHz250_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Hz500_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHz500_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Hz1000_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHz1000_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Hz2000_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHz2000_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Hz4000_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHz4000_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Hz8000_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHz8000_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Lp1_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLp1_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Lp2_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLp2_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SoundPowerDataTableRow
            Get
                Return CType(Me.Rows(index),SoundPowerDataTableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event SoundPowerDataTableRowChanging As SoundPowerDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event SoundPowerDataTableRowChanged As SoundPowerDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event SoundPowerDataTableRowDeleting As SoundPowerDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event SoundPowerDataTableRowDeleted As SoundPowerDataTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddSoundPowerDataTableRow(ByVal row As SoundPowerDataTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddSoundPowerDataTableRow(ByVal Type As String, ByVal Caption As String, ByVal LwA_Value As String, ByVal Hz63_Value As Double, ByVal Hz125_Value As Double, ByVal Hz250_Value As Double, ByVal Hz500_Value As Double, ByVal Hz1000_Value As Double, ByVal Hz2000_Value As Double, ByVal Hz4000_Value As Double, ByVal Hz8000_Value As Double, ByVal Lp1_Value As String, ByVal Lp2_Value As String) As SoundPowerDataTableRow
            Dim rowSoundPowerDataTableRow As SoundPowerDataTableRow = CType(Me.NewRow,SoundPowerDataTableRow)
            Dim columnValuesArray() As Object = New Object() {Type, Caption, LwA_Value, Hz63_Value, Hz125_Value, Hz250_Value, Hz500_Value, Hz1000_Value, Hz2000_Value, Hz4000_Value, Hz8000_Value, Lp1_Value, Lp2_Value}
            rowSoundPowerDataTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSoundPowerDataTableRow)
            Return rowSoundPowerDataTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SoundPowerDataTableDataTable = CType(MyBase.Clone,SoundPowerDataTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SoundPowerDataTableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnType = MyBase.Columns("Type")
            Me.columnCaption = MyBase.Columns("Caption")
            Me.columnLwA_Value = MyBase.Columns("LwA_Value")
            Me.columnHz63_Value = MyBase.Columns("Hz63_Value")
            Me.columnHz125_Value = MyBase.Columns("Hz125_Value")
            Me.columnHz250_Value = MyBase.Columns("Hz250_Value")
            Me.columnHz500_Value = MyBase.Columns("Hz500_Value")
            Me.columnHz1000_Value = MyBase.Columns("Hz1000_Value")
            Me.columnHz2000_Value = MyBase.Columns("Hz2000_Value")
            Me.columnHz4000_Value = MyBase.Columns("Hz4000_Value")
            Me.columnHz8000_Value = MyBase.Columns("Hz8000_Value")
            Me.columnLp1_Value = MyBase.Columns("Lp1_Value")
            Me.columnLp2_Value = MyBase.Columns("Lp2_Value")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnType = New Global.System.Data.DataColumn("Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnType)
            Me.columnCaption = New Global.System.Data.DataColumn("Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaption)
            Me.columnLwA_Value = New Global.System.Data.DataColumn("LwA_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLwA_Value)
            Me.columnHz63_Value = New Global.System.Data.DataColumn("Hz63_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHz63_Value)
            Me.columnHz125_Value = New Global.System.Data.DataColumn("Hz125_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHz125_Value)
            Me.columnHz250_Value = New Global.System.Data.DataColumn("Hz250_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHz250_Value)
            Me.columnHz500_Value = New Global.System.Data.DataColumn("Hz500_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHz500_Value)
            Me.columnHz1000_Value = New Global.System.Data.DataColumn("Hz1000_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHz1000_Value)
            Me.columnHz2000_Value = New Global.System.Data.DataColumn("Hz2000_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHz2000_Value)
            Me.columnHz4000_Value = New Global.System.Data.DataColumn("Hz4000_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHz4000_Value)
            Me.columnHz8000_Value = New Global.System.Data.DataColumn("Hz8000_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHz8000_Value)
            Me.columnLp1_Value = New Global.System.Data.DataColumn("Lp1_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLp1_Value)
            Me.columnLp2_Value = New Global.System.Data.DataColumn("Lp2_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLp2_Value)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewSoundPowerDataTableRow() As SoundPowerDataTableRow
            Return CType(Me.NewRow,SoundPowerDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SoundPowerDataTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SoundPowerDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SoundPowerDataTableRowChangedEvent) Is Nothing) Then
                RaiseEvent SoundPowerDataTableRowChanged(Me, New SoundPowerDataTableRowChangeEvent(CType(e.Row,SoundPowerDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SoundPowerDataTableRowChangingEvent) Is Nothing) Then
                RaiseEvent SoundPowerDataTableRowChanging(Me, New SoundPowerDataTableRowChangeEvent(CType(e.Row,SoundPowerDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SoundPowerDataTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent SoundPowerDataTableRowDeleted(Me, New SoundPowerDataTableRowChangeEvent(CType(e.Row,SoundPowerDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SoundPowerDataTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent SoundPowerDataTableRowDeleting(Me, New SoundPowerDataTableRowChangeEvent(CType(e.Row,SoundPowerDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveSoundPowerDataTableRow(ByVal row As SoundPowerDataTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As CLMainReportDataSet = New CLMainReportDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SoundPowerDataTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SoundPowerHeaderDataTableDataTable
        Inherits Global.System.Data.TypedTableBase(Of SoundPowerHeaderDataTableRow)
        
        Private columnTitle As Global.System.Data.DataColumn
        
        Private columnCaption As Global.System.Data.DataColumn
        
        Private columnLwA_Caption As Global.System.Data.DataColumn
        
        Private columnHz63_Caption As Global.System.Data.DataColumn
        
        Private columnHz125_Caption As Global.System.Data.DataColumn
        
        Private columnHz250_Caption As Global.System.Data.DataColumn
        
        Private columnHz500_Caption As Global.System.Data.DataColumn
        
        Private columnHz1000_Caption As Global.System.Data.DataColumn
        
        Private columnHz2000_Caption As Global.System.Data.DataColumn
        
        Private columnHz4000_Caption As Global.System.Data.DataColumn
        
        Private columnHz8000_Caption As Global.System.Data.DataColumn
        
        Private columnLp1Caption As Global.System.Data.DataColumn
        
        Private columnsndaddtorep_bool As Global.System.Data.DataColumn
        
        Private columnLp2Caption As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SoundPowerHeaderDataTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TitleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LwA_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLwA_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Hz63_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHz63_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Hz125_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHz125_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Hz250_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHz250_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Hz500_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHz500_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Hz1000_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHz1000_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Hz2000_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHz2000_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Hz4000_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHz4000_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Hz8000_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHz8000_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Lp1CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLp1Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property sndaddtorep_boolColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsndaddtorep_bool
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Lp2CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLp2Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SoundPowerHeaderDataTableRow
            Get
                Return CType(Me.Rows(index),SoundPowerHeaderDataTableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event SoundPowerHeaderDataTableRowChanging As SoundPowerHeaderDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event SoundPowerHeaderDataTableRowChanged As SoundPowerHeaderDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event SoundPowerHeaderDataTableRowDeleting As SoundPowerHeaderDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event SoundPowerHeaderDataTableRowDeleted As SoundPowerHeaderDataTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddSoundPowerHeaderDataTableRow(ByVal row As SoundPowerHeaderDataTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddSoundPowerHeaderDataTableRow(ByVal Title As String, ByVal Caption As String, ByVal LwA_Caption As String, ByVal Hz63_Caption As String, ByVal Hz125_Caption As String, ByVal Hz250_Caption As String, ByVal Hz500_Caption As String, ByVal Hz1000_Caption As String, ByVal Hz2000_Caption As String, ByVal Hz4000_Caption As String, ByVal Hz8000_Caption As String, ByVal Lp1Caption As String, ByVal sndaddtorep_bool As Boolean, ByVal Lp2Caption As String) As SoundPowerHeaderDataTableRow
            Dim rowSoundPowerHeaderDataTableRow As SoundPowerHeaderDataTableRow = CType(Me.NewRow,SoundPowerHeaderDataTableRow)
            Dim columnValuesArray() As Object = New Object() {Title, Caption, LwA_Caption, Hz63_Caption, Hz125_Caption, Hz250_Caption, Hz500_Caption, Hz1000_Caption, Hz2000_Caption, Hz4000_Caption, Hz8000_Caption, Lp1Caption, sndaddtorep_bool, Lp2Caption}
            rowSoundPowerHeaderDataTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSoundPowerHeaderDataTableRow)
            Return rowSoundPowerHeaderDataTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SoundPowerHeaderDataTableDataTable = CType(MyBase.Clone,SoundPowerHeaderDataTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SoundPowerHeaderDataTableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTitle = MyBase.Columns("Title")
            Me.columnCaption = MyBase.Columns("Caption")
            Me.columnLwA_Caption = MyBase.Columns("LwA_Caption")
            Me.columnHz63_Caption = MyBase.Columns("Hz63_Caption")
            Me.columnHz125_Caption = MyBase.Columns("Hz125_Caption")
            Me.columnHz250_Caption = MyBase.Columns("Hz250_Caption")
            Me.columnHz500_Caption = MyBase.Columns("Hz500_Caption")
            Me.columnHz1000_Caption = MyBase.Columns("Hz1000_Caption")
            Me.columnHz2000_Caption = MyBase.Columns("Hz2000_Caption")
            Me.columnHz4000_Caption = MyBase.Columns("Hz4000_Caption")
            Me.columnHz8000_Caption = MyBase.Columns("Hz8000_Caption")
            Me.columnLp1Caption = MyBase.Columns("Lp1Caption")
            Me.columnsndaddtorep_bool = MyBase.Columns("sndaddtorep_bool")
            Me.columnLp2Caption = MyBase.Columns("Lp2Caption")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTitle = New Global.System.Data.DataColumn("Title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTitle)
            Me.columnCaption = New Global.System.Data.DataColumn("Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaption)
            Me.columnLwA_Caption = New Global.System.Data.DataColumn("LwA_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLwA_Caption)
            Me.columnHz63_Caption = New Global.System.Data.DataColumn("Hz63_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHz63_Caption)
            Me.columnHz125_Caption = New Global.System.Data.DataColumn("Hz125_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHz125_Caption)
            Me.columnHz250_Caption = New Global.System.Data.DataColumn("Hz250_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHz250_Caption)
            Me.columnHz500_Caption = New Global.System.Data.DataColumn("Hz500_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHz500_Caption)
            Me.columnHz1000_Caption = New Global.System.Data.DataColumn("Hz1000_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHz1000_Caption)
            Me.columnHz2000_Caption = New Global.System.Data.DataColumn("Hz2000_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHz2000_Caption)
            Me.columnHz4000_Caption = New Global.System.Data.DataColumn("Hz4000_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHz4000_Caption)
            Me.columnHz8000_Caption = New Global.System.Data.DataColumn("Hz8000_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHz8000_Caption)
            Me.columnLp1Caption = New Global.System.Data.DataColumn("Lp1Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLp1Caption)
            Me.columnsndaddtorep_bool = New Global.System.Data.DataColumn("sndaddtorep_bool", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsndaddtorep_bool)
            Me.columnLp2Caption = New Global.System.Data.DataColumn("Lp2Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLp2Caption)
            Me.columnLwA_Caption.Caption = "Inlet_LwA_Value"
            Me.columnHz63_Caption.Caption = "Hz63_Inlet_Value"
            Me.columnHz125_Caption.Caption = "Hz63_Inlet_Value"
            Me.columnHz250_Caption.Caption = "Hz63_Inlet_Value"
            Me.columnHz500_Caption.Caption = "Hz63_Inlet_Value"
            Me.columnHz1000_Caption.Caption = "Hz63_Inlet_Value"
            Me.columnHz2000_Caption.Caption = "Hz63_Inlet_Value"
            Me.columnHz4000_Caption.Caption = "Hz63_Inlet_Value"
            Me.columnHz8000_Caption.Caption = "Hz63_Inlet_Value"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewSoundPowerHeaderDataTableRow() As SoundPowerHeaderDataTableRow
            Return CType(Me.NewRow,SoundPowerHeaderDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SoundPowerHeaderDataTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SoundPowerHeaderDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SoundPowerHeaderDataTableRowChangedEvent) Is Nothing) Then
                RaiseEvent SoundPowerHeaderDataTableRowChanged(Me, New SoundPowerHeaderDataTableRowChangeEvent(CType(e.Row,SoundPowerHeaderDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SoundPowerHeaderDataTableRowChangingEvent) Is Nothing) Then
                RaiseEvent SoundPowerHeaderDataTableRowChanging(Me, New SoundPowerHeaderDataTableRowChangeEvent(CType(e.Row,SoundPowerHeaderDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SoundPowerHeaderDataTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent SoundPowerHeaderDataTableRowDeleted(Me, New SoundPowerHeaderDataTableRowChangeEvent(CType(e.Row,SoundPowerHeaderDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SoundPowerHeaderDataTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent SoundPowerHeaderDataTableRowDeleting(Me, New SoundPowerHeaderDataTableRowChangeEvent(CType(e.Row,SoundPowerHeaderDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveSoundPowerHeaderDataTableRow(ByVal row As SoundPowerHeaderDataTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As CLMainReportDataSet = New CLMainReportDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SoundPowerHeaderDataTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CO2LevelRoomDataTable
        Inherits Global.System.Data.TypedTableBase(Of CO2LevelRoomRow)
        
        Private columnRoomHeight As Global.System.Data.DataColumn
        
        Private columnRoomWidth As Global.System.Data.DataColumn
        
        Private columnRoomLength As Global.System.Data.DataColumn
        
        Private columnTitle As Global.System.Data.DataColumn
        
        Private columnRoomHeight_Caption As Global.System.Data.DataColumn
        
        Private columnRoomLength_Caption As Global.System.Data.DataColumn
        
        Private columnRoomWidth_Caption As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CO2LevelRoom"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RoomHeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRoomHeight
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RoomWidthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRoomWidth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RoomLengthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRoomLength
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TitleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RoomHeight_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRoomHeight_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RoomLength_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRoomLength_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RoomWidth_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRoomWidth_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CO2LevelRoomRow
            Get
                Return CType(Me.Rows(index),CO2LevelRoomRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event CO2LevelRoomRowChanging As CO2LevelRoomRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event CO2LevelRoomRowChanged As CO2LevelRoomRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event CO2LevelRoomRowDeleting As CO2LevelRoomRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event CO2LevelRoomRowDeleted As CO2LevelRoomRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddCO2LevelRoomRow(ByVal row As CO2LevelRoomRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddCO2LevelRoomRow(ByVal RoomHeight As Double, ByVal RoomWidth As Double, ByVal RoomLength As Double, ByVal Title As String, ByVal RoomHeight_Caption As String, ByVal RoomLength_Caption As String, ByVal RoomWidth_Caption As String) As CO2LevelRoomRow
            Dim rowCO2LevelRoomRow As CO2LevelRoomRow = CType(Me.NewRow,CO2LevelRoomRow)
            Dim columnValuesArray() As Object = New Object() {RoomHeight, RoomWidth, RoomLength, Title, RoomHeight_Caption, RoomLength_Caption, RoomWidth_Caption}
            rowCO2LevelRoomRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCO2LevelRoomRow)
            Return rowCO2LevelRoomRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CO2LevelRoomDataTable = CType(MyBase.Clone,CO2LevelRoomDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CO2LevelRoomDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRoomHeight = MyBase.Columns("RoomHeight")
            Me.columnRoomWidth = MyBase.Columns("RoomWidth")
            Me.columnRoomLength = MyBase.Columns("RoomLength")
            Me.columnTitle = MyBase.Columns("Title")
            Me.columnRoomHeight_Caption = MyBase.Columns("RoomHeight_Caption")
            Me.columnRoomLength_Caption = MyBase.Columns("RoomLength_Caption")
            Me.columnRoomWidth_Caption = MyBase.Columns("RoomWidth_Caption")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRoomHeight = New Global.System.Data.DataColumn("RoomHeight", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRoomHeight)
            Me.columnRoomWidth = New Global.System.Data.DataColumn("RoomWidth", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRoomWidth)
            Me.columnRoomLength = New Global.System.Data.DataColumn("RoomLength", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRoomLength)
            Me.columnTitle = New Global.System.Data.DataColumn("Title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTitle)
            Me.columnRoomHeight_Caption = New Global.System.Data.DataColumn("RoomHeight_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRoomHeight_Caption)
            Me.columnRoomLength_Caption = New Global.System.Data.DataColumn("RoomLength_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRoomLength_Caption)
            Me.columnRoomWidth_Caption = New Global.System.Data.DataColumn("RoomWidth_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRoomWidth_Caption)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewCO2LevelRoomRow() As CO2LevelRoomRow
            Return CType(Me.NewRow,CO2LevelRoomRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CO2LevelRoomRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CO2LevelRoomRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CO2LevelRoomRowChangedEvent) Is Nothing) Then
                RaiseEvent CO2LevelRoomRowChanged(Me, New CO2LevelRoomRowChangeEvent(CType(e.Row,CO2LevelRoomRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CO2LevelRoomRowChangingEvent) Is Nothing) Then
                RaiseEvent CO2LevelRoomRowChanging(Me, New CO2LevelRoomRowChangeEvent(CType(e.Row,CO2LevelRoomRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CO2LevelRoomRowDeletedEvent) Is Nothing) Then
                RaiseEvent CO2LevelRoomRowDeleted(Me, New CO2LevelRoomRowChangeEvent(CType(e.Row,CO2LevelRoomRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CO2LevelRoomRowDeletingEvent) Is Nothing) Then
                RaiseEvent CO2LevelRoomRowDeleting(Me, New CO2LevelRoomRowChangeEvent(CType(e.Row,CO2LevelRoomRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveCO2LevelRoomRow(ByVal row As CO2LevelRoomRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As CLMainReportDataSet = New CLMainReportDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CO2LevelRoomDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CO2LevelUseDataTable
        Inherits Global.System.Data.TypedTableBase(Of CO2LevelUseRow)
        
        Private columnPeriodPresence As Global.System.Data.DataColumn
        
        Private columnPeoplePresence As Global.System.Data.DataColumn
        
        Private columnPeriodBreak As Global.System.Data.DataColumn
        
        Private columnTitle As Global.System.Data.DataColumn
        
        Private columnPeriod_Caption As Global.System.Data.DataColumn
        
        Private columnPeople_Caption As Global.System.Data.DataColumn
        
        Private columnPresence_Caption As Global.System.Data.DataColumn
        
        Private columnPeopleBreak As Global.System.Data.DataColumn
        
        Private columnBreak_Caption As Global.System.Data.DataColumn
        
        Private columnLevelAct As Global.System.Data.DataColumn
        
        Private columnLevelAct_Caption As Global.System.Data.DataColumn
        
        Private columnCO2prod As Global.System.Data.DataColumn
        
        Private columnCO2prod_Caption As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CO2LevelUse"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PeriodPresenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPeriodPresence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PeoplePresenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPeoplePresence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PeriodBreakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPeriodBreak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TitleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Period_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPeriod_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property People_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPeople_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Presence_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPresence_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PeopleBreakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPeopleBreak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Break_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBreak_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LevelActColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLevelAct
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LevelAct_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLevelAct_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CO2prodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCO2prod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CO2prod_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCO2prod_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CO2LevelUseRow
            Get
                Return CType(Me.Rows(index),CO2LevelUseRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event CO2LevelUseRowChanging As CO2LevelUseRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event CO2LevelUseRowChanged As CO2LevelUseRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event CO2LevelUseRowDeleting As CO2LevelUseRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event CO2LevelUseRowDeleted As CO2LevelUseRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddCO2LevelUseRow(ByVal row As CO2LevelUseRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddCO2LevelUseRow(ByVal PeriodPresence As Double, ByVal PeoplePresence As Double, ByVal PeriodBreak As Double, ByVal Title As String, ByVal Period_Caption As String, ByVal People_Caption As String, ByVal Presence_Caption As String, ByVal PeopleBreak As Double, ByVal Break_Caption As String, ByVal LevelAct As Double, ByVal LevelAct_Caption As String, ByVal CO2prod As Double, ByVal CO2prod_Caption As String) As CO2LevelUseRow
            Dim rowCO2LevelUseRow As CO2LevelUseRow = CType(Me.NewRow,CO2LevelUseRow)
            Dim columnValuesArray() As Object = New Object() {PeriodPresence, PeoplePresence, PeriodBreak, Title, Period_Caption, People_Caption, Presence_Caption, PeopleBreak, Break_Caption, LevelAct, LevelAct_Caption, CO2prod, CO2prod_Caption}
            rowCO2LevelUseRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCO2LevelUseRow)
            Return rowCO2LevelUseRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CO2LevelUseDataTable = CType(MyBase.Clone,CO2LevelUseDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CO2LevelUseDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPeriodPresence = MyBase.Columns("PeriodPresence")
            Me.columnPeoplePresence = MyBase.Columns("PeoplePresence")
            Me.columnPeriodBreak = MyBase.Columns("PeriodBreak")
            Me.columnTitle = MyBase.Columns("Title")
            Me.columnPeriod_Caption = MyBase.Columns("Period_Caption")
            Me.columnPeople_Caption = MyBase.Columns("People_Caption")
            Me.columnPresence_Caption = MyBase.Columns("Presence_Caption")
            Me.columnPeopleBreak = MyBase.Columns("PeopleBreak")
            Me.columnBreak_Caption = MyBase.Columns("Break_Caption")
            Me.columnLevelAct = MyBase.Columns("LevelAct")
            Me.columnLevelAct_Caption = MyBase.Columns("LevelAct_Caption")
            Me.columnCO2prod = MyBase.Columns("CO2prod")
            Me.columnCO2prod_Caption = MyBase.Columns("CO2prod_Caption")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPeriodPresence = New Global.System.Data.DataColumn("PeriodPresence", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPeriodPresence)
            Me.columnPeoplePresence = New Global.System.Data.DataColumn("PeoplePresence", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPeoplePresence)
            Me.columnPeriodBreak = New Global.System.Data.DataColumn("PeriodBreak", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPeriodBreak)
            Me.columnTitle = New Global.System.Data.DataColumn("Title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTitle)
            Me.columnPeriod_Caption = New Global.System.Data.DataColumn("Period_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPeriod_Caption)
            Me.columnPeople_Caption = New Global.System.Data.DataColumn("People_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPeople_Caption)
            Me.columnPresence_Caption = New Global.System.Data.DataColumn("Presence_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPresence_Caption)
            Me.columnPeopleBreak = New Global.System.Data.DataColumn("PeopleBreak", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPeopleBreak)
            Me.columnBreak_Caption = New Global.System.Data.DataColumn("Break_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBreak_Caption)
            Me.columnLevelAct = New Global.System.Data.DataColumn("LevelAct", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLevelAct)
            Me.columnLevelAct_Caption = New Global.System.Data.DataColumn("LevelAct_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLevelAct_Caption)
            Me.columnCO2prod = New Global.System.Data.DataColumn("CO2prod", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCO2prod)
            Me.columnCO2prod_Caption = New Global.System.Data.DataColumn("CO2prod_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCO2prod_Caption)
            Me.columnPeriodPresence.Caption = "RoomHeight"
            Me.columnPeoplePresence.Caption = "RoomWidth"
            Me.columnPeriodBreak.Caption = "RoomLength"
            Me.columnPeriod_Caption.Caption = "RoomHeight_Caption"
            Me.columnPeople_Caption.Caption = "RoomLength_Caption"
            Me.columnPresence_Caption.Caption = "RoomWidth_Caption"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewCO2LevelUseRow() As CO2LevelUseRow
            Return CType(Me.NewRow,CO2LevelUseRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CO2LevelUseRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CO2LevelUseRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CO2LevelUseRowChangedEvent) Is Nothing) Then
                RaiseEvent CO2LevelUseRowChanged(Me, New CO2LevelUseRowChangeEvent(CType(e.Row,CO2LevelUseRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CO2LevelUseRowChangingEvent) Is Nothing) Then
                RaiseEvent CO2LevelUseRowChanging(Me, New CO2LevelUseRowChangeEvent(CType(e.Row,CO2LevelUseRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CO2LevelUseRowDeletedEvent) Is Nothing) Then
                RaiseEvent CO2LevelUseRowDeleted(Me, New CO2LevelUseRowChangeEvent(CType(e.Row,CO2LevelUseRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CO2LevelUseRowDeletingEvent) Is Nothing) Then
                RaiseEvent CO2LevelUseRowDeleting(Me, New CO2LevelUseRowChangeEvent(CType(e.Row,CO2LevelUseRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveCO2LevelUseRow(ByVal row As CO2LevelUseRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As CLMainReportDataSet = New CLMainReportDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CO2LevelUseDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CO2LevelParametersDataTable
        Inherits Global.System.Data.TypedTableBase(Of CO2LevelParametersRow)
        
        Private columnTitle As Global.System.Data.DataColumn
        
        Private columnCalcMeth_Caption As Global.System.Data.DataColumn
        
        Private columnCalcMeth As Global.System.Data.DataColumn
        
        Private columnStdPreset_Caption As Global.System.Data.DataColumn
        
        Private columnStdPreset As Global.System.Data.DataColumn
        
        Private columnOutCO2 As Global.System.Data.DataColumn
        
        Private columnMaxCO2 As Global.System.Data.DataColumn
        
        Private columnAF_demand As Global.System.Data.DataColumn
        
        Private columnAF_person As Global.System.Data.DataColumn
        
        Private columnAF_area As Global.System.Data.DataColumn
        
        Private columnOutCO2_caption As Global.System.Data.DataColumn
        
        Private columnMaxCO2_caption As Global.System.Data.DataColumn
        
        Private columnAF_demand_caption As Global.System.Data.DataColumn
        
        Private columnAF_person_caption As Global.System.Data.DataColumn
        
        Private columnAF_area_caption As Global.System.Data.DataColumn
        
        Private columnAF_area_m3h_caption As Global.System.Data.DataColumn
        
        Private columnaddtorep_bool As Global.System.Data.DataColumn
        
        Private columnAF_demand_m3h As Global.System.Data.DataColumn
        
        Private columnAF_person_m3h As Global.System.Data.DataColumn
        
        Private columnAF_area_m3h As Global.System.Data.DataColumn
        
        Private columnAF_demand_m3h_caption As Global.System.Data.DataColumn
        
        Private columnAF_person_m3h_caption As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CO2LevelParameters"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TitleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CalcMeth_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalcMeth_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CalcMethColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalcMeth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property StdPreset_CaptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStdPreset_Caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property StdPresetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStdPreset
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OutCO2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOutCO2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MaxCO2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxCO2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AF_demandColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAF_demand
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AF_personColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAF_person
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AF_areaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAF_area
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OutCO2_captionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOutCO2_caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MaxCO2_captionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxCO2_caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AF_demand_captionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAF_demand_caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AF_person_captionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAF_person_caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AF_area_captionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAF_area_caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AF_area_m3h_captionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAF_area_m3h_caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property addtorep_boolColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddtorep_bool
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AF_demand_m3hColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAF_demand_m3h
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AF_person_m3hColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAF_person_m3h
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AF_area_m3hColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAF_area_m3h
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AF_demand_m3h_captionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAF_demand_m3h_caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AF_person_m3h_captionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAF_person_m3h_caption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CO2LevelParametersRow
            Get
                Return CType(Me.Rows(index),CO2LevelParametersRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event CO2LevelParametersRowChanging As CO2LevelParametersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event CO2LevelParametersRowChanged As CO2LevelParametersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event CO2LevelParametersRowDeleting As CO2LevelParametersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event CO2LevelParametersRowDeleted As CO2LevelParametersRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddCO2LevelParametersRow(ByVal row As CO2LevelParametersRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddCO2LevelParametersRow( _
                    ByVal Title As String,  _
                    ByVal CalcMeth_Caption As String,  _
                    ByVal CalcMeth As String,  _
                    ByVal StdPreset_Caption As String,  _
                    ByVal StdPreset As String,  _
                    ByVal OutCO2 As Double,  _
                    ByVal MaxCO2 As Double,  _
                    ByVal AF_demand As Double,  _
                    ByVal AF_person As String,  _
                    ByVal AF_area As String,  _
                    ByVal OutCO2_caption As String,  _
                    ByVal MaxCO2_caption As String,  _
                    ByVal AF_demand_caption As String,  _
                    ByVal AF_person_caption As String,  _
                    ByVal AF_area_caption As String,  _
                    ByVal AF_area_m3h_caption As String,  _
                    ByVal addtorep_bool As Boolean,  _
                    ByVal AF_demand_m3h As Double,  _
                    ByVal AF_person_m3h As String,  _
                    ByVal AF_area_m3h As String,  _
                    ByVal AF_demand_m3h_caption As String,  _
                    ByVal AF_person_m3h_caption As String) As CO2LevelParametersRow
            Dim rowCO2LevelParametersRow As CO2LevelParametersRow = CType(Me.NewRow,CO2LevelParametersRow)
            Dim columnValuesArray() As Object = New Object() {Title, CalcMeth_Caption, CalcMeth, StdPreset_Caption, StdPreset, OutCO2, MaxCO2, AF_demand, AF_person, AF_area, OutCO2_caption, MaxCO2_caption, AF_demand_caption, AF_person_caption, AF_area_caption, AF_area_m3h_caption, addtorep_bool, AF_demand_m3h, AF_person_m3h, AF_area_m3h, AF_demand_m3h_caption, AF_person_m3h_caption}
            rowCO2LevelParametersRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCO2LevelParametersRow)
            Return rowCO2LevelParametersRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CO2LevelParametersDataTable = CType(MyBase.Clone,CO2LevelParametersDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CO2LevelParametersDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTitle = MyBase.Columns("Title")
            Me.columnCalcMeth_Caption = MyBase.Columns("CalcMeth_Caption")
            Me.columnCalcMeth = MyBase.Columns("CalcMeth")
            Me.columnStdPreset_Caption = MyBase.Columns("StdPreset_Caption")
            Me.columnStdPreset = MyBase.Columns("StdPreset")
            Me.columnOutCO2 = MyBase.Columns("OutCO2")
            Me.columnMaxCO2 = MyBase.Columns("MaxCO2")
            Me.columnAF_demand = MyBase.Columns("AF_demand")
            Me.columnAF_person = MyBase.Columns("AF_person")
            Me.columnAF_area = MyBase.Columns("AF_area")
            Me.columnOutCO2_caption = MyBase.Columns("OutCO2_caption")
            Me.columnMaxCO2_caption = MyBase.Columns("MaxCO2_caption")
            Me.columnAF_demand_caption = MyBase.Columns("AF_demand_caption")
            Me.columnAF_person_caption = MyBase.Columns("AF_person_caption")
            Me.columnAF_area_caption = MyBase.Columns("AF_area_caption")
            Me.columnAF_area_m3h_caption = MyBase.Columns("AF_area_m3h_caption")
            Me.columnaddtorep_bool = MyBase.Columns("addtorep_bool")
            Me.columnAF_demand_m3h = MyBase.Columns("AF_demand_m3h")
            Me.columnAF_person_m3h = MyBase.Columns("AF_person_m3h")
            Me.columnAF_area_m3h = MyBase.Columns("AF_area_m3h")
            Me.columnAF_demand_m3h_caption = MyBase.Columns("AF_demand_m3h_caption")
            Me.columnAF_person_m3h_caption = MyBase.Columns("AF_person_m3h_caption")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTitle = New Global.System.Data.DataColumn("Title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTitle)
            Me.columnCalcMeth_Caption = New Global.System.Data.DataColumn("CalcMeth_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalcMeth_Caption)
            Me.columnCalcMeth = New Global.System.Data.DataColumn("CalcMeth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalcMeth)
            Me.columnStdPreset_Caption = New Global.System.Data.DataColumn("StdPreset_Caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStdPreset_Caption)
            Me.columnStdPreset = New Global.System.Data.DataColumn("StdPreset", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStdPreset)
            Me.columnOutCO2 = New Global.System.Data.DataColumn("OutCO2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOutCO2)
            Me.columnMaxCO2 = New Global.System.Data.DataColumn("MaxCO2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxCO2)
            Me.columnAF_demand = New Global.System.Data.DataColumn("AF_demand", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAF_demand)
            Me.columnAF_person = New Global.System.Data.DataColumn("AF_person", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAF_person)
            Me.columnAF_area = New Global.System.Data.DataColumn("AF_area", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAF_area)
            Me.columnOutCO2_caption = New Global.System.Data.DataColumn("OutCO2_caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOutCO2_caption)
            Me.columnMaxCO2_caption = New Global.System.Data.DataColumn("MaxCO2_caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxCO2_caption)
            Me.columnAF_demand_caption = New Global.System.Data.DataColumn("AF_demand_caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAF_demand_caption)
            Me.columnAF_person_caption = New Global.System.Data.DataColumn("AF_person_caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAF_person_caption)
            Me.columnAF_area_caption = New Global.System.Data.DataColumn("AF_area_caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAF_area_caption)
            Me.columnAF_area_m3h_caption = New Global.System.Data.DataColumn("AF_area_m3h_caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAF_area_m3h_caption)
            Me.columnaddtorep_bool = New Global.System.Data.DataColumn("addtorep_bool", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddtorep_bool)
            Me.columnAF_demand_m3h = New Global.System.Data.DataColumn("AF_demand_m3h", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAF_demand_m3h)
            Me.columnAF_person_m3h = New Global.System.Data.DataColumn("AF_person_m3h", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAF_person_m3h)
            Me.columnAF_area_m3h = New Global.System.Data.DataColumn("AF_area_m3h", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAF_area_m3h)
            Me.columnAF_demand_m3h_caption = New Global.System.Data.DataColumn("AF_demand_m3h_caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAF_demand_m3h_caption)
            Me.columnAF_person_m3h_caption = New Global.System.Data.DataColumn("AF_person_m3h_caption", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAF_person_m3h_caption)
            Me.columnStdPreset_Caption.Caption = "SensibleHeat_Caption"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewCO2LevelParametersRow() As CO2LevelParametersRow
            Return CType(Me.NewRow,CO2LevelParametersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CO2LevelParametersRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CO2LevelParametersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CO2LevelParametersRowChangedEvent) Is Nothing) Then
                RaiseEvent CO2LevelParametersRowChanged(Me, New CO2LevelParametersRowChangeEvent(CType(e.Row,CO2LevelParametersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CO2LevelParametersRowChangingEvent) Is Nothing) Then
                RaiseEvent CO2LevelParametersRowChanging(Me, New CO2LevelParametersRowChangeEvent(CType(e.Row,CO2LevelParametersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CO2LevelParametersRowDeletedEvent) Is Nothing) Then
                RaiseEvent CO2LevelParametersRowDeleted(Me, New CO2LevelParametersRowChangeEvent(CType(e.Row,CO2LevelParametersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CO2LevelParametersRowDeletingEvent) Is Nothing) Then
                RaiseEvent CO2LevelParametersRowDeleting(Me, New CO2LevelParametersRowChangeEvent(CType(e.Row,CO2LevelParametersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveCO2LevelParametersRow(ByVal row As CO2LevelParametersRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As CLMainReportDataSet = New CLMainReportDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CO2LevelParametersDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class HeaderDataTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableHeaderDataTable As HeaderDataTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHeaderDataTable = CType(Me.Table,HeaderDataTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UnitSelected_Caption() As Object
            Get
                Try 
                    Return CType(Me(Me.tableHeaderDataTable.UnitSelected_CaptionColumn),Object)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'UnitSelected_Caption' nella tabella 'HeaderDataTable' è "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHeaderDataTable.UnitSelected_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UnitSelected_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableHeaderDataTable.UnitSelected_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'UnitSelected_Value' nella tabella 'HeaderDataTable' è DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableHeaderDataTable.UnitSelected_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Date_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableHeaderDataTable.Date_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Date_Caption' nella tabella 'HeaderDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHeaderDataTable.Date_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Date_Value() As Date
            Get
                Try 
                    Return CType(Me(Me.tableHeaderDataTable.Date_ValueColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Date_Value' nella tabella 'HeaderDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHeaderDataTable.Date_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SoftwareRelease_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableHeaderDataTable.SoftwareRelease_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'SoftwareRelease_Caption' nella tabella 'HeaderDataTable'"& _ 
                            " è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHeaderDataTable.SoftwareRelease_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SoftwareRelease_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableHeaderDataTable.SoftwareRelease_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'SoftwareRelease_Value' nella tabella 'HeaderDataTable' è"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHeaderDataTable.SoftwareRelease_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Page_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableHeaderDataTable.Page_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Page_Caption' nella tabella 'HeaderDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHeaderDataTable.Page_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LogoBmp() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableHeaderDataTable.LogoBmpColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'LogoBmp' nella tabella 'HeaderDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHeaderDataTable.LogoBmpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CustomerInfo() As String
            Get
                Try 
                    Return CType(Me(Me.tableHeaderDataTable.CustomerInfoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'CustomerInfo' nella tabella 'HeaderDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHeaderDataTable.CustomerInfoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Note() As String
            Get
                Try 
                    Return CType(Me(Me.tableHeaderDataTable.NoteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Note' nella tabella 'HeaderDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHeaderDataTable.NoteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Item_Code() As String
            Get
                Try 
                    Return CType(Me(Me.tableHeaderDataTable.Item_CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Item_Code' nella tabella 'HeaderDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHeaderDataTable.Item_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Item_Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableHeaderDataTable.Item_DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Item_Description' nella tabella 'HeaderDataTable' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableHeaderDataTable.Item_DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsUnitSelected_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableHeaderDataTable.UnitSelected_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetUnitSelected_CaptionNull()
            Me(Me.tableHeaderDataTable.UnitSelected_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsUnitSelected_ValueNull() As Boolean
            Return Me.IsNull(Me.tableHeaderDataTable.UnitSelected_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetUnitSelected_ValueNull()
            Me(Me.tableHeaderDataTable.UnitSelected_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDate_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableHeaderDataTable.Date_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDate_CaptionNull()
            Me(Me.tableHeaderDataTable.Date_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDate_ValueNull() As Boolean
            Return Me.IsNull(Me.tableHeaderDataTable.Date_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDate_ValueNull()
            Me(Me.tableHeaderDataTable.Date_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSoftwareRelease_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableHeaderDataTable.SoftwareRelease_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSoftwareRelease_CaptionNull()
            Me(Me.tableHeaderDataTable.SoftwareRelease_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSoftwareRelease_ValueNull() As Boolean
            Return Me.IsNull(Me.tableHeaderDataTable.SoftwareRelease_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSoftwareRelease_ValueNull()
            Me(Me.tableHeaderDataTable.SoftwareRelease_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPage_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableHeaderDataTable.Page_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPage_CaptionNull()
            Me(Me.tableHeaderDataTable.Page_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLogoBmpNull() As Boolean
            Return Me.IsNull(Me.tableHeaderDataTable.LogoBmpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLogoBmpNull()
            Me(Me.tableHeaderDataTable.LogoBmpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCustomerInfoNull() As Boolean
            Return Me.IsNull(Me.tableHeaderDataTable.CustomerInfoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCustomerInfoNull()
            Me(Me.tableHeaderDataTable.CustomerInfoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNoteNull() As Boolean
            Return Me.IsNull(Me.tableHeaderDataTable.NoteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNoteNull()
            Me(Me.tableHeaderDataTable.NoteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsItem_CodeNull() As Boolean
            Return Me.IsNull(Me.tableHeaderDataTable.Item_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetItem_CodeNull()
            Me(Me.tableHeaderDataTable.Item_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsItem_DescriptionNull() As Boolean
            Return Me.IsNull(Me.tableHeaderDataTable.Item_DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetItem_DescriptionNull()
            Me(Me.tableHeaderDataTable.Item_DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PerformanceAccordanceDataTableRow
        Inherits Global.System.Data.DataRow
        
        Private tablePerformanceAccordanceDataTable As PerformanceAccordanceDataTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePerformanceAccordanceDataTable = CType(Me.Table,PerformanceAccordanceDataTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Title() As String
            Get
                Try 
                    Return CType(Me(Me.tablePerformanceAccordanceDataTable.TitleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Title' nella tabella 'PerformanceAccordanceDataTable' è "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePerformanceAccordanceDataTable.TitleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ExternalLeakage_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tablePerformanceAccordanceDataTable.ExternalLeakage_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'ExternalLeakage_Caption' nella tabella 'PerformanceAccor"& _ 
                            "danceDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePerformanceAccordanceDataTable.ExternalLeakage_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ExternalLeakage_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tablePerformanceAccordanceDataTable.ExternalLeakage_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'ExternalLeakage_Value' nella tabella 'PerformanceAccorda"& _ 
                            "nceDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePerformanceAccordanceDataTable.ExternalLeakage_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property InternalLeakage_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tablePerformanceAccordanceDataTable.InternalLeakage_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'InternalLeakage_Caption' nella tabella 'PerformanceAccor"& _ 
                            "danceDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePerformanceAccordanceDataTable.InternalLeakage_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property InternalLeakage_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tablePerformanceAccordanceDataTable.InternalLeakage_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'InternalLeakage_Value' nella tabella 'PerformanceAccorda"& _ 
                            "nceDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePerformanceAccordanceDataTable.InternalLeakage_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AirflowPressure_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tablePerformanceAccordanceDataTable.AirflowPressure_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'AirflowPressure_Caption' nella tabella 'PerformanceAccor"& _ 
                            "danceDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePerformanceAccordanceDataTable.AirflowPressure_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AirflowPressure_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tablePerformanceAccordanceDataTable.AirflowPressure_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'AirflowPressure_Value' nella tabella 'PerformanceAccorda"& _ 
                            "nceDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePerformanceAccordanceDataTable.AirflowPressure_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ElectricPowerInput_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tablePerformanceAccordanceDataTable.ElectricPowerInput_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'ElectricPowerInput_Caption' nella tabella 'PerformanceAc"& _ 
                            "cordanceDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePerformanceAccordanceDataTable.ElectricPowerInput_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ElectricPowerInput_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tablePerformanceAccordanceDataTable.ElectricPowerInput_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'ElectricPowerInput_Value' nella tabella 'PerformanceAcco"& _ 
                            "rdanceDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePerformanceAccordanceDataTable.ElectricPowerInput_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NoiseLevel_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tablePerformanceAccordanceDataTable.NoiseLevel_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'NoiseLevel_Caption' nella tabella 'PerformanceAccordance"& _ 
                            "DataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePerformanceAccordanceDataTable.NoiseLevel_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NoiseLevel_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tablePerformanceAccordanceDataTable.NoiseLevel_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'NoiseLevel_Value' nella tabella 'PerformanceAccordanceDa"& _ 
                            "taTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePerformanceAccordanceDataTable.NoiseLevel_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Legal_Notice() As String
            Get
                Try 
                    Return CType(Me(Me.tablePerformanceAccordanceDataTable.Legal_NoticeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Legal_Notice' nella tabella 'PerformanceAccordanceDataTa"& _ 
                            "ble' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePerformanceAccordanceDataTable.Legal_NoticeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTitleNull() As Boolean
            Return Me.IsNull(Me.tablePerformanceAccordanceDataTable.TitleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTitleNull()
            Me(Me.tablePerformanceAccordanceDataTable.TitleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsExternalLeakage_CaptionNull() As Boolean
            Return Me.IsNull(Me.tablePerformanceAccordanceDataTable.ExternalLeakage_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetExternalLeakage_CaptionNull()
            Me(Me.tablePerformanceAccordanceDataTable.ExternalLeakage_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsExternalLeakage_ValueNull() As Boolean
            Return Me.IsNull(Me.tablePerformanceAccordanceDataTable.ExternalLeakage_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetExternalLeakage_ValueNull()
            Me(Me.tablePerformanceAccordanceDataTable.ExternalLeakage_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsInternalLeakage_CaptionNull() As Boolean
            Return Me.IsNull(Me.tablePerformanceAccordanceDataTable.InternalLeakage_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetInternalLeakage_CaptionNull()
            Me(Me.tablePerformanceAccordanceDataTable.InternalLeakage_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsInternalLeakage_ValueNull() As Boolean
            Return Me.IsNull(Me.tablePerformanceAccordanceDataTable.InternalLeakage_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetInternalLeakage_ValueNull()
            Me(Me.tablePerformanceAccordanceDataTable.InternalLeakage_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAirflowPressure_CaptionNull() As Boolean
            Return Me.IsNull(Me.tablePerformanceAccordanceDataTable.AirflowPressure_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAirflowPressure_CaptionNull()
            Me(Me.tablePerformanceAccordanceDataTable.AirflowPressure_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAirflowPressure_ValueNull() As Boolean
            Return Me.IsNull(Me.tablePerformanceAccordanceDataTable.AirflowPressure_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAirflowPressure_ValueNull()
            Me(Me.tablePerformanceAccordanceDataTable.AirflowPressure_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsElectricPowerInput_CaptionNull() As Boolean
            Return Me.IsNull(Me.tablePerformanceAccordanceDataTable.ElectricPowerInput_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetElectricPowerInput_CaptionNull()
            Me(Me.tablePerformanceAccordanceDataTable.ElectricPowerInput_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsElectricPowerInput_ValueNull() As Boolean
            Return Me.IsNull(Me.tablePerformanceAccordanceDataTable.ElectricPowerInput_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetElectricPowerInput_ValueNull()
            Me(Me.tablePerformanceAccordanceDataTable.ElectricPowerInput_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNoiseLevel_CaptionNull() As Boolean
            Return Me.IsNull(Me.tablePerformanceAccordanceDataTable.NoiseLevel_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNoiseLevel_CaptionNull()
            Me(Me.tablePerformanceAccordanceDataTable.NoiseLevel_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNoiseLevel_ValueNull() As Boolean
            Return Me.IsNull(Me.tablePerformanceAccordanceDataTable.NoiseLevel_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNoiseLevel_ValueNull()
            Me(Me.tablePerformanceAccordanceDataTable.NoiseLevel_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLegal_NoticeNull() As Boolean
            Return Me.IsNull(Me.tablePerformanceAccordanceDataTable.Legal_NoticeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLegal_NoticeNull()
            Me(Me.tablePerformanceAccordanceDataTable.Legal_NoticeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class WorkingPointDataTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableWorkingPointDataTable As WorkingPointDataTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableWorkingPointDataTable = CType(Me.Table,WorkingPointDataTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Title() As String
            Get
                Try 
                    Return CType(Me(Me.tableWorkingPointDataTable.TitleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Title' nella tabella 'WorkingPointDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWorkingPointDataTable.TitleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AirFlow_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableWorkingPointDataTable.AirFlow_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'AirFlow_Caption' nella tabella 'WorkingPointDataTable' è"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWorkingPointDataTable.AirFlow_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AirFlow_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableWorkingPointDataTable.AirFlow_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'AirFlow_Value' nella tabella 'WorkingPointDataTable' è D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWorkingPointDataTable.AirFlow_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MaxPressure_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableWorkingPointDataTable.MaxPressure_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'MaxPressure_Caption' nella tabella 'WorkingPointDataTabl"& _ 
                            "e' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWorkingPointDataTable.MaxPressure_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MaxPressure_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableWorkingPointDataTable.MaxPressure_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'MaxPressure_Value' nella tabella 'WorkingPointDataTable'"& _ 
                            " è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWorkingPointDataTable.MaxPressure_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PowerInput_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableWorkingPointDataTable.PowerInput_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'PowerInput_Caption' nella tabella 'WorkingPointDataTable"& _ 
                            "' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWorkingPointDataTable.PowerInput_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PowerInput_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableWorkingPointDataTable.PowerInput_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'PowerInput_Value' nella tabella 'WorkingPointDataTable' "& _ 
                            "è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWorkingPointDataTable.PowerInput_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SFP_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableWorkingPointDataTable.SFP_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'SFP_Caption' nella tabella 'WorkingPointDataTable' è DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWorkingPointDataTable.SFP_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SFP_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableWorkingPointDataTable.SFP_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'SFP_Value' nella tabella 'WorkingPointDataTable' è DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableWorkingPointDataTable.SFP_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SEL_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableWorkingPointDataTable.SEL_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'SEL_Caption' nella tabella 'WorkingPointDataTable' è DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWorkingPointDataTable.SEL_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SEL_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableWorkingPointDataTable.SEL_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'SEL_Value' nella tabella 'WorkingPointDataTable' è DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableWorkingPointDataTable.SEL_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RegLev_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableWorkingPointDataTable.RegLev_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'RegLev_Caption' nella tabella 'WorkingPointDataTable' è "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWorkingPointDataTable.RegLev_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RegLev_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableWorkingPointDataTable.RegLev_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'RegLev_Value' nella tabella 'WorkingPointDataTable' è DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableWorkingPointDataTable.RegLev_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RegLev_Note() As String
            Get
                Try 
                    Return CType(Me(Me.tableWorkingPointDataTable.RegLev_NoteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'RegLev_Note' nella tabella 'WorkingPointDataTable' è DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWorkingPointDataTable.RegLev_NoteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTitleNull() As Boolean
            Return Me.IsNull(Me.tableWorkingPointDataTable.TitleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTitleNull()
            Me(Me.tableWorkingPointDataTable.TitleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAirFlow_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableWorkingPointDataTable.AirFlow_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAirFlow_CaptionNull()
            Me(Me.tableWorkingPointDataTable.AirFlow_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAirFlow_ValueNull() As Boolean
            Return Me.IsNull(Me.tableWorkingPointDataTable.AirFlow_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAirFlow_ValueNull()
            Me(Me.tableWorkingPointDataTable.AirFlow_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMaxPressure_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableWorkingPointDataTable.MaxPressure_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMaxPressure_CaptionNull()
            Me(Me.tableWorkingPointDataTable.MaxPressure_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMaxPressure_ValueNull() As Boolean
            Return Me.IsNull(Me.tableWorkingPointDataTable.MaxPressure_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMaxPressure_ValueNull()
            Me(Me.tableWorkingPointDataTable.MaxPressure_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPowerInput_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableWorkingPointDataTable.PowerInput_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPowerInput_CaptionNull()
            Me(Me.tableWorkingPointDataTable.PowerInput_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPowerInput_ValueNull() As Boolean
            Return Me.IsNull(Me.tableWorkingPointDataTable.PowerInput_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPowerInput_ValueNull()
            Me(Me.tableWorkingPointDataTable.PowerInput_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSFP_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableWorkingPointDataTable.SFP_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSFP_CaptionNull()
            Me(Me.tableWorkingPointDataTable.SFP_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSFP_ValueNull() As Boolean
            Return Me.IsNull(Me.tableWorkingPointDataTable.SFP_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSFP_ValueNull()
            Me(Me.tableWorkingPointDataTable.SFP_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSEL_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableWorkingPointDataTable.SEL_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSEL_CaptionNull()
            Me(Me.tableWorkingPointDataTable.SEL_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSEL_ValueNull() As Boolean
            Return Me.IsNull(Me.tableWorkingPointDataTable.SEL_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSEL_ValueNull()
            Me(Me.tableWorkingPointDataTable.SEL_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRegLev_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableWorkingPointDataTable.RegLev_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRegLev_CaptionNull()
            Me(Me.tableWorkingPointDataTable.RegLev_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRegLev_ValueNull() As Boolean
            Return Me.IsNull(Me.tableWorkingPointDataTable.RegLev_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRegLev_ValueNull()
            Me(Me.tableWorkingPointDataTable.RegLev_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRegLev_NoteNull() As Boolean
            Return Me.IsNull(Me.tableWorkingPointDataTable.RegLev_NoteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRegLev_NoteNull()
            Me(Me.tableWorkingPointDataTable.RegLev_NoteColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TemperatureConditionsAndHumidityDataTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableTemperatureConditionsAndHumidityDataTable As TemperatureConditionsAndHumidityDataTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTemperatureConditionsAndHumidityDataTable = CType(Me.Table,TemperatureConditionsAndHumidityDataTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Title() As String
            Get
                Try 
                    Return CType(Me(Me.tableTemperatureConditionsAndHumidityDataTable.TitleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Title' nella tabella 'TemperatureConditionsAndHumidityDa"& _ 
                            "taTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTemperatureConditionsAndHumidityDataTable.TitleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FreshInletTemp_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableTemperatureConditionsAndHumidityDataTable.FreshInletTemp_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'FreshInletTemp_Caption' nella tabella 'TemperatureCondit"& _ 
                            "ionsAndHumidityDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTemperatureConditionsAndHumidityDataTable.FreshInletTemp_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FreshInletTemp_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableTemperatureConditionsAndHumidityDataTable.FreshInletTemp_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'FreshInletTemp_Value' nella tabella 'TemperatureConditio"& _ 
                            "nsAndHumidityDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTemperatureConditionsAndHumidityDataTable.FreshInletTemp_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FreshInletTemp_RH_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableTemperatureConditionsAndHumidityDataTable.FreshInletTemp_RH_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'FreshInletTemp_RH_Caption' nella tabella 'TemperatureCon"& _ 
                            "ditionsAndHumidityDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTemperatureConditionsAndHumidityDataTable.FreshInletTemp_RH_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FreshInletTemp_RH_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableTemperatureConditionsAndHumidityDataTable.FreshInletTemp_RH_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'FreshInletTemp_RH_Value' nella tabella 'TemperatureCondi"& _ 
                            "tionsAndHumidityDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTemperatureConditionsAndHumidityDataTable.FreshInletTemp_RH_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ReturnInletTemp_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableTemperatureConditionsAndHumidityDataTable.ReturnInletTemp_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'ReturnInletTemp_Caption' nella tabella 'TemperatureCondi"& _ 
                            "tionsAndHumidityDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTemperatureConditionsAndHumidityDataTable.ReturnInletTemp_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ReturnInletTemp_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableTemperatureConditionsAndHumidityDataTable.ReturnInletTemp_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'ReturnInletTemp_Value' nella tabella 'TemperatureConditi"& _ 
                            "onsAndHumidityDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTemperatureConditionsAndHumidityDataTable.ReturnInletTemp_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ReturnInletTemp_RH_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableTemperatureConditionsAndHumidityDataTable.ReturnInletTemp_RH_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'ReturnInletTemp_RH_Caption' nella tabella 'TemperatureCo"& _ 
                            "nditionsAndHumidityDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTemperatureConditionsAndHumidityDataTable.ReturnInletTemp_RH_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ReturnInletTemp_RH_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableTemperatureConditionsAndHumidityDataTable.ReturnInletTemp_RH_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'ReturnInletTemp_RH_Value' nella tabella 'TemperatureCond"& _ 
                            "itionsAndHumidityDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTemperatureConditionsAndHumidityDataTable.ReturnInletTemp_RH_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SupplyOutletTemp_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableTemperatureConditionsAndHumidityDataTable.SupplyOutletTemp_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'SupplyOutletTemp_Caption' nella tabella 'TemperatureCond"& _ 
                            "itionsAndHumidityDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTemperatureConditionsAndHumidityDataTable.SupplyOutletTemp_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SupplyOutletTemp_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableTemperatureConditionsAndHumidityDataTable.SupplyOutletTemp_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'SupplyOutletTemp_Value' nella tabella 'TemperatureCondit"& _ 
                            "ionsAndHumidityDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTemperatureConditionsAndHumidityDataTable.SupplyOutletTemp_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SupplyOutletTemp_RH_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableTemperatureConditionsAndHumidityDataTable.SupplyOutletTemp_RH_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'SupplyOutletTemp_RH_Caption' nella tabella 'TemperatureC"& _ 
                            "onditionsAndHumidityDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTemperatureConditionsAndHumidityDataTable.SupplyOutletTemp_RH_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SupplyOutletTemp_RH_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableTemperatureConditionsAndHumidityDataTable.SupplyOutletTemp_RH_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'SupplyOutletTemp_RH_Value' nella tabella 'TemperatureCon"& _ 
                            "ditionsAndHumidityDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTemperatureConditionsAndHumidityDataTable.SupplyOutletTemp_RH_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ExhaustOutletTemp_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableTemperatureConditionsAndHumidityDataTable.ExhaustOutletTemp_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'ExhaustOutletTemp_Caption' nella tabella 'TemperatureCon"& _ 
                            "ditionsAndHumidityDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTemperatureConditionsAndHumidityDataTable.ExhaustOutletTemp_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ExhaustOutletTemp_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableTemperatureConditionsAndHumidityDataTable.ExhaustOutletTemp_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'ExhaustOutletTemp_Value' nella tabella 'TemperatureCondi"& _ 
                            "tionsAndHumidityDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTemperatureConditionsAndHumidityDataTable.ExhaustOutletTemp_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ExhaustOutletTemp_RH_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableTemperatureConditionsAndHumidityDataTable.ExhaustOutletTemp_RH_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'ExhaustOutletTemp_RH_Caption' nella tabella 'Temperature"& _ 
                            "ConditionsAndHumidityDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTemperatureConditionsAndHumidityDataTable.ExhaustOutletTemp_RH_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ExhaustOutletTemp_RH_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableTemperatureConditionsAndHumidityDataTable.ExhaustOutletTemp_RH_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'ExhaustOutletTemp_RH_Value' nella tabella 'TemperatureCo"& _ 
                            "nditionsAndHumidityDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTemperatureConditionsAndHumidityDataTable.ExhaustOutletTemp_RH_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTitleNull() As Boolean
            Return Me.IsNull(Me.tableTemperatureConditionsAndHumidityDataTable.TitleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTitleNull()
            Me(Me.tableTemperatureConditionsAndHumidityDataTable.TitleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFreshInletTemp_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableTemperatureConditionsAndHumidityDataTable.FreshInletTemp_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFreshInletTemp_CaptionNull()
            Me(Me.tableTemperatureConditionsAndHumidityDataTable.FreshInletTemp_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFreshInletTemp_ValueNull() As Boolean
            Return Me.IsNull(Me.tableTemperatureConditionsAndHumidityDataTable.FreshInletTemp_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFreshInletTemp_ValueNull()
            Me(Me.tableTemperatureConditionsAndHumidityDataTable.FreshInletTemp_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFreshInletTemp_RH_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableTemperatureConditionsAndHumidityDataTable.FreshInletTemp_RH_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFreshInletTemp_RH_CaptionNull()
            Me(Me.tableTemperatureConditionsAndHumidityDataTable.FreshInletTemp_RH_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFreshInletTemp_RH_ValueNull() As Boolean
            Return Me.IsNull(Me.tableTemperatureConditionsAndHumidityDataTable.FreshInletTemp_RH_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFreshInletTemp_RH_ValueNull()
            Me(Me.tableTemperatureConditionsAndHumidityDataTable.FreshInletTemp_RH_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsReturnInletTemp_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableTemperatureConditionsAndHumidityDataTable.ReturnInletTemp_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetReturnInletTemp_CaptionNull()
            Me(Me.tableTemperatureConditionsAndHumidityDataTable.ReturnInletTemp_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsReturnInletTemp_ValueNull() As Boolean
            Return Me.IsNull(Me.tableTemperatureConditionsAndHumidityDataTable.ReturnInletTemp_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetReturnInletTemp_ValueNull()
            Me(Me.tableTemperatureConditionsAndHumidityDataTable.ReturnInletTemp_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsReturnInletTemp_RH_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableTemperatureConditionsAndHumidityDataTable.ReturnInletTemp_RH_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetReturnInletTemp_RH_CaptionNull()
            Me(Me.tableTemperatureConditionsAndHumidityDataTable.ReturnInletTemp_RH_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsReturnInletTemp_RH_ValueNull() As Boolean
            Return Me.IsNull(Me.tableTemperatureConditionsAndHumidityDataTable.ReturnInletTemp_RH_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetReturnInletTemp_RH_ValueNull()
            Me(Me.tableTemperatureConditionsAndHumidityDataTable.ReturnInletTemp_RH_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSupplyOutletTemp_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableTemperatureConditionsAndHumidityDataTable.SupplyOutletTemp_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSupplyOutletTemp_CaptionNull()
            Me(Me.tableTemperatureConditionsAndHumidityDataTable.SupplyOutletTemp_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSupplyOutletTemp_ValueNull() As Boolean
            Return Me.IsNull(Me.tableTemperatureConditionsAndHumidityDataTable.SupplyOutletTemp_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSupplyOutletTemp_ValueNull()
            Me(Me.tableTemperatureConditionsAndHumidityDataTable.SupplyOutletTemp_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSupplyOutletTemp_RH_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableTemperatureConditionsAndHumidityDataTable.SupplyOutletTemp_RH_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSupplyOutletTemp_RH_CaptionNull()
            Me(Me.tableTemperatureConditionsAndHumidityDataTable.SupplyOutletTemp_RH_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSupplyOutletTemp_RH_ValueNull() As Boolean
            Return Me.IsNull(Me.tableTemperatureConditionsAndHumidityDataTable.SupplyOutletTemp_RH_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSupplyOutletTemp_RH_ValueNull()
            Me(Me.tableTemperatureConditionsAndHumidityDataTable.SupplyOutletTemp_RH_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsExhaustOutletTemp_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableTemperatureConditionsAndHumidityDataTable.ExhaustOutletTemp_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetExhaustOutletTemp_CaptionNull()
            Me(Me.tableTemperatureConditionsAndHumidityDataTable.ExhaustOutletTemp_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsExhaustOutletTemp_ValueNull() As Boolean
            Return Me.IsNull(Me.tableTemperatureConditionsAndHumidityDataTable.ExhaustOutletTemp_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetExhaustOutletTemp_ValueNull()
            Me(Me.tableTemperatureConditionsAndHumidityDataTable.ExhaustOutletTemp_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsExhaustOutletTemp_RH_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableTemperatureConditionsAndHumidityDataTable.ExhaustOutletTemp_RH_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetExhaustOutletTemp_RH_CaptionNull()
            Me(Me.tableTemperatureConditionsAndHumidityDataTable.ExhaustOutletTemp_RH_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsExhaustOutletTemp_RH_ValueNull() As Boolean
            Return Me.IsNull(Me.tableTemperatureConditionsAndHumidityDataTable.ExhaustOutletTemp_RH_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetExhaustOutletTemp_RH_ValueNull()
            Me(Me.tableTemperatureConditionsAndHumidityDataTable.ExhaustOutletTemp_RH_ValueColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class HeatExchangerPerformancesDataTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableHeatExchangerPerformancesDataTable As HeatExchangerPerformancesDataTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHeatExchangerPerformancesDataTable = CType(Me.Table,HeatExchangerPerformancesDataTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Title() As String
            Get
                Try 
                    Return CType(Me(Me.tableHeatExchangerPerformancesDataTable.TitleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Title' nella tabella 'HeatExchangerPerformancesDataTable"& _ 
                            "' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHeatExchangerPerformancesDataTable.TitleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property HeatTransferred_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableHeatExchangerPerformancesDataTable.HeatTransferred_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'HeatTransferred_Caption' nella tabella 'HeatExchangerPer"& _ 
                            "formancesDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHeatExchangerPerformancesDataTable.HeatTransferred_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property HeatTransferred_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableHeatExchangerPerformancesDataTable.HeatTransferred_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'HeatTransferred_Value' nella tabella 'HeatExchangerPerfo"& _ 
                            "rmancesDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHeatExchangerPerformancesDataTable.HeatTransferred_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SensibleHeat_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableHeatExchangerPerformancesDataTable.SensibleHeat_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'SensibleHeat_Caption' nella tabella 'HeatExchangerPerfor"& _ 
                            "mancesDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHeatExchangerPerformancesDataTable.SensibleHeat_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SensibleHeat_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableHeatExchangerPerformancesDataTable.SensibleHeat_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'SensibleHeat_Value' nella tabella 'HeatExchangerPerforma"& _ 
                            "ncesDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHeatExchangerPerformancesDataTable.SensibleHeat_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LatentHeat_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableHeatExchangerPerformancesDataTable.LatentHeat_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'LatentHeat_Caption' nella tabella 'HeatExchangerPerforma"& _ 
                            "ncesDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHeatExchangerPerformancesDataTable.LatentHeat_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LatentHeat_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableHeatExchangerPerformancesDataTable.LatentHeat_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'LatentHeat_Value' nella tabella 'HeatExchangerPerformanc"& _ 
                            "esDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHeatExchangerPerformancesDataTable.LatentHeat_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Efficiency_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableHeatExchangerPerformancesDataTable.Efficiency_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Efficiency_Caption' nella tabella 'HeatExchangerPerforma"& _ 
                            "ncesDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHeatExchangerPerformancesDataTable.Efficiency_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Efficiency_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableHeatExchangerPerformancesDataTable.Efficiency_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Efficiency_Value' nella tabella 'HeatExchangerPerformanc"& _ 
                            "esDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHeatExchangerPerformancesDataTable.Efficiency_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property WaterProduced_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableHeatExchangerPerformancesDataTable.WaterProduced_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'WaterProduced_Caption' nella tabella 'HeatExchangerPerfo"& _ 
                            "rmancesDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHeatExchangerPerformancesDataTable.WaterProduced_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property WaterProduced_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableHeatExchangerPerformancesDataTable.WaterProduced_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'WaterProduced_Value' nella tabella 'HeatExchangerPerform"& _ 
                            "ancesDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHeatExchangerPerformancesDataTable.WaterProduced_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTitleNull() As Boolean
            Return Me.IsNull(Me.tableHeatExchangerPerformancesDataTable.TitleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTitleNull()
            Me(Me.tableHeatExchangerPerformancesDataTable.TitleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHeatTransferred_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableHeatExchangerPerformancesDataTable.HeatTransferred_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHeatTransferred_CaptionNull()
            Me(Me.tableHeatExchangerPerformancesDataTable.HeatTransferred_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHeatTransferred_ValueNull() As Boolean
            Return Me.IsNull(Me.tableHeatExchangerPerformancesDataTable.HeatTransferred_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHeatTransferred_ValueNull()
            Me(Me.tableHeatExchangerPerformancesDataTable.HeatTransferred_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSensibleHeat_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableHeatExchangerPerformancesDataTable.SensibleHeat_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSensibleHeat_CaptionNull()
            Me(Me.tableHeatExchangerPerformancesDataTable.SensibleHeat_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSensibleHeat_ValueNull() As Boolean
            Return Me.IsNull(Me.tableHeatExchangerPerformancesDataTable.SensibleHeat_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSensibleHeat_ValueNull()
            Me(Me.tableHeatExchangerPerformancesDataTable.SensibleHeat_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLatentHeat_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableHeatExchangerPerformancesDataTable.LatentHeat_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLatentHeat_CaptionNull()
            Me(Me.tableHeatExchangerPerformancesDataTable.LatentHeat_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLatentHeat_ValueNull() As Boolean
            Return Me.IsNull(Me.tableHeatExchangerPerformancesDataTable.LatentHeat_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLatentHeat_ValueNull()
            Me(Me.tableHeatExchangerPerformancesDataTable.LatentHeat_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEfficiency_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableHeatExchangerPerformancesDataTable.Efficiency_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEfficiency_CaptionNull()
            Me(Me.tableHeatExchangerPerformancesDataTable.Efficiency_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEfficiency_ValueNull() As Boolean
            Return Me.IsNull(Me.tableHeatExchangerPerformancesDataTable.Efficiency_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEfficiency_ValueNull()
            Me(Me.tableHeatExchangerPerformancesDataTable.Efficiency_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsWaterProduced_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableHeatExchangerPerformancesDataTable.WaterProduced_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetWaterProduced_CaptionNull()
            Me(Me.tableHeatExchangerPerformancesDataTable.WaterProduced_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsWaterProduced_ValueNull() As Boolean
            Return Me.IsNull(Me.tableHeatExchangerPerformancesDataTable.WaterProduced_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetWaterProduced_ValueNull()
            Me(Me.tableHeatExchangerPerformancesDataTable.WaterProduced_ValueColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SoundPowerDataTableOldRow
        Inherits Global.System.Data.DataRow
        
        Private tableSoundPowerDataTableOld As SoundPowerDataTableOldDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSoundPowerDataTableOld = CType(Me.Table,SoundPowerDataTableOldDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Title() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.TitleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Title' nella tabella 'SoundPowerDataTableOld' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.TitleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LwA_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.LwA_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'LwA_Caption' nella tabella 'SoundPowerDataTableOld' è DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.LwA_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Hz63_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Hz63_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Hz63_Caption' nella tabella 'SoundPowerDataTableOld' è D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Hz63_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Hz125_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Hz125_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Hz125_Caption' nella tabella 'SoundPowerDataTableOld' è "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Hz125_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Hz250_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Hz250_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Hz250_Caption' nella tabella 'SoundPowerDataTableOld' è "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Hz250_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Hz500_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Hz500_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Hz500_Caption' nella tabella 'SoundPowerDataTableOld' è "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Hz500_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Hz1000_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Hz1000_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Hz1000_Caption' nella tabella 'SoundPowerDataTableOld' è"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Hz1000_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Hz2000_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Hz2000_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Hz2000_Caption' nella tabella 'SoundPowerDataTableOld' è"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Hz2000_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Hz4000_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Hz4000_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Hz4000_Caption' nella tabella 'SoundPowerDataTableOld' è"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Hz4000_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Hz8000_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Hz8000_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Hz8000_Caption' nella tabella 'SoundPowerDataTableOld' è"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Hz8000_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Lp1Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Lp1CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Lp1Caption' nella tabella 'SoundPowerDataTableOld' è DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Lp1CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Lp2Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Lp2CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Lp2Caption' nella tabella 'SoundPowerDataTableOld' è DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Lp2CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Inlet_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Inlet_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Inlet_Caption' nella tabella 'SoundPowerDataTableOld' è "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Inlet_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Inlet_LwA_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Inlet_LwA_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Inlet_LwA_Value' nella tabella 'SoundPowerDataTableOld' "& _ 
                            "è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Inlet_LwA_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Inlet_Hz63_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Inlet_Hz63_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Inlet_Hz63_Value' nella tabella 'SoundPowerDataTableOld'"& _ 
                            " è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Inlet_Hz63_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Inlet_Hz125_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Inlet_Hz125_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Inlet_Hz125_Value' nella tabella 'SoundPowerDataTableOld"& _ 
                            "' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Inlet_Hz125_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Inlet_Hz250_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Inlet_Hz250_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Inlet_Hz250_Value' nella tabella 'SoundPowerDataTableOld"& _ 
                            "' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Inlet_Hz250_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Inlet_Hz500_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Inlet_Hz500_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Inlet_Hz500_Value' nella tabella 'SoundPowerDataTableOld"& _ 
                            "' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Inlet_Hz500_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Inlet_Hz1000_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Inlet_Hz1000_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Inlet_Hz1000_Value' nella tabella 'SoundPowerDataTableOl"& _ 
                            "d' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Inlet_Hz1000_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Inlet_Hz2000_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Inlet_Hz2000_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Inlet_Hz2000_Value' nella tabella 'SoundPowerDataTableOl"& _ 
                            "d' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Inlet_Hz2000_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Inlet_Hz4000_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Inlet_Hz4000_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Inlet_Hz4000_Value' nella tabella 'SoundPowerDataTableOl"& _ 
                            "d' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Inlet_Hz4000_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Inlet_Hz8000_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Inlet_Hz8000_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Inlet_Hz8000_Value' nella tabella 'SoundPowerDataTableOl"& _ 
                            "d' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Inlet_Hz8000_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Inlet_Lp1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Inlet_Lp1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Inlet_Lp1' nella tabella 'SoundPowerDataTableOld' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Inlet_Lp1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Inlet_Lp2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Inlet_Lp2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Inlet_Lp2' nella tabella 'SoundPowerDataTableOld' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Inlet_Lp2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Outlet_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Outlet_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Outlet_Caption' nella tabella 'SoundPowerDataTableOld' è"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Outlet_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Outlet_LwA_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Outlet_LwA_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Outlet_LwA_Value' nella tabella 'SoundPowerDataTableOld'"& _ 
                            " è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Outlet_LwA_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Outlet_Hz63_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Outlet_Hz63_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Outlet_Hz63_Value' nella tabella 'SoundPowerDataTableOld"& _ 
                            "' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Outlet_Hz63_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Outlet_Hz125_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Outlet_Hz125_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Outlet_Hz125_Value' nella tabella 'SoundPowerDataTableOl"& _ 
                            "d' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Outlet_Hz125_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Outlet_Hz250_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Outlet_Hz250_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Outlet_Hz250_Value' nella tabella 'SoundPowerDataTableOl"& _ 
                            "d' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Outlet_Hz250_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Outlet_Hz500_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Outlet_Hz500_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Outlet_Hz500_Value' nella tabella 'SoundPowerDataTableOl"& _ 
                            "d' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Outlet_Hz500_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Outlet_Hz1000_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Outlet_Hz1000_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Outlet_Hz1000_Value' nella tabella 'SoundPowerDataTableO"& _ 
                            "ld' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Outlet_Hz1000_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Outlet_Hz2000_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Outlet_Hz2000_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Outlet_Hz2000_Value' nella tabella 'SoundPowerDataTableO"& _ 
                            "ld' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Outlet_Hz2000_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Outlet_Hz4000_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Outlet_Hz4000_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Outlet_Hz4000_Value' nella tabella 'SoundPowerDataTableO"& _ 
                            "ld' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Outlet_Hz4000_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Outlet_Hz8000_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Outlet_Hz8000_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Outlet_Hz8000_Value' nella tabella 'SoundPowerDataTableO"& _ 
                            "ld' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Outlet_Hz8000_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Outlet_Lp1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Outlet_Lp1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Outlet_Lp1' nella tabella 'SoundPowerDataTableOld' è DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Outlet_Lp1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Outlet_Lp2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Outlet_Lp2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Outlet_Lp2' nella tabella 'SoundPowerDataTableOld' è DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Outlet_Lp2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Fresh_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Fresh_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Fresh_Caption' nella tabella 'SoundPowerDataTableOld' è "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Fresh_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Fresh_LwA_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Fresh_LwA_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Fresh_LwA_Value' nella tabella 'SoundPowerDataTableOld' "& _ 
                            "è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Fresh_LwA_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Fresh_Hz63_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Fresh_Hz63_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Fresh_Hz63_Value' nella tabella 'SoundPowerDataTableOld'"& _ 
                            " è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Fresh_Hz63_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Fresh_Hz125_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Fresh_Hz125_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Fresh_Hz125_Value' nella tabella 'SoundPowerDataTableOld"& _ 
                            "' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Fresh_Hz125_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Fresh_Hz250_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Fresh_Hz250_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Fresh_Hz250_Value' nella tabella 'SoundPowerDataTableOld"& _ 
                            "' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Fresh_Hz250_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Fresh_Hz500_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Fresh_Hz500_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Fresh_Hz500_Value' nella tabella 'SoundPowerDataTableOld"& _ 
                            "' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Fresh_Hz500_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Fresh_Hz1000_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Fresh_Hz1000_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Fresh_Hz1000_Value' nella tabella 'SoundPowerDataTableOl"& _ 
                            "d' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Fresh_Hz1000_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Fresh_Hz2000_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Fresh_Hz2000_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Fresh_Hz2000_Value' nella tabella 'SoundPowerDataTableOl"& _ 
                            "d' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Fresh_Hz2000_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Fresh_Hz4000_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Fresh_Hz4000_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Fresh_Hz4000_Value' nella tabella 'SoundPowerDataTableOl"& _ 
                            "d' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Fresh_Hz4000_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Fresh_Hz8000_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Fresh_Hz8000_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Fresh_Hz8000_Value' nella tabella 'SoundPowerDataTableOl"& _ 
                            "d' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Fresh_Hz8000_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Fresh_Lp1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Fresh_Lp1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Fresh_Lp1' nella tabella 'SoundPowerDataTableOld' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Fresh_Lp1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Fresh_Lp2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Fresh_Lp2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Fresh_Lp2' nella tabella 'SoundPowerDataTableOld' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Fresh_Lp2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Exhaust_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Exhaust_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Exhaust_Caption' nella tabella 'SoundPowerDataTableOld' "& _ 
                            "è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Exhaust_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Exhaust_LwA_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Exhaust_LwA_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Exhaust_LwA_Value' nella tabella 'SoundPowerDataTableOld"& _ 
                            "' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Exhaust_LwA_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Exhaust_Hz63_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Exhaust_Hz63_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Exhaust_Hz63_Value' nella tabella 'SoundPowerDataTableOl"& _ 
                            "d' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Exhaust_Hz63_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Exhaust_Hz125_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Exhaust_Hz125_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Exhaust_Hz125_Value' nella tabella 'SoundPowerDataTableO"& _ 
                            "ld' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Exhaust_Hz125_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Exhaust_Hz250_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Exhaust_Hz250_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Exhaust_Hz250_Value' nella tabella 'SoundPowerDataTableO"& _ 
                            "ld' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Exhaust_Hz250_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Exhaust_Hz500_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Exhaust_Hz500_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Exhaust_Hz500_Value' nella tabella 'SoundPowerDataTableO"& _ 
                            "ld' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Exhaust_Hz500_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Exhaust_Hz1000_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Exhaust_Hz1000_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Exhaust_Hz1000_Value' nella tabella 'SoundPowerDataTable"& _ 
                            "Old' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Exhaust_Hz1000_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Exhaust_Hz2000_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Exhaust_Hz2000_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Exhaust_Hz2000_Value' nella tabella 'SoundPowerDataTable"& _ 
                            "Old' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Exhaust_Hz2000_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Exhaust_Hz4000_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Exhaust_Hz4000_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Exhaust_Hz4000_Value' nella tabella 'SoundPowerDataTable"& _ 
                            "Old' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Exhaust_Hz4000_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Exhaust_Hz8000_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Exhaust_Hz8000_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Exhaust_Hz8000_Value' nella tabella 'SoundPowerDataTable"& _ 
                            "Old' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Exhaust_Hz8000_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Exhaust_Lp1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Exhaust_Lp1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Exhaust_Lp1' nella tabella 'SoundPowerDataTableOld' è DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Exhaust_Lp1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Exhaust_Lp2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Exhaust_Lp2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Exhaust_Lp2' nella tabella 'SoundPowerDataTableOld' è DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Exhaust_Lp2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Breakout_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Breakout_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Breakout_Caption' nella tabella 'SoundPowerDataTableOld'"& _ 
                            " è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Breakout_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Breakout_LwA_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Breakout_LwA_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Breakout_LwA_Value' nella tabella 'SoundPowerDataTableOl"& _ 
                            "d' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Breakout_LwA_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Breakout_Hz63_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Breakout_Hz63_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Breakout_Hz63_Value' nella tabella 'SoundPowerDataTableO"& _ 
                            "ld' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Breakout_Hz63_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Breakout_Hz125_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Breakout_Hz125_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Breakout_Hz125_Value' nella tabella 'SoundPowerDataTable"& _ 
                            "Old' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Breakout_Hz125_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Breakout_Hz250_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Breakout_Hz250_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Breakout_Hz250_Value' nella tabella 'SoundPowerDataTable"& _ 
                            "Old' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Breakout_Hz250_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Breakout_Hz500_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Breakout_Hz500_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Breakout_Hz500_Value' nella tabella 'SoundPowerDataTable"& _ 
                            "Old' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Breakout_Hz500_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Breakout_Hz1000_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Breakout_Hz1000_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Breakout_Hz1000_Value' nella tabella 'SoundPowerDataTabl"& _ 
                            "eOld' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Breakout_Hz1000_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Breakout_Hz2000_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Breakout_Hz2000_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Breakout_Hz2000_Value' nella tabella 'SoundPowerDataTabl"& _ 
                            "eOld' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Breakout_Hz2000_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Breakout_Hz4000_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Breakout_Hz4000_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Breakout_Hz4000_Value' nella tabella 'SoundPowerDataTabl"& _ 
                            "eOld' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Breakout_Hz4000_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Breakout_Hz8000_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Breakout_Hz8000_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Breakout_Hz8000_Value' nella tabella 'SoundPowerDataTabl"& _ 
                            "eOld' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Breakout_Hz8000_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Breakout_Lp1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Breakout_Lp1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Breakout_Lp1' nella tabella 'SoundPowerDataTableOld' è D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Breakout_Lp1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Breakout_Lp2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTableOld.Breakout_Lp2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Breakout_Lp2' nella tabella 'SoundPowerDataTableOld' è D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTableOld.Breakout_Lp2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTitleNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.TitleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTitleNull()
            Me(Me.tableSoundPowerDataTableOld.TitleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLwA_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.LwA_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLwA_CaptionNull()
            Me(Me.tableSoundPowerDataTableOld.LwA_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHz63_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Hz63_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHz63_CaptionNull()
            Me(Me.tableSoundPowerDataTableOld.Hz63_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHz125_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Hz125_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHz125_CaptionNull()
            Me(Me.tableSoundPowerDataTableOld.Hz125_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHz250_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Hz250_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHz250_CaptionNull()
            Me(Me.tableSoundPowerDataTableOld.Hz250_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHz500_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Hz500_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHz500_CaptionNull()
            Me(Me.tableSoundPowerDataTableOld.Hz500_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHz1000_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Hz1000_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHz1000_CaptionNull()
            Me(Me.tableSoundPowerDataTableOld.Hz1000_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHz2000_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Hz2000_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHz2000_CaptionNull()
            Me(Me.tableSoundPowerDataTableOld.Hz2000_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHz4000_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Hz4000_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHz4000_CaptionNull()
            Me(Me.tableSoundPowerDataTableOld.Hz4000_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHz8000_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Hz8000_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHz8000_CaptionNull()
            Me(Me.tableSoundPowerDataTableOld.Hz8000_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLp1CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Lp1CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLp1CaptionNull()
            Me(Me.tableSoundPowerDataTableOld.Lp1CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLp2CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Lp2CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLp2CaptionNull()
            Me(Me.tableSoundPowerDataTableOld.Lp2CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsInlet_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Inlet_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetInlet_CaptionNull()
            Me(Me.tableSoundPowerDataTableOld.Inlet_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsInlet_LwA_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Inlet_LwA_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetInlet_LwA_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Inlet_LwA_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsInlet_Hz63_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Inlet_Hz63_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetInlet_Hz63_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Inlet_Hz63_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsInlet_Hz125_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Inlet_Hz125_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetInlet_Hz125_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Inlet_Hz125_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsInlet_Hz250_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Inlet_Hz250_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetInlet_Hz250_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Inlet_Hz250_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsInlet_Hz500_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Inlet_Hz500_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetInlet_Hz500_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Inlet_Hz500_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsInlet_Hz1000_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Inlet_Hz1000_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetInlet_Hz1000_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Inlet_Hz1000_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsInlet_Hz2000_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Inlet_Hz2000_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetInlet_Hz2000_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Inlet_Hz2000_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsInlet_Hz4000_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Inlet_Hz4000_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetInlet_Hz4000_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Inlet_Hz4000_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsInlet_Hz8000_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Inlet_Hz8000_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetInlet_Hz8000_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Inlet_Hz8000_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsInlet_Lp1Null() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Inlet_Lp1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetInlet_Lp1Null()
            Me(Me.tableSoundPowerDataTableOld.Inlet_Lp1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsInlet_Lp2Null() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Inlet_Lp2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetInlet_Lp2Null()
            Me(Me.tableSoundPowerDataTableOld.Inlet_Lp2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOutlet_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Outlet_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOutlet_CaptionNull()
            Me(Me.tableSoundPowerDataTableOld.Outlet_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOutlet_LwA_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Outlet_LwA_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOutlet_LwA_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Outlet_LwA_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOutlet_Hz63_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Outlet_Hz63_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOutlet_Hz63_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Outlet_Hz63_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOutlet_Hz125_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Outlet_Hz125_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOutlet_Hz125_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Outlet_Hz125_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOutlet_Hz250_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Outlet_Hz250_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOutlet_Hz250_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Outlet_Hz250_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOutlet_Hz500_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Outlet_Hz500_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOutlet_Hz500_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Outlet_Hz500_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOutlet_Hz1000_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Outlet_Hz1000_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOutlet_Hz1000_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Outlet_Hz1000_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOutlet_Hz2000_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Outlet_Hz2000_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOutlet_Hz2000_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Outlet_Hz2000_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOutlet_Hz4000_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Outlet_Hz4000_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOutlet_Hz4000_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Outlet_Hz4000_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOutlet_Hz8000_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Outlet_Hz8000_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOutlet_Hz8000_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Outlet_Hz8000_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOutlet_Lp1Null() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Outlet_Lp1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOutlet_Lp1Null()
            Me(Me.tableSoundPowerDataTableOld.Outlet_Lp1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOutlet_Lp2Null() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Outlet_Lp2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOutlet_Lp2Null()
            Me(Me.tableSoundPowerDataTableOld.Outlet_Lp2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFresh_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Fresh_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFresh_CaptionNull()
            Me(Me.tableSoundPowerDataTableOld.Fresh_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFresh_LwA_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Fresh_LwA_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFresh_LwA_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Fresh_LwA_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFresh_Hz63_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Fresh_Hz63_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFresh_Hz63_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Fresh_Hz63_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFresh_Hz125_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Fresh_Hz125_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFresh_Hz125_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Fresh_Hz125_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFresh_Hz250_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Fresh_Hz250_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFresh_Hz250_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Fresh_Hz250_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFresh_Hz500_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Fresh_Hz500_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFresh_Hz500_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Fresh_Hz500_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFresh_Hz1000_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Fresh_Hz1000_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFresh_Hz1000_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Fresh_Hz1000_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFresh_Hz2000_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Fresh_Hz2000_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFresh_Hz2000_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Fresh_Hz2000_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFresh_Hz4000_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Fresh_Hz4000_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFresh_Hz4000_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Fresh_Hz4000_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFresh_Hz8000_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Fresh_Hz8000_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFresh_Hz8000_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Fresh_Hz8000_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFresh_Lp1Null() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Fresh_Lp1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFresh_Lp1Null()
            Me(Me.tableSoundPowerDataTableOld.Fresh_Lp1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFresh_Lp2Null() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Fresh_Lp2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFresh_Lp2Null()
            Me(Me.tableSoundPowerDataTableOld.Fresh_Lp2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsExhaust_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Exhaust_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetExhaust_CaptionNull()
            Me(Me.tableSoundPowerDataTableOld.Exhaust_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsExhaust_LwA_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Exhaust_LwA_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetExhaust_LwA_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Exhaust_LwA_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsExhaust_Hz63_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Exhaust_Hz63_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetExhaust_Hz63_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Exhaust_Hz63_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsExhaust_Hz125_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Exhaust_Hz125_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetExhaust_Hz125_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Exhaust_Hz125_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsExhaust_Hz250_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Exhaust_Hz250_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetExhaust_Hz250_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Exhaust_Hz250_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsExhaust_Hz500_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Exhaust_Hz500_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetExhaust_Hz500_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Exhaust_Hz500_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsExhaust_Hz1000_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Exhaust_Hz1000_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetExhaust_Hz1000_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Exhaust_Hz1000_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsExhaust_Hz2000_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Exhaust_Hz2000_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetExhaust_Hz2000_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Exhaust_Hz2000_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsExhaust_Hz4000_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Exhaust_Hz4000_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetExhaust_Hz4000_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Exhaust_Hz4000_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsExhaust_Hz8000_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Exhaust_Hz8000_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetExhaust_Hz8000_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Exhaust_Hz8000_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsExhaust_Lp1Null() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Exhaust_Lp1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetExhaust_Lp1Null()
            Me(Me.tableSoundPowerDataTableOld.Exhaust_Lp1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsExhaust_Lp2Null() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Exhaust_Lp2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetExhaust_Lp2Null()
            Me(Me.tableSoundPowerDataTableOld.Exhaust_Lp2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBreakout_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Breakout_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBreakout_CaptionNull()
            Me(Me.tableSoundPowerDataTableOld.Breakout_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBreakout_LwA_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Breakout_LwA_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBreakout_LwA_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Breakout_LwA_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBreakout_Hz63_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Breakout_Hz63_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBreakout_Hz63_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Breakout_Hz63_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBreakout_Hz125_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Breakout_Hz125_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBreakout_Hz125_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Breakout_Hz125_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBreakout_Hz250_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Breakout_Hz250_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBreakout_Hz250_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Breakout_Hz250_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBreakout_Hz500_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Breakout_Hz500_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBreakout_Hz500_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Breakout_Hz500_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBreakout_Hz1000_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Breakout_Hz1000_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBreakout_Hz1000_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Breakout_Hz1000_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBreakout_Hz2000_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Breakout_Hz2000_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBreakout_Hz2000_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Breakout_Hz2000_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBreakout_Hz4000_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Breakout_Hz4000_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBreakout_Hz4000_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Breakout_Hz4000_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBreakout_Hz8000_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Breakout_Hz8000_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBreakout_Hz8000_ValueNull()
            Me(Me.tableSoundPowerDataTableOld.Breakout_Hz8000_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBreakout_Lp1Null() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Breakout_Lp1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBreakout_Lp1Null()
            Me(Me.tableSoundPowerDataTableOld.Breakout_Lp1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBreakout_Lp2Null() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTableOld.Breakout_Lp2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBreakout_Lp2Null()
            Me(Me.tableSoundPowerDataTableOld.Breakout_Lp2Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DiagramDataTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableDiagramDataTable As DiagramDataTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDiagramDataTable = CType(Me.Table,DiagramDataTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PressureImage() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableDiagramDataTable.PressureImageColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'PressureImage' nella tabella 'DiagramDataTable' è DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableDiagramDataTable.PressureImageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PowerImage() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableDiagramDataTable.PowerImageColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'PowerImage' nella tabella 'DiagramDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDiagramDataTable.PowerImageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AirFlowImage() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableDiagramDataTable.AirFlowImageColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'AirFlowImage' nella tabella 'DiagramDataTable' è DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableDiagramDataTable.AirFlowImageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LegendImage() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableDiagramDataTable.LegendImageColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'LegendImage' nella tabella 'DiagramDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDiagramDataTable.LegendImageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CO2Image() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableDiagramDataTable.CO2ImageColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'CO2Image' nella tabella 'DiagramDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDiagramDataTable.CO2ImageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPressureImageNull() As Boolean
            Return Me.IsNull(Me.tableDiagramDataTable.PressureImageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPressureImageNull()
            Me(Me.tableDiagramDataTable.PressureImageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPowerImageNull() As Boolean
            Return Me.IsNull(Me.tableDiagramDataTable.PowerImageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPowerImageNull()
            Me(Me.tableDiagramDataTable.PowerImageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAirFlowImageNull() As Boolean
            Return Me.IsNull(Me.tableDiagramDataTable.AirFlowImageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAirFlowImageNull()
            Me(Me.tableDiagramDataTable.AirFlowImageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLegendImageNull() As Boolean
            Return Me.IsNull(Me.tableDiagramDataTable.LegendImageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLegendImageNull()
            Me(Me.tableDiagramDataTable.LegendImageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCO2ImageNull() As Boolean
            Return Me.IsNull(Me.tableDiagramDataTable.CO2ImageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCO2ImageNull()
            Me(Me.tableDiagramDataTable.CO2ImageColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SAPDataTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableSAPDataTable As SAPDataTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSAPDataTable = CType(Me.Table,SAPDataTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Title() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAPDataTable.TitleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Title' nella tabella 'SAPDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAPDataTable.TitleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ExhaustTerminalConfiguration_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAPDataTable.ExhaustTerminalConfiguration_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'ExhaustTerminalConfiguration_Caption' nella tabella 'SAP"& _ 
                            "DataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAPDataTable.ExhaustTerminalConfiguration_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TotalExhaustFlowRate_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAPDataTable.TotalExhaustFlowRate_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'TotalExhaustFlowRate_Caption' nella tabella 'SAPDataTabl"& _ 
                            "e' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAPDataTable.TotalExhaustFlowRate_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TotalSupplyFlowRate_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAPDataTable.TotalSupplyFlowRate_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'TotalSupplyFlowRate_Caption' nella tabella 'SAPDataTable"& _ 
                            "' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAPDataTable.TotalSupplyFlowRate_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RegulationLevel_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAPDataTable.RegulationLevel_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'RegulationLevel_Caption' nella tabella 'SAPDataTable' è "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAPDataTable.RegulationLevel_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SpecificFanPower_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAPDataTable.SpecificFanPower_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'SpecificFanPower_Caption' nella tabella 'SAPDataTable' è"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAPDataTable.SpecificFanPower_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property HeatExchangeEfficiency_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAPDataTable.HeatExchangeEfficiency_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'HeatExchangeEfficiency_Caption' nella tabella 'SAPDataTa"& _ 
                            "ble' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAPDataTable.HeatExchangeEfficiency_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EnergySavingTrustBestPracticePerformanceCompliant_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAPDataTable.EnergySavingTrustBestPracticePerformanceCompliant_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'EnergySavingTrustBestPracticePerformanceCompliant_Captio"& _ 
                            "n' nella tabella 'SAPDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAPDataTable.EnergySavingTrustBestPracticePerformanceCompliant_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Visible() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSAPDataTable.VisibleColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Visible' nella tabella 'SAPDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAPDataTable.VisibleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTitleNull() As Boolean
            Return Me.IsNull(Me.tableSAPDataTable.TitleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTitleNull()
            Me(Me.tableSAPDataTable.TitleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsExhaustTerminalConfiguration_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSAPDataTable.ExhaustTerminalConfiguration_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetExhaustTerminalConfiguration_CaptionNull()
            Me(Me.tableSAPDataTable.ExhaustTerminalConfiguration_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTotalExhaustFlowRate_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSAPDataTable.TotalExhaustFlowRate_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTotalExhaustFlowRate_CaptionNull()
            Me(Me.tableSAPDataTable.TotalExhaustFlowRate_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTotalSupplyFlowRate_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSAPDataTable.TotalSupplyFlowRate_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTotalSupplyFlowRate_CaptionNull()
            Me(Me.tableSAPDataTable.TotalSupplyFlowRate_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRegulationLevel_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSAPDataTable.RegulationLevel_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRegulationLevel_CaptionNull()
            Me(Me.tableSAPDataTable.RegulationLevel_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSpecificFanPower_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSAPDataTable.SpecificFanPower_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSpecificFanPower_CaptionNull()
            Me(Me.tableSAPDataTable.SpecificFanPower_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHeatExchangeEfficiency_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSAPDataTable.HeatExchangeEfficiency_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHeatExchangeEfficiency_CaptionNull()
            Me(Me.tableSAPDataTable.HeatExchangeEfficiency_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEnergySavingTrustBestPracticePerformanceCompliant_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSAPDataTable.EnergySavingTrustBestPracticePerformanceCompliant_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEnergySavingTrustBestPracticePerformanceCompliant_CaptionNull()
            Me(Me.tableSAPDataTable.EnergySavingTrustBestPracticePerformanceCompliant_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVisibleNull() As Boolean
            Return Me.IsNull(Me.tableSAPDataTable.VisibleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVisibleNull()
            Me(Me.tableSAPDataTable.VisibleColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SAPItemsDataTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableSAPItemsDataTable As SAPItemsDataTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSAPItemsDataTable = CType(Me.Table,SAPItemsDataTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ExhaustTerminalConfiguration_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAPItemsDataTable.ExhaustTerminalConfiguration_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'ExhaustTerminalConfiguration_Value' nella tabella 'SAPIt"& _ 
                            "emsDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAPItemsDataTable.ExhaustTerminalConfiguration_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TotalExhaustFlowRate_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSAPItemsDataTable.TotalExhaustFlowRate_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'TotalExhaustFlowRate_Value' nella tabella 'SAPItemsDataT"& _ 
                            "able' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAPItemsDataTable.TotalExhaustFlowRate_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property TotalSupplyFlowRate_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSAPItemsDataTable.TotalSupplyFlowRate_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'TotalSupplyFlowRate_Value' nella tabella 'SAPItemsDataTa"& _ 
                            "ble' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAPItemsDataTable.TotalSupplyFlowRate_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RegulationLevel_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSAPItemsDataTable.RegulationLevel_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'RegulationLevel_Value' nella tabella 'SAPItemsDataTable'"& _ 
                            " è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAPItemsDataTable.RegulationLevel_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SpecificFanPower_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSAPItemsDataTable.SpecificFanPower_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'SpecificFanPower_Value' nella tabella 'SAPItemsDataTable"& _ 
                            "' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAPItemsDataTable.SpecificFanPower_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property HeatExchangeEfficiency_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSAPItemsDataTable.HeatExchangeEfficiency_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'HeatExchangeEfficiency_Value' nella tabella 'SAPItemsDat"& _ 
                            "aTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAPItemsDataTable.HeatExchangeEfficiency_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EnergySavingTrustBestPracticePerformanceCompliant_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableSAPItemsDataTable.EnergySavingTrustBestPracticePerformanceCompliant_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'EnergySavingTrustBestPracticePerformanceCompliant_Value'"& _ 
                            " nella tabella 'SAPItemsDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSAPItemsDataTable.EnergySavingTrustBestPracticePerformanceCompliant_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsExhaustTerminalConfiguration_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSAPItemsDataTable.ExhaustTerminalConfiguration_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetExhaustTerminalConfiguration_ValueNull()
            Me(Me.tableSAPItemsDataTable.ExhaustTerminalConfiguration_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTotalExhaustFlowRate_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSAPItemsDataTable.TotalExhaustFlowRate_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTotalExhaustFlowRate_ValueNull()
            Me(Me.tableSAPItemsDataTable.TotalExhaustFlowRate_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTotalSupplyFlowRate_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSAPItemsDataTable.TotalSupplyFlowRate_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTotalSupplyFlowRate_ValueNull()
            Me(Me.tableSAPItemsDataTable.TotalSupplyFlowRate_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRegulationLevel_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSAPItemsDataTable.RegulationLevel_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRegulationLevel_ValueNull()
            Me(Me.tableSAPItemsDataTable.RegulationLevel_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSpecificFanPower_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSAPItemsDataTable.SpecificFanPower_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSpecificFanPower_ValueNull()
            Me(Me.tableSAPItemsDataTable.SpecificFanPower_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHeatExchangeEfficiency_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSAPItemsDataTable.HeatExchangeEfficiency_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHeatExchangeEfficiency_ValueNull()
            Me(Me.tableSAPItemsDataTable.HeatExchangeEfficiency_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEnergySavingTrustBestPracticePerformanceCompliant_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSAPItemsDataTable.EnergySavingTrustBestPracticePerformanceCompliant_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEnergySavingTrustBestPracticePerformanceCompliant_ValueNull()
            Me(Me.tableSAPItemsDataTable.EnergySavingTrustBestPracticePerformanceCompliant_ValueColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SoundPowerDataTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableSoundPowerDataTable As SoundPowerDataTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSoundPowerDataTable = CType(Me.Table,SoundPowerDataTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTable.TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Type' nella tabella 'SoundPowerDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTable.TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTable.CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Caption' nella tabella 'SoundPowerDataTable' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTable.CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LwA_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTable.LwA_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'LwA_Value' nella tabella 'SoundPowerDataTable' è DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTable.LwA_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Hz63_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTable.Hz63_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Hz63_Value' nella tabella 'SoundPowerDataTable' è DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTable.Hz63_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Hz125_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTable.Hz125_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Hz125_Value' nella tabella 'SoundPowerDataTable' è DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTable.Hz125_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Hz250_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTable.Hz250_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Hz250_Value' nella tabella 'SoundPowerDataTable' è DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTable.Hz250_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Hz500_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTable.Hz500_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Hz500_Value' nella tabella 'SoundPowerDataTable' è DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTable.Hz500_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Hz1000_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTable.Hz1000_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Hz1000_Value' nella tabella 'SoundPowerDataTable' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTable.Hz1000_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Hz2000_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTable.Hz2000_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Hz2000_Value' nella tabella 'SoundPowerDataTable' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTable.Hz2000_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Hz4000_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTable.Hz4000_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Hz4000_Value' nella tabella 'SoundPowerDataTable' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTable.Hz4000_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Hz8000_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTable.Hz8000_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Hz8000_Value' nella tabella 'SoundPowerDataTable' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTable.Hz8000_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Lp1_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTable.Lp1_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Lp1_Value' nella tabella 'SoundPowerDataTable' è DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTable.Lp1_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Lp2_Value() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerDataTable.Lp2_ValueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Lp2_Value' nella tabella 'SoundPowerDataTable' è DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerDataTable.Lp2_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTypeNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTable.TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTypeNull()
            Me(Me.tableSoundPowerDataTable.TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTable.CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCaptionNull()
            Me(Me.tableSoundPowerDataTable.CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLwA_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTable.LwA_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLwA_ValueNull()
            Me(Me.tableSoundPowerDataTable.LwA_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHz63_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTable.Hz63_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHz63_ValueNull()
            Me(Me.tableSoundPowerDataTable.Hz63_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHz125_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTable.Hz125_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHz125_ValueNull()
            Me(Me.tableSoundPowerDataTable.Hz125_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHz250_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTable.Hz250_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHz250_ValueNull()
            Me(Me.tableSoundPowerDataTable.Hz250_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHz500_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTable.Hz500_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHz500_ValueNull()
            Me(Me.tableSoundPowerDataTable.Hz500_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHz1000_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTable.Hz1000_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHz1000_ValueNull()
            Me(Me.tableSoundPowerDataTable.Hz1000_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHz2000_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTable.Hz2000_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHz2000_ValueNull()
            Me(Me.tableSoundPowerDataTable.Hz2000_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHz4000_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTable.Hz4000_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHz4000_ValueNull()
            Me(Me.tableSoundPowerDataTable.Hz4000_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHz8000_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTable.Hz8000_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHz8000_ValueNull()
            Me(Me.tableSoundPowerDataTable.Hz8000_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLp1_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTable.Lp1_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLp1_ValueNull()
            Me(Me.tableSoundPowerDataTable.Lp1_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLp2_ValueNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerDataTable.Lp2_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLp2_ValueNull()
            Me(Me.tableSoundPowerDataTable.Lp2_ValueColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SoundPowerHeaderDataTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableSoundPowerHeaderDataTable As SoundPowerHeaderDataTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSoundPowerHeaderDataTable = CType(Me.Table,SoundPowerHeaderDataTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Title() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerHeaderDataTable.TitleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Title' nella tabella 'SoundPowerHeaderDataTable' è DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerHeaderDataTable.TitleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerHeaderDataTable.CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Caption' nella tabella 'SoundPowerHeaderDataTable' è DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerHeaderDataTable.CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LwA_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerHeaderDataTable.LwA_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'LwA_Caption' nella tabella 'SoundPowerHeaderDataTable' è"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerHeaderDataTable.LwA_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Hz63_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerHeaderDataTable.Hz63_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Hz63_Caption' nella tabella 'SoundPowerHeaderDataTable' "& _ 
                            "è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerHeaderDataTable.Hz63_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Hz125_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerHeaderDataTable.Hz125_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Hz125_Caption' nella tabella 'SoundPowerHeaderDataTable'"& _ 
                            " è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerHeaderDataTable.Hz125_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Hz250_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerHeaderDataTable.Hz250_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Hz250_Caption' nella tabella 'SoundPowerHeaderDataTable'"& _ 
                            " è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerHeaderDataTable.Hz250_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Hz500_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerHeaderDataTable.Hz500_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Hz500_Caption' nella tabella 'SoundPowerHeaderDataTable'"& _ 
                            " è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerHeaderDataTable.Hz500_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Hz1000_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerHeaderDataTable.Hz1000_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Hz1000_Caption' nella tabella 'SoundPowerHeaderDataTable"& _ 
                            "' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerHeaderDataTable.Hz1000_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Hz2000_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerHeaderDataTable.Hz2000_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Hz2000_Caption' nella tabella 'SoundPowerHeaderDataTable"& _ 
                            "' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerHeaderDataTable.Hz2000_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Hz4000_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerHeaderDataTable.Hz4000_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Hz4000_Caption' nella tabella 'SoundPowerHeaderDataTable"& _ 
                            "' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerHeaderDataTable.Hz4000_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Hz8000_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerHeaderDataTable.Hz8000_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Hz8000_Caption' nella tabella 'SoundPowerHeaderDataTable"& _ 
                            "' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerHeaderDataTable.Hz8000_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Lp1Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerHeaderDataTable.Lp1CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Lp1Caption' nella tabella 'SoundPowerHeaderDataTable' è "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerHeaderDataTable.Lp1CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property sndaddtorep_bool() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerHeaderDataTable.sndaddtorep_boolColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'sndaddtorep_bool' nella tabella 'SoundPowerHeaderDataTab"& _ 
                            "le' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerHeaderDataTable.sndaddtorep_boolColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Lp2Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableSoundPowerHeaderDataTable.Lp2CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Lp2Caption' nella tabella 'SoundPowerHeaderDataTable' è "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSoundPowerHeaderDataTable.Lp2CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTitleNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerHeaderDataTable.TitleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTitleNull()
            Me(Me.tableSoundPowerHeaderDataTable.TitleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerHeaderDataTable.CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCaptionNull()
            Me(Me.tableSoundPowerHeaderDataTable.CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLwA_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerHeaderDataTable.LwA_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLwA_CaptionNull()
            Me(Me.tableSoundPowerHeaderDataTable.LwA_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHz63_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerHeaderDataTable.Hz63_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHz63_CaptionNull()
            Me(Me.tableSoundPowerHeaderDataTable.Hz63_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHz125_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerHeaderDataTable.Hz125_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHz125_CaptionNull()
            Me(Me.tableSoundPowerHeaderDataTable.Hz125_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHz250_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerHeaderDataTable.Hz250_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHz250_CaptionNull()
            Me(Me.tableSoundPowerHeaderDataTable.Hz250_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHz500_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerHeaderDataTable.Hz500_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHz500_CaptionNull()
            Me(Me.tableSoundPowerHeaderDataTable.Hz500_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHz1000_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerHeaderDataTable.Hz1000_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHz1000_CaptionNull()
            Me(Me.tableSoundPowerHeaderDataTable.Hz1000_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHz2000_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerHeaderDataTable.Hz2000_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHz2000_CaptionNull()
            Me(Me.tableSoundPowerHeaderDataTable.Hz2000_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHz4000_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerHeaderDataTable.Hz4000_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHz4000_CaptionNull()
            Me(Me.tableSoundPowerHeaderDataTable.Hz4000_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHz8000_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerHeaderDataTable.Hz8000_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHz8000_CaptionNull()
            Me(Me.tableSoundPowerHeaderDataTable.Hz8000_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLp1CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerHeaderDataTable.Lp1CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLp1CaptionNull()
            Me(Me.tableSoundPowerHeaderDataTable.Lp1CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Issndaddtorep_boolNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerHeaderDataTable.sndaddtorep_boolColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setsndaddtorep_boolNull()
            Me(Me.tableSoundPowerHeaderDataTable.sndaddtorep_boolColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLp2CaptionNull() As Boolean
            Return Me.IsNull(Me.tableSoundPowerHeaderDataTable.Lp2CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLp2CaptionNull()
            Me(Me.tableSoundPowerHeaderDataTable.Lp2CaptionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CO2LevelRoomRow
        Inherits Global.System.Data.DataRow
        
        Private tableCO2LevelRoom As CO2LevelRoomDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCO2LevelRoom = CType(Me.Table,CO2LevelRoomDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RoomHeight() As Double
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelRoom.RoomHeightColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'RoomHeight' nella tabella 'CO2LevelRoom' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelRoom.RoomHeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RoomWidth() As Double
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelRoom.RoomWidthColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'RoomWidth' nella tabella 'CO2LevelRoom' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelRoom.RoomWidthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RoomLength() As Double
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelRoom.RoomLengthColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'RoomLength' nella tabella 'CO2LevelRoom' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelRoom.RoomLengthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Title() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelRoom.TitleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Title' nella tabella 'CO2LevelRoom' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelRoom.TitleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RoomHeight_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelRoom.RoomHeight_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'RoomHeight_Caption' nella tabella 'CO2LevelRoom' è DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelRoom.RoomHeight_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RoomLength_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelRoom.RoomLength_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'RoomLength_Caption' nella tabella 'CO2LevelRoom' è DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelRoom.RoomLength_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RoomWidth_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelRoom.RoomWidth_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'RoomWidth_Caption' nella tabella 'CO2LevelRoom' è DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelRoom.RoomWidth_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRoomHeightNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelRoom.RoomHeightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRoomHeightNull()
            Me(Me.tableCO2LevelRoom.RoomHeightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRoomWidthNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelRoom.RoomWidthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRoomWidthNull()
            Me(Me.tableCO2LevelRoom.RoomWidthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRoomLengthNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelRoom.RoomLengthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRoomLengthNull()
            Me(Me.tableCO2LevelRoom.RoomLengthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTitleNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelRoom.TitleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTitleNull()
            Me(Me.tableCO2LevelRoom.TitleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRoomHeight_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelRoom.RoomHeight_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRoomHeight_CaptionNull()
            Me(Me.tableCO2LevelRoom.RoomHeight_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRoomLength_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelRoom.RoomLength_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRoomLength_CaptionNull()
            Me(Me.tableCO2LevelRoom.RoomLength_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRoomWidth_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelRoom.RoomWidth_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRoomWidth_CaptionNull()
            Me(Me.tableCO2LevelRoom.RoomWidth_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CO2LevelUseRow
        Inherits Global.System.Data.DataRow
        
        Private tableCO2LevelUse As CO2LevelUseDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCO2LevelUse = CType(Me.Table,CO2LevelUseDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PeriodPresence() As Double
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelUse.PeriodPresenceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'PeriodPresence' nella tabella 'CO2LevelUse' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelUse.PeriodPresenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PeoplePresence() As Double
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelUse.PeoplePresenceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'PeoplePresence' nella tabella 'CO2LevelUse' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelUse.PeoplePresenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PeriodBreak() As Double
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelUse.PeriodBreakColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'PeriodBreak' nella tabella 'CO2LevelUse' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelUse.PeriodBreakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Title() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelUse.TitleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Title' nella tabella 'CO2LevelUse' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelUse.TitleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Period_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelUse.Period_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Period_Caption' nella tabella 'CO2LevelUse' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelUse.Period_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property People_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelUse.People_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'People_Caption' nella tabella 'CO2LevelUse' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelUse.People_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Presence_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelUse.Presence_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Presence_Caption' nella tabella 'CO2LevelUse' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelUse.Presence_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PeopleBreak() As Double
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelUse.PeopleBreakColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'PeopleBreak' nella tabella 'CO2LevelUse' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelUse.PeopleBreakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Break_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelUse.Break_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Break_Caption' nella tabella 'CO2LevelUse' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelUse.Break_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LevelAct() As Double
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelUse.LevelActColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'LevelAct' nella tabella 'CO2LevelUse' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelUse.LevelActColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LevelAct_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelUse.LevelAct_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'LevelAct_Caption' nella tabella 'CO2LevelUse' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelUse.LevelAct_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CO2prod() As Double
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelUse.CO2prodColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'CO2prod' nella tabella 'CO2LevelUse' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelUse.CO2prodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CO2prod_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelUse.CO2prod_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'CO2prod_Caption' nella tabella 'CO2LevelUse' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelUse.CO2prod_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPeriodPresenceNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelUse.PeriodPresenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPeriodPresenceNull()
            Me(Me.tableCO2LevelUse.PeriodPresenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPeoplePresenceNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelUse.PeoplePresenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPeoplePresenceNull()
            Me(Me.tableCO2LevelUse.PeoplePresenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPeriodBreakNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelUse.PeriodBreakColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPeriodBreakNull()
            Me(Me.tableCO2LevelUse.PeriodBreakColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTitleNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelUse.TitleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTitleNull()
            Me(Me.tableCO2LevelUse.TitleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPeriod_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelUse.Period_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPeriod_CaptionNull()
            Me(Me.tableCO2LevelUse.Period_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPeople_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelUse.People_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPeople_CaptionNull()
            Me(Me.tableCO2LevelUse.People_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPresence_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelUse.Presence_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPresence_CaptionNull()
            Me(Me.tableCO2LevelUse.Presence_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPeopleBreakNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelUse.PeopleBreakColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPeopleBreakNull()
            Me(Me.tableCO2LevelUse.PeopleBreakColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBreak_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelUse.Break_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBreak_CaptionNull()
            Me(Me.tableCO2LevelUse.Break_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLevelActNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelUse.LevelActColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLevelActNull()
            Me(Me.tableCO2LevelUse.LevelActColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLevelAct_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelUse.LevelAct_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLevelAct_CaptionNull()
            Me(Me.tableCO2LevelUse.LevelAct_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCO2prodNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelUse.CO2prodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCO2prodNull()
            Me(Me.tableCO2LevelUse.CO2prodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCO2prod_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelUse.CO2prod_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCO2prod_CaptionNull()
            Me(Me.tableCO2LevelUse.CO2prod_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CO2LevelParametersRow
        Inherits Global.System.Data.DataRow
        
        Private tableCO2LevelParameters As CO2LevelParametersDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCO2LevelParameters = CType(Me.Table,CO2LevelParametersDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Title() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelParameters.TitleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Title' nella tabella 'CO2LevelParameters' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelParameters.TitleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CalcMeth_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelParameters.CalcMeth_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'CalcMeth_Caption' nella tabella 'CO2LevelParameters' è D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelParameters.CalcMeth_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CalcMeth() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelParameters.CalcMethColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'CalcMeth' nella tabella 'CO2LevelParameters' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelParameters.CalcMethColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property StdPreset_Caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelParameters.StdPreset_CaptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'StdPreset_Caption' nella tabella 'CO2LevelParameters' è "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelParameters.StdPreset_CaptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property StdPreset() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelParameters.StdPresetColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'StdPreset' nella tabella 'CO2LevelParameters' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelParameters.StdPresetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OutCO2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelParameters.OutCO2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'OutCO2' nella tabella 'CO2LevelParameters' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelParameters.OutCO2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MaxCO2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelParameters.MaxCO2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'MaxCO2' nella tabella 'CO2LevelParameters' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelParameters.MaxCO2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AF_demand() As Double
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelParameters.AF_demandColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'AF_demand' nella tabella 'CO2LevelParameters' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelParameters.AF_demandColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AF_person() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelParameters.AF_personColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'AF_person' nella tabella 'CO2LevelParameters' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelParameters.AF_personColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AF_area() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelParameters.AF_areaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'AF_area' nella tabella 'CO2LevelParameters' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelParameters.AF_areaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OutCO2_caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelParameters.OutCO2_captionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'OutCO2_caption' nella tabella 'CO2LevelParameters' è DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelParameters.OutCO2_captionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MaxCO2_caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelParameters.MaxCO2_captionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'MaxCO2_caption' nella tabella 'CO2LevelParameters' è DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelParameters.MaxCO2_captionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AF_demand_caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelParameters.AF_demand_captionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'AF_demand_caption' nella tabella 'CO2LevelParameters' è "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelParameters.AF_demand_captionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AF_person_caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelParameters.AF_person_captionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'AF_person_caption' nella tabella 'CO2LevelParameters' è "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelParameters.AF_person_captionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AF_area_caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelParameters.AF_area_captionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'AF_area_caption' nella tabella 'CO2LevelParameters' è DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelParameters.AF_area_captionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AF_area_m3h_caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelParameters.AF_area_m3h_captionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'AF_area_m3h_caption' nella tabella 'CO2LevelParameters' "& _ 
                            "è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelParameters.AF_area_m3h_captionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property addtorep_bool() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelParameters.addtorep_boolColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'addtorep_bool' nella tabella 'CO2LevelParameters' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelParameters.addtorep_boolColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AF_demand_m3h() As Double
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelParameters.AF_demand_m3hColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'AF_demand_m3h' nella tabella 'CO2LevelParameters' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelParameters.AF_demand_m3hColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AF_person_m3h() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelParameters.AF_person_m3hColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'AF_person_m3h' nella tabella 'CO2LevelParameters' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelParameters.AF_person_m3hColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AF_area_m3h() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelParameters.AF_area_m3hColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'AF_area_m3h' nella tabella 'CO2LevelParameters' è DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelParameters.AF_area_m3hColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AF_demand_m3h_caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelParameters.AF_demand_m3h_captionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'AF_demand_m3h_caption' nella tabella 'CO2LevelParameters"& _ 
                            "' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelParameters.AF_demand_m3h_captionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AF_person_m3h_caption() As String
            Get
                Try 
                    Return CType(Me(Me.tableCO2LevelParameters.AF_person_m3h_captionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'AF_person_m3h_caption' nella tabella 'CO2LevelParameters"& _ 
                            "' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCO2LevelParameters.AF_person_m3h_captionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTitleNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelParameters.TitleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTitleNull()
            Me(Me.tableCO2LevelParameters.TitleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCalcMeth_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelParameters.CalcMeth_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCalcMeth_CaptionNull()
            Me(Me.tableCO2LevelParameters.CalcMeth_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCalcMethNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelParameters.CalcMethColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCalcMethNull()
            Me(Me.tableCO2LevelParameters.CalcMethColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsStdPreset_CaptionNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelParameters.StdPreset_CaptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetStdPreset_CaptionNull()
            Me(Me.tableCO2LevelParameters.StdPreset_CaptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsStdPresetNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelParameters.StdPresetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetStdPresetNull()
            Me(Me.tableCO2LevelParameters.StdPresetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOutCO2Null() As Boolean
            Return Me.IsNull(Me.tableCO2LevelParameters.OutCO2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOutCO2Null()
            Me(Me.tableCO2LevelParameters.OutCO2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMaxCO2Null() As Boolean
            Return Me.IsNull(Me.tableCO2LevelParameters.MaxCO2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMaxCO2Null()
            Me(Me.tableCO2LevelParameters.MaxCO2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAF_demandNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelParameters.AF_demandColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAF_demandNull()
            Me(Me.tableCO2LevelParameters.AF_demandColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAF_personNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelParameters.AF_personColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAF_personNull()
            Me(Me.tableCO2LevelParameters.AF_personColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAF_areaNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelParameters.AF_areaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAF_areaNull()
            Me(Me.tableCO2LevelParameters.AF_areaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOutCO2_captionNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelParameters.OutCO2_captionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOutCO2_captionNull()
            Me(Me.tableCO2LevelParameters.OutCO2_captionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMaxCO2_captionNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelParameters.MaxCO2_captionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMaxCO2_captionNull()
            Me(Me.tableCO2LevelParameters.MaxCO2_captionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAF_demand_captionNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelParameters.AF_demand_captionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAF_demand_captionNull()
            Me(Me.tableCO2LevelParameters.AF_demand_captionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAF_person_captionNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelParameters.AF_person_captionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAF_person_captionNull()
            Me(Me.tableCO2LevelParameters.AF_person_captionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAF_area_captionNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelParameters.AF_area_captionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAF_area_captionNull()
            Me(Me.tableCO2LevelParameters.AF_area_captionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAF_area_m3h_captionNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelParameters.AF_area_m3h_captionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAF_area_m3h_captionNull()
            Me(Me.tableCO2LevelParameters.AF_area_m3h_captionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isaddtorep_boolNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelParameters.addtorep_boolColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setaddtorep_boolNull()
            Me(Me.tableCO2LevelParameters.addtorep_boolColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAF_demand_m3hNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelParameters.AF_demand_m3hColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAF_demand_m3hNull()
            Me(Me.tableCO2LevelParameters.AF_demand_m3hColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAF_person_m3hNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelParameters.AF_person_m3hColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAF_person_m3hNull()
            Me(Me.tableCO2LevelParameters.AF_person_m3hColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAF_area_m3hNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelParameters.AF_area_m3hColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAF_area_m3hNull()
            Me(Me.tableCO2LevelParameters.AF_area_m3hColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAF_demand_m3h_captionNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelParameters.AF_demand_m3h_captionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAF_demand_m3h_captionNull()
            Me(Me.tableCO2LevelParameters.AF_demand_m3h_captionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAF_person_m3h_captionNull() As Boolean
            Return Me.IsNull(Me.tableCO2LevelParameters.AF_person_m3h_captionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAF_person_m3h_captionNull()
            Me(Me.tableCO2LevelParameters.AF_person_m3h_captionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class HeaderDataTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As HeaderDataTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As HeaderDataTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As HeaderDataTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class PerformanceAccordanceDataTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PerformanceAccordanceDataTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As PerformanceAccordanceDataTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As PerformanceAccordanceDataTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class WorkingPointDataTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As WorkingPointDataTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As WorkingPointDataTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As WorkingPointDataTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class TemperatureConditionsAndHumidityDataTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TemperatureConditionsAndHumidityDataTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As TemperatureConditionsAndHumidityDataTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As TemperatureConditionsAndHumidityDataTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class HeatExchangerPerformancesDataTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As HeatExchangerPerformancesDataTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As HeatExchangerPerformancesDataTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As HeatExchangerPerformancesDataTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class SoundPowerDataTableOldRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SoundPowerDataTableOldRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As SoundPowerDataTableOldRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As SoundPowerDataTableOldRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class DiagramDataTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DiagramDataTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As DiagramDataTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As DiagramDataTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class SAPDataTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SAPDataTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As SAPDataTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As SAPDataTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class SAPItemsDataTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SAPItemsDataTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As SAPItemsDataTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As SAPItemsDataTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class SoundPowerDataTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SoundPowerDataTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As SoundPowerDataTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As SoundPowerDataTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class SoundPowerHeaderDataTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SoundPowerHeaderDataTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As SoundPowerHeaderDataTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As SoundPowerHeaderDataTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class CO2LevelRoomRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CO2LevelRoomRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As CO2LevelRoomRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As CO2LevelRoomRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class CO2LevelUseRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CO2LevelUseRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As CO2LevelUseRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As CO2LevelUseRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class CO2LevelParametersRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CO2LevelParametersRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As CO2LevelParametersRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As CO2LevelParametersRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
